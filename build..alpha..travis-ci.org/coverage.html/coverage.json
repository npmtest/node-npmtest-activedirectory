{"/home/travis/build/npmtest/node-npmtest-activedirectory/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-activedirectory/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_activedirectory */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-activedirectory/lib.npmtest_activedirectory.js":{"path":"/home/travis/build/npmtest/node-npmtest-activedirectory/lib.npmtest_activedirectory.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":60}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":66}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_activedirectory */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_activedirectory = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_activedirectory = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-activedirectory/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-activedirectory/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":59}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":73},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-activedirectory && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_activedirectory */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_activedirectory","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_activedirectory.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_activedirectory.rollup.js'] =","            local.assetsDict['/assets.npmtest_activedirectory.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_activedirectory.__dirname + '/lib.npmtest_activedirectory.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-activedirectory/node_modules/activedirectory/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-activedirectory/node_modules/activedirectory/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":50}}},"branchMap":{},"code":["module.exports = require('./lib/activedirectory');"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-activedirectory/node_modules/activedirectory/lib/activedirectory.js":{"path":"/home/travis/build/npmtest/node-npmtest-activedirectory/node_modules/activedirectory/lib/activedirectory.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":1,"51":1,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":0,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":0,"75":0,"76":0,"77":0,"78":1,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":1,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":1,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":1,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":1,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":1,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":1,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":1,"146":0,"147":1,"148":0,"149":1,"150":0,"151":1,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":1,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":1,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":1,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":1,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":1,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":1,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":1,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":1,"290":0,"291":0,"292":1,"293":0,"294":0,"295":0,"296":1,"297":0,"298":0,"299":0,"300":1,"301":0,"302":0,"303":0,"304":0,"305":1,"306":0,"307":0,"308":0,"309":0,"310":1,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":1,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":1,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":1,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":1,"424":0,"425":1,"426":0,"427":1,"428":0,"429":1,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":1,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":1,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":1,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":1,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":1,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":1,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":1,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":1,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":1,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":1,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":1,"699":0,"700":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":0,"723":0,"724":0,"725":0,"726":0,"727":0,"728":0,"729":0,"730":0,"731":0,"732":0,"733":0,"734":1,"735":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":0,"742":0,"743":0,"744":0,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":0,"753":0,"754":0,"755":0,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"772":0,"773":0,"774":0,"775":0,"776":0,"777":1,"778":0,"779":0,"780":0,"781":0,"782":0,"783":0,"784":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"795":0,"796":0,"797":0,"798":0,"799":0,"800":0,"801":0,"802":0,"803":0,"804":0,"805":0,"806":0,"807":0,"808":0,"809":0,"810":0,"811":0,"812":0,"813":0,"814":0,"815":0,"816":0,"817":0,"818":0,"819":1,"820":0,"821":0,"822":0,"823":0,"824":0,"825":0,"826":0,"827":0,"828":0,"829":0,"830":0,"831":0,"832":0,"833":0,"834":0,"835":0,"836":0,"837":0,"838":0,"839":0,"840":0,"841":0,"842":0,"843":0,"844":0,"845":0,"846":0,"847":0,"848":0,"849":0,"850":0,"851":0,"852":0,"853":0,"854":0,"855":0,"856":0,"857":0,"858":0,"859":0,"860":0,"861":0,"862":0,"863":0,"864":0,"865":1,"866":0,"867":0,"868":0,"869":0,"870":0,"871":0,"872":1,"873":0,"874":0,"875":0,"876":0,"877":0,"878":0,"879":0,"880":0,"881":0,"882":0,"883":0,"884":0,"885":0,"886":0,"887":0,"888":1,"889":0,"890":0,"891":0,"892":0,"893":0,"894":0,"895":0,"896":0,"897":0,"898":0,"899":0,"900":1,"901":0,"902":0,"903":0,"904":0,"905":0,"906":0,"907":0,"908":0,"909":0,"910":0,"911":0,"912":0,"913":0,"914":0,"915":0,"916":0,"917":0,"918":0,"919":0,"920":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0,0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0,0],"58":[0,0],"59":[0,0],"60":[0,0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,0],"193":[0,0],"194":[0,0],"195":[0,0],"196":[0,0],"197":[0,0],"198":[0,0],"199":[0,0],"200":[0,0],"201":[0,0],"202":[0,0],"203":[0,0],"204":[0,0],"205":[0,0],"206":[0,0],"207":[0,0],"208":[0,0],"209":[0,0],"210":[0,0],"211":[0,0],"212":[0,0,0],"213":[0,0],"214":[0,0],"215":[0,0],"216":[0,0],"217":[0,0],"218":[0,0],"219":[0,0],"220":[0,0],"221":[0,0],"222":[0,0],"223":[0,0],"224":[0,0],"225":[0,0],"226":[0,0],"227":[0,0],"228":[0,0],"229":[0,0],"230":[0,0],"231":[0,0],"232":[0,0],"233":[0,0],"234":[0,0],"235":[0,0],"236":[0,0],"237":[0,0],"238":[0,0],"239":[0,0],"240":[0,0],"241":[0,0],"242":[0,0],"243":[0,0],"244":[0,0],"245":[0,0],"246":[0,0],"247":[0,0],"248":[0,0],"249":[0,0],"250":[0,0],"251":[0,0],"252":[0,0],"253":[0,0],"254":[0,0],"255":[0,0],"256":[0,0],"257":[0,0],"258":[0,0],"259":[0,0],"260":[0,0],"261":[0,0],"262":[0,0],"263":[0,0],"264":[0,0],"265":[0,0],"266":[0,0],"267":[0,0],"268":[0,0],"269":[0,0],"270":[0,0],"271":[0,0],"272":[0,0],"273":[0,0],"274":[0,0],"275":[0,0],"276":[0,0],"277":[0,0,0],"278":[0,0],"279":[0,0],"280":[0,0],"281":[0,0],"282":[0,0],"283":[0,0],"284":[0,0],"285":[0,0],"286":[0,0],"287":[0,0],"288":[0,0],"289":[0,0],"290":[0,0],"291":[0,0],"292":[0,0],"293":[0,0],"294":[0,0],"295":[0,0],"296":[0,0],"297":[0,0,0],"298":[0,0],"299":[0,0],"300":[0,0],"301":[0,0],"302":[0,0],"303":[0,0],"304":[0,0],"305":[0,0],"306":[0,0],"307":[0,0],"308":[0,0],"309":[0,0],"310":[0,0],"311":[0,0],"312":[0,0],"313":[0,0],"314":[0,0],"315":[0,0],"316":[0,0],"317":[0,0,0],"318":[0,0],"319":[0,0],"320":[0,0],"321":[0,0],"322":[0,0],"323":[0,0],"324":[0,0],"325":[0,0],"326":[0,0],"327":[0,0],"328":[0,0],"329":[0,0],"330":[0,0],"331":[0,0],"332":[0,0],"333":[0,0],"334":[0,0],"335":[0,0],"336":[0,0],"337":[0,0],"338":[0,0],"339":[0,0],"340":[0,0],"341":[0,0],"342":[0,0],"343":[0,0],"344":[0,0],"345":[0,0],"346":[0,0],"347":[0,0],"348":[0,0],"349":[0,0],"350":[0,0],"351":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0},"fnMap":{"1":{"name":"(anonymous_1)","line":69,"loc":{"start":{"line":69,"column":22},"end":{"line":69,"column":74}}},"2":{"name":"truncateLogOutput","line":128,"loc":{"start":{"line":128,"column":0},"end":{"line":128,"column":46}}},"3":{"name":"hasEvents","line":148,"loc":{"start":{"line":148,"column":0},"end":{"line":148,"column":26}}},"4":{"name":"isDistinguishedName","line":159,"loc":{"start":{"line":159,"column":0},"end":{"line":159,"column":36}}},"5":{"name":"parseDistinguishedName","line":174,"loc":{"start":{"line":174,"column":0},"end":{"line":174,"column":36}}},"6":{"name":"getUserQueryFilter","line":189,"loc":{"start":{"line":189,"column":0},"end":{"line":189,"column":38}}},"7":{"name":"getCompoundFilter","line":208,"loc":{"start":{"line":208,"column":0},"end":{"line":208,"column":35}}},"8":{"name":"getGroupQueryFilter","line":225,"loc":{"start":{"line":225,"column":0},"end":{"line":225,"column":40}}},"9":{"name":"isGroupResult","line":241,"loc":{"start":{"line":241,"column":0},"end":{"line":241,"column":29}}},"10":{"name":"(anonymous_10)","line":251,"loc":{"start":{"line":251,"column":35},"end":{"line":251,"column":47}}},"11":{"name":"isUserResult","line":261,"loc":{"start":{"line":261,"column":0},"end":{"line":261,"column":28}}},"12":{"name":"(anonymous_12)","line":271,"loc":{"start":{"line":271,"column":35},"end":{"line":271,"column":47}}},"13":{"name":"createClient","line":283,"loc":{"start":{"line":283,"column":0},"end":{"line":283,"column":33}}},"14":{"name":"isAllowedReferral","line":302,"loc":{"start":{"line":302,"column":0},"end":{"line":302,"column":37}}},"15":{"name":"(anonymous_15)","line":307,"loc":{"start":{"line":307,"column":43},"end":{"line":307,"column":63}}},"16":{"name":"getLdapOpts","line":319,"loc":{"start":{"line":319,"column":0},"end":{"line":319,"column":27}}},"17":{"name":"getLdapClientOpts","line":329,"loc":{"start":{"line":329,"column":0},"end":{"line":329,"column":33}}},"18":{"name":"getLdapSearchOpts","line":347,"loc":{"start":{"line":347,"column":0},"end":{"line":347,"column":33}}},"19":{"name":"search","line":364,"loc":{"start":{"line":364,"column":0},"end":{"line":364,"column":40}}},"20":{"name":"removeReferral","line":390,"loc":{"start":{"line":390,"column":2},"end":{"line":390,"column":34}}},"21":{"name":"onEntryParser","line":405,"loc":{"start":{"line":405,"column":81},"end":{"line":405,"column":125}}},"22":{"name":"onSearchEntry","line":413,"loc":{"start":{"line":413,"column":2},"end":{"line":413,"column":32}}},"23":{"name":"(anonymous_23)","line":421,"loc":{"start":{"line":421,"column":50},"end":{"line":421,"column":70}}},"24":{"name":"(anonymous_24)","line":425,"loc":{"start":{"line":425,"column":35},"end":{"line":425,"column":50}}},"25":{"name":"onReferralChase","line":439,"loc":{"start":{"line":439,"column":2},"end":{"line":439,"column":32}}},"26":{"name":"(anonymous_26)","line":451,"loc":{"start":{"line":451,"column":75},"end":{"line":451,"column":94}}},"27":{"name":"onReferralError","line":456,"loc":{"start":{"line":456,"column":10},"end":{"line":456,"column":40}}},"28":{"name":"(anonymous_28)","line":470,"loc":{"start":{"line":470,"column":24},"end":{"line":470,"column":41}}},"29":{"name":"onClientError","line":484,"loc":{"start":{"line":484,"column":2},"end":{"line":484,"column":35}}},"30":{"name":"onSearchEnd","line":500,"loc":{"start":{"line":500,"column":2},"end":{"line":500,"column":31}}},"31":{"name":"(anonymous_31)","line":514,"loc":{"start":{"line":514,"column":23},"end":{"line":514,"column":41}}},"32":{"name":"(anonymous_32)","line":520,"loc":{"start":{"line":520,"column":25},"end":{"line":520,"column":43}}},"33":{"name":"onSearch","line":529,"loc":{"start":{"line":529,"column":53},"end":{"line":529,"column":81}}},"34":{"name":"(anonymous_34)","line":537,"loc":{"start":{"line":537,"column":20},"end":{"line":537,"column":34}}},"35":{"name":"(anonymous_35)","line":538,"loc":{"start":{"line":538,"column":18},"end":{"line":538,"column":35}}},"36":{"name":"parseRangeAttributes","line":553,"loc":{"start":{"line":553,"column":0},"end":{"line":553,"column":54}}},"37":{"name":"(anonymous_37)","line":575,"loc":{"start":{"line":575,"column":26},"end":{"line":575,"column":58}}},"38":{"name":"onSearch","line":601,"loc":{"start":{"line":601,"column":26},"end":{"line":601,"column":58}}},"39":{"name":"shouldIncludeAllAttributes","line":628,"loc":{"start":{"line":628,"column":0},"end":{"line":628,"column":48}}},"40":{"name":"(anonymous_40)","line":631,"loc":{"start":{"line":631,"column":34},"end":{"line":631,"column":54}}},"41":{"name":"getRequiredLdapAttributesForGroup","line":644,"loc":{"start":{"line":644,"column":0},"end":{"line":644,"column":49}}},"42":{"name":"getRequiredLdapAttributesForUser","line":659,"loc":{"start":{"line":659,"column":0},"end":{"line":659,"column":48}}},"43":{"name":"joinAttributes","line":670,"loc":{"start":{"line":670,"column":0},"end":{"line":670,"column":26}}},"44":{"name":"pickAttributes","line":687,"loc":{"start":{"line":687,"column":0},"end":{"line":687,"column":44}}},"45":{"name":"(anonymous_45)","line":689,"loc":{"start":{"line":689,"column":17},"end":{"line":689,"column":28}}},"46":{"name":"getGroupMembershipForDN","line":704,"loc":{"start":{"line":704,"column":0},"end":{"line":704,"column":60}}},"47":{"name":"(anonymous_47)","line":740,"loc":{"start":{"line":740,"column":26},"end":{"line":740,"column":49}}},"48":{"name":"(anonymous_48)","line":747,"loc":{"start":{"line":747,"column":27},"end":{"line":747,"column":58}}},"49":{"name":"(anonymous_49)","line":757,"loc":{"start":{"line":757,"column":21},"end":{"line":757,"column":33}}},"50":{"name":"(anonymous_50)","line":770,"loc":{"start":{"line":770,"column":67},"end":{"line":770,"column":95}}},"51":{"name":"(anonymous_51)","line":776,"loc":{"start":{"line":776,"column":45},"end":{"line":776,"column":67}}},"52":{"name":"(anonymous_52)","line":782,"loc":{"start":{"line":782,"column":75},"end":{"line":782,"column":91}}},"53":{"name":"(anonymous_53)","line":790,"loc":{"start":{"line":790,"column":7},"end":{"line":790,"column":21}}},"54":{"name":"(anonymous_54)","line":797,"loc":{"start":{"line":797,"column":40},"end":{"line":797,"column":56}}},"55":{"name":"(anonymous_55)","line":797,"loc":{"start":{"line":797,"column":99},"end":{"line":797,"column":115}}},"56":{"name":"(anonymous_56)","line":801,"loc":{"start":{"line":801,"column":90},"end":{"line":801,"column":106}}},"57":{"name":"getDistinguishedNames","line":817,"loc":{"start":{"line":817,"column":0},"end":{"line":817,"column":55}}},"58":{"name":"(anonymous_58)","line":836,"loc":{"start":{"line":836,"column":26},"end":{"line":836,"column":49}}},"59":{"name":"(anonymous_59)","line":843,"loc":{"start":{"line":843,"column":30},"end":{"line":843,"column":47}}},"60":{"name":"getUserDistinguishedName","line":860,"loc":{"start":{"line":860,"column":0},"end":{"line":860,"column":60}}},"61":{"name":"(anonymous_61)","line":877,"loc":{"start":{"line":877,"column":71},"end":{"line":877,"column":90}}},"62":{"name":"getGroupDistinguishedName","line":897,"loc":{"start":{"line":897,"column":0},"end":{"line":897,"column":62}}},"63":{"name":"(anonymous_63)","line":914,"loc":{"start":{"line":914,"column":73},"end":{"line":914,"column":92}}},"64":{"name":"_getDefaultAttributes","line":931,"loc":{"start":{"line":931,"column":50},"end":{"line":931,"column":83}}},"65":{"name":"_getDefaultUserAttributes","line":940,"loc":{"start":{"line":940,"column":54},"end":{"line":940,"column":91}}},"66":{"name":"_getDefaultGroupAttributes","line":949,"loc":{"start":{"line":949,"column":55},"end":{"line":949,"column":93}}},"67":{"name":"getUsersForGroup","line":961,"loc":{"start":{"line":961,"column":45},"end":{"line":961,"column":98}}},"68":{"name":"(anonymous_68)","line":977,"loc":{"start":{"line":977,"column":28},"end":{"line":977,"column":49}}},"69":{"name":"chunk","line":999,"loc":{"start":{"line":999,"column":4},"end":{"line":999,"column":35}}},"70":{"name":"getUsersForGroup_ChunkItem","line":1015,"loc":{"start":{"line":1015,"column":23},"end":{"line":1015,"column":88}}},"71":{"name":"(anonymous_71)","line":1021,"loc":{"start":{"line":1021,"column":43},"end":{"line":1021,"column":73}}},"72":{"name":"onSearch","line":1032,"loc":{"start":{"line":1032,"column":35},"end":{"line":1032,"column":67}}},"73":{"name":"(anonymous_73)","line":1039,"loc":{"start":{"line":1039,"column":31},"end":{"line":1039,"column":63}}},"74":{"name":"(anonymous_74)","line":1049,"loc":{"start":{"line":1049,"column":51},"end":{"line":1049,"column":78}}},"75":{"name":"(anonymous_75)","line":1054,"loc":{"start":{"line":1054,"column":11},"end":{"line":1054,"column":25}}},"76":{"name":"getUsersForGroup_ChunkComplete","line":1061,"loc":{"start":{"line":1061,"column":7},"end":{"line":1061,"column":52}}},"77":{"name":"(anonymous_77)","line":1063,"loc":{"start":{"line":1063,"column":28},"end":{"line":1063,"column":43}}},"78":{"name":"getGroupMembershipForUser","line":1092,"loc":{"start":{"line":1092,"column":54},"end":{"line":1092,"column":115}}},"79":{"name":"(anonymous_79)","line":1102,"loc":{"start":{"line":1102,"column":54},"end":{"line":1102,"column":72}}},"80":{"name":"(anonymous_80)","line":1113,"loc":{"start":{"line":1113,"column":49},"end":{"line":1113,"column":71}}},"81":{"name":"(anonymous_81)","line":1120,"loc":{"start":{"line":1120,"column":21},"end":{"line":1120,"column":37}}},"82":{"name":"getGroupMembershipForGroup","line":1138,"loc":{"start":{"line":1138,"column":55},"end":{"line":1138,"column":118}}},"83":{"name":"(anonymous_83)","line":1148,"loc":{"start":{"line":1148,"column":56},"end":{"line":1148,"column":74}}},"84":{"name":"(anonymous_84)","line":1159,"loc":{"start":{"line":1159,"column":49},"end":{"line":1159,"column":71}}},"85":{"name":"(anonymous_85)","line":1166,"loc":{"start":{"line":1166,"column":21},"end":{"line":1166,"column":37}}},"86":{"name":"userExists","line":1183,"loc":{"start":{"line":1183,"column":39},"end":{"line":1183,"column":85}}},"87":{"name":"(anonymous_87)","line":1193,"loc":{"start":{"line":1193,"column":32},"end":{"line":1193,"column":52}}},"88":{"name":"groupExists","line":1211,"loc":{"start":{"line":1211,"column":40},"end":{"line":1211,"column":88}}},"89":{"name":"(anonymous_89)","line":1221,"loc":{"start":{"line":1221,"column":34},"end":{"line":1221,"column":56}}},"90":{"name":"isUserMemberOf","line":1240,"loc":{"start":{"line":1240,"column":43},"end":{"line":1240,"column":104}}},"91":{"name":"(anonymous_91)","line":1254,"loc":{"start":{"line":1254,"column":49},"end":{"line":1254,"column":71}}},"92":{"name":"(anonymous_92)","line":1268,"loc":{"start":{"line":1268,"column":31},"end":{"line":1268,"column":46}}},"93":{"name":"includeGroupMembershipFor","line":1284,"loc":{"start":{"line":1284,"column":0},"end":{"line":1284,"column":47}}},"94":{"name":"(anonymous_94)","line":1291,"loc":{"start":{"line":1291,"column":68},"end":{"line":1291,"column":80}}},"95":{"name":"find","line":1306,"loc":{"start":{"line":1306,"column":33},"end":{"line":1306,"column":63}}},"96":{"name":"onFind","line":1326,"loc":{"start":{"line":1326,"column":31},"end":{"line":1326,"column":61}}},"97":{"name":"(anonymous_97)","line":1346,"loc":{"start":{"line":1346,"column":27},"end":{"line":1346,"column":57}}},"98":{"name":"(anonymous_98)","line":1352,"loc":{"start":{"line":1352,"column":61},"end":{"line":1352,"column":83}}},"99":{"name":"(anonymous_99)","line":1369,"loc":{"start":{"line":1369,"column":60},"end":{"line":1369,"column":82}}},"100":{"name":"(anonymous_100)","line":1388,"loc":{"start":{"line":1388,"column":7},"end":{"line":1388,"column":21}}},"101":{"name":"find","line":1414,"loc":{"start":{"line":1414,"column":47},"end":{"line":1414,"column":77}}},"102":{"name":"searchDeletedObjects","line":1444,"loc":{"start":{"line":1444,"column":2},"end":{"line":1444,"column":46}}},"103":{"name":"onFind","line":1445,"loc":{"start":{"line":1445,"column":78},"end":{"line":1445,"column":108}}},"104":{"name":"(anonymous_104)","line":1461,"loc":{"start":{"line":1461,"column":31},"end":{"line":1461,"column":46}}},"105":{"name":"(anonymous_105)","line":1482,"loc":{"start":{"line":1482,"column":84},"end":{"line":1482,"column":106}}},"106":{"name":"findGroup","line":1503,"loc":{"start":{"line":1503,"column":38},"end":{"line":1503,"column":84}}},"107":{"name":"onSearch","line":1522,"loc":{"start":{"line":1522,"column":31},"end":{"line":1522,"column":63}}},"108":{"name":"(anonymous_108)","line":1539,"loc":{"start":{"line":1539,"column":57},"end":{"line":1539,"column":79}}},"109":{"name":"findGroup","line":1565,"loc":{"start":{"line":1565,"column":39},"end":{"line":1565,"column":74}}},"110":{"name":"onSearch","line":1587,"loc":{"start":{"line":1587,"column":31},"end":{"line":1587,"column":63}}},"111":{"name":"(anonymous_111)","line":1602,"loc":{"start":{"line":1602,"column":27},"end":{"line":1602,"column":59}}},"112":{"name":"(anonymous_112)","line":1609,"loc":{"start":{"line":1609,"column":61},"end":{"line":1609,"column":83}}},"113":{"name":"(anonymous_113)","line":1623,"loc":{"start":{"line":1623,"column":7},"end":{"line":1623,"column":21}}},"114":{"name":"findUser","line":1645,"loc":{"start":{"line":1645,"column":37},"end":{"line":1645,"column":100}}},"115":{"name":"onSearch","line":1672,"loc":{"start":{"line":1672,"column":31},"end":{"line":1672,"column":63}}},"116":{"name":"(anonymous_116)","line":1689,"loc":{"start":{"line":1689,"column":56},"end":{"line":1689,"column":78}}},"117":{"name":"findUsers","line":1716,"loc":{"start":{"line":1716,"column":38},"end":{"line":1716,"column":92}}},"118":{"name":"onSearch","line":1741,"loc":{"start":{"line":1741,"column":31},"end":{"line":1741,"column":63}}},"119":{"name":"(anonymous_119)","line":1756,"loc":{"start":{"line":1756,"column":27},"end":{"line":1756,"column":59}}},"120":{"name":"(anonymous_120)","line":1763,"loc":{"start":{"line":1763,"column":60},"end":{"line":1763,"column":82}}},"121":{"name":"(anonymous_121)","line":1777,"loc":{"start":{"line":1777,"column":7},"end":{"line":1777,"column":21}}},"122":{"name":"authenticate","line":1798,"loc":{"start":{"line":1798,"column":41},"end":{"line":1798,"column":93}}},"123":{"name":"handleError","line":1813,"loc":{"start":{"line":1813,"column":2},"end":{"line":1813,"column":28}}},"124":{"name":"(anonymous_124)","line":1823,"loc":{"start":{"line":1823,"column":34},"end":{"line":1823,"column":48}}},"125":{"name":"getRootDSE","line":1846,"loc":{"start":{"line":1846,"column":39},"end":{"line":1846,"column":86}}},"126":{"name":"onClientError","line":1865,"loc":{"start":{"line":1865,"column":2},"end":{"line":1865,"column":30}}},"127":{"name":"(anonymous_127)","line":1876,"loc":{"start":{"line":1876,"column":22},"end":{"line":1876,"column":36}}},"128":{"name":"(anonymous_128)","line":1882,"loc":{"start":{"line":1882,"column":103},"end":{"line":1882,"column":125}}},"129":{"name":"(anonymous_129)","line":1889,"loc":{"start":{"line":1889,"column":23},"end":{"line":1889,"column":40}}},"130":{"name":"(anonymous_130)","line":1892,"loc":{"start":{"line":1892,"column":31},"end":{"line":1892,"column":47}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":31}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":27}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":29}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":30}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":31}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":25}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":36}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":38}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":92}},"11":{"start":{"line":13,"column":0},"end":{"line":13,"column":37}},"12":{"start":{"line":14,"column":0},"end":{"line":14,"column":26}},"13":{"start":{"line":16,"column":0},"end":{"line":22,"column":3}},"14":{"start":{"line":24,"column":0},"end":{"line":24,"column":27}},"15":{"start":{"line":25,"column":0},"end":{"line":25,"column":49}},"16":{"start":{"line":26,"column":0},"end":{"line":37,"column":2}},"17":{"start":{"line":39,"column":0},"end":{"line":39,"column":47}},"18":{"start":{"line":40,"column":0},"end":{"line":48,"column":2}},"19":{"start":{"line":51,"column":0},"end":{"line":55,"column":2}},"20":{"start":{"line":69,"column":0},"end":{"line":114,"column":2}},"21":{"start":{"line":70,"column":2},"end":{"line":113,"column":3}},"22":{"start":{"line":71,"column":4},"end":{"line":71,"column":19}},"23":{"start":{"line":72,"column":4},"end":{"line":93,"column":5}},"24":{"start":{"line":73,"column":6},"end":{"line":73,"column":26}},"25":{"start":{"line":74,"column":6},"end":{"line":74,"column":27}},"26":{"start":{"line":75,"column":6},"end":{"line":75,"column":34}},"27":{"start":{"line":76,"column":6},"end":{"line":76,"column":43}},"28":{"start":{"line":78,"column":6},"end":{"line":80,"column":7}},"29":{"start":{"line":79,"column":8},"end":{"line":79,"column":53}},"30":{"start":{"line":83,"column":6},"end":{"line":83,"column":38}},"31":{"start":{"line":84,"column":6},"end":{"line":84,"column":37}},"32":{"start":{"line":86,"column":6},"end":{"line":86,"column":68}},"33":{"start":{"line":86,"column":30},"end":{"line":86,"column":68}},"34":{"start":{"line":87,"column":6},"end":{"line":87,"column":86}},"35":{"start":{"line":87,"column":39},"end":{"line":87,"column":86}},"36":{"start":{"line":89,"column":6},"end":{"line":92,"column":7}},"37":{"start":{"line":90,"column":8},"end":{"line":90,"column":69}},"38":{"start":{"line":91,"column":8},"end":{"line":91,"column":34}},"39":{"start":{"line":95,"column":4},"end":{"line":95,"column":135}},"40":{"start":{"line":96,"column":4},"end":{"line":96,"column":132}},"41":{"start":{"line":98,"column":4},"end":{"line":99,"column":95}},"42":{"start":{"line":100,"column":4},"end":{"line":100,"column":138}},"43":{"start":{"line":101,"column":4},"end":{"line":101,"column":74}},"44":{"start":{"line":102,"column":4},"end":{"line":102,"column":76}},"45":{"start":{"line":106,"column":4},"end":{"line":108,"column":5}},"46":{"start":{"line":107,"column":6},"end":{"line":107,"column":36}},"47":{"start":{"line":109,"column":4},"end":{"line":109,"column":35}},"48":{"start":{"line":112,"column":4},"end":{"line":112,"column":75}},"49":{"start":{"line":115,"column":0},"end":{"line":115,"column":52}},"50":{"start":{"line":121,"column":0},"end":{"line":121,"column":39}},"51":{"start":{"line":128,"column":0},"end":{"line":140,"column":1}},"52":{"start":{"line":129,"column":2},"end":{"line":129,"column":69}},"53":{"start":{"line":129,"column":41},"end":{"line":129,"column":69}},"54":{"start":{"line":130,"column":2},"end":{"line":130,"column":31}},"55":{"start":{"line":130,"column":16},"end":{"line":130,"column":31}},"56":{"start":{"line":132,"column":2},"end":{"line":132,"column":62}},"57":{"start":{"line":132,"column":35},"end":{"line":132,"column":62}},"58":{"start":{"line":133,"column":2},"end":{"line":133,"column":29}},"59":{"start":{"line":134,"column":2},"end":{"line":134,"column":63}},"60":{"start":{"line":134,"column":48},"end":{"line":134,"column":63}},"61":{"start":{"line":136,"column":2},"end":{"line":136,"column":44}},"62":{"start":{"line":137,"column":2},"end":{"line":137,"column":45}},"63":{"start":{"line":138,"column":2},"end":{"line":139,"column":33}},"64":{"start":{"line":148,"column":0},"end":{"line":150,"column":1}},"65":{"start":{"line":149,"column":2},"end":{"line":149,"column":61}},"66":{"start":{"line":159,"column":0},"end":{"line":164,"column":1}},"67":{"start":{"line":160,"column":2},"end":{"line":160,"column":46}},"68":{"start":{"line":161,"column":2},"end":{"line":161,"column":55}},"69":{"start":{"line":161,"column":41},"end":{"line":161,"column":55}},"70":{"start":{"line":162,"column":2},"end":{"line":162,"column":39}},"71":{"start":{"line":163,"column":2},"end":{"line":163,"column":45}},"72":{"start":{"line":174,"column":0},"end":{"line":180,"column":1}},"73":{"start":{"line":175,"column":2},"end":{"line":175,"column":46}},"74":{"start":{"line":176,"column":2},"end":{"line":176,"column":23}},"75":{"start":{"line":176,"column":12},"end":{"line":176,"column":23}},"76":{"start":{"line":178,"column":2},"end":{"line":178,"column":31}},"77":{"start":{"line":179,"column":2},"end":{"line":179,"column":37}},"78":{"start":{"line":189,"column":0},"end":{"line":199,"column":1}},"79":{"start":{"line":190,"column":2},"end":{"line":190,"column":48}},"80":{"start":{"line":191,"column":2},"end":{"line":191,"column":18}},"81":{"start":{"line":193,"column":2},"end":{"line":193,"column":50}},"82":{"start":{"line":193,"column":18},"end":{"line":193,"column":50}},"83":{"start":{"line":194,"column":2},"end":{"line":196,"column":3}},"84":{"start":{"line":195,"column":4},"end":{"line":195,"column":95}},"85":{"start":{"line":198,"column":2},"end":{"line":198,"column":101}},"86":{"start":{"line":208,"column":0},"end":{"line":216,"column":1}},"87":{"start":{"line":209,"column":2},"end":{"line":209,"column":45}},"88":{"start":{"line":211,"column":2},"end":{"line":211,"column":30}},"89":{"start":{"line":211,"column":16},"end":{"line":211,"column":30}},"90":{"start":{"line":212,"column":2},"end":{"line":214,"column":3}},"91":{"start":{"line":213,"column":4},"end":{"line":213,"column":19}},"92":{"start":{"line":215,"column":2},"end":{"line":215,"column":25}},"93":{"start":{"line":225,"column":0},"end":{"line":234,"column":1}},"94":{"start":{"line":226,"column":2},"end":{"line":226,"column":50}},"95":{"start":{"line":227,"column":2},"end":{"line":227,"column":18}},"96":{"start":{"line":229,"column":2},"end":{"line":229,"column":52}},"97":{"start":{"line":229,"column":19},"end":{"line":229,"column":52}},"98":{"start":{"line":230,"column":2},"end":{"line":232,"column":3}},"99":{"start":{"line":231,"column":4},"end":{"line":231,"column":97}},"100":{"start":{"line":233,"column":2},"end":{"line":233,"column":56}},"101":{"start":{"line":241,"column":0},"end":{"line":254,"column":1}},"102":{"start":{"line":242,"column":2},"end":{"line":242,"column":39}},"103":{"start":{"line":244,"column":2},"end":{"line":244,"column":28}},"104":{"start":{"line":244,"column":14},"end":{"line":244,"column":28}},"105":{"start":{"line":245,"column":2},"end":{"line":245,"column":35}},"106":{"start":{"line":245,"column":22},"end":{"line":245,"column":35}},"107":{"start":{"line":246,"column":2},"end":{"line":249,"column":3}},"108":{"start":{"line":247,"column":4},"end":{"line":247,"column":35}},"109":{"start":{"line":248,"column":4},"end":{"line":248,"column":55}},"110":{"start":{"line":250,"column":2},"end":{"line":252,"column":3}},"111":{"start":{"line":251,"column":4},"end":{"line":251,"column":90}},"112":{"start":{"line":251,"column":49},"end":{"line":251,"column":85}},"113":{"start":{"line":253,"column":2},"end":{"line":253,"column":16}},"114":{"start":{"line":261,"column":0},"end":{"line":274,"column":1}},"115":{"start":{"line":262,"column":2},"end":{"line":262,"column":38}},"116":{"start":{"line":264,"column":2},"end":{"line":264,"column":28}},"117":{"start":{"line":264,"column":14},"end":{"line":264,"column":28}},"118":{"start":{"line":265,"column":2},"end":{"line":265,"column":43}},"119":{"start":{"line":265,"column":30},"end":{"line":265,"column":43}},"120":{"start":{"line":266,"column":2},"end":{"line":269,"column":3}},"121":{"start":{"line":267,"column":4},"end":{"line":267,"column":34}},"122":{"start":{"line":268,"column":4},"end":{"line":268,"column":54}},"123":{"start":{"line":270,"column":2},"end":{"line":272,"column":3}},"124":{"start":{"line":271,"column":4},"end":{"line":271,"column":89}},"125":{"start":{"line":271,"column":49},"end":{"line":271,"column":84}},"126":{"start":{"line":273,"column":2},"end":{"line":273,"column":16}},"127":{"start":{"line":283,"column":0},"end":{"line":295,"column":1}},"128":{"start":{"line":285,"column":2},"end":{"line":285,"column":69}},"129":{"start":{"line":286,"column":2},"end":{"line":288,"column":3}},"130":{"start":{"line":287,"column":4},"end":{"line":287,"column":57}},"131":{"start":{"line":289,"column":2},"end":{"line":289,"column":37}},"132":{"start":{"line":291,"column":2},"end":{"line":291,"column":78}},"133":{"start":{"line":292,"column":2},"end":{"line":292,"column":115}},"134":{"start":{"line":293,"column":2},"end":{"line":293,"column":39}},"135":{"start":{"line":294,"column":2},"end":{"line":294,"column":17}},"136":{"start":{"line":302,"column":0},"end":{"line":311,"column":1}},"137":{"start":{"line":303,"column":2},"end":{"line":303,"column":47}},"138":{"start":{"line":304,"column":2},"end":{"line":304,"column":48}},"139":{"start":{"line":304,"column":34},"end":{"line":304,"column":48}},"140":{"start":{"line":305,"column":2},"end":{"line":305,"column":32}},"141":{"start":{"line":305,"column":18},"end":{"line":305,"column":32}},"142":{"start":{"line":307,"column":2},"end":{"line":310,"column":6}},"143":{"start":{"line":308,"column":4},"end":{"line":308,"column":40}},"144":{"start":{"line":309,"column":4},"end":{"line":309,"column":30}},"145":{"start":{"line":319,"column":0},"end":{"line":321,"column":1}},"146":{"start":{"line":320,"column":2},"end":{"line":320,"column":75}},"147":{"start":{"line":329,"column":0},"end":{"line":339,"column":1}},"148":{"start":{"line":330,"column":2},"end":{"line":338,"column":5}},"149":{"start":{"line":347,"column":0},"end":{"line":354,"column":1}},"150":{"start":{"line":348,"column":2},"end":{"line":353,"column":5}},"151":{"start":{"line":364,"column":0},"end":{"line":543,"column":1}},"152":{"start":{"line":365,"column":2},"end":{"line":365,"column":18}},"153":{"start":{"line":367,"column":2},"end":{"line":371,"column":3}},"154":{"start":{"line":368,"column":4},"end":{"line":368,"column":20}},"155":{"start":{"line":369,"column":4},"end":{"line":369,"column":18}},"156":{"start":{"line":370,"column":4},"end":{"line":370,"column":23}},"157":{"start":{"line":372,"column":2},"end":{"line":375,"column":3}},"158":{"start":{"line":373,"column":4},"end":{"line":373,"column":18}},"159":{"start":{"line":374,"column":4},"end":{"line":374,"column":23}},"160":{"start":{"line":376,"column":2},"end":{"line":376,"column":22}},"161":{"start":{"line":377,"column":2},"end":{"line":377,"column":61}},"162":{"start":{"line":378,"column":2},"end":{"line":378,"column":43}},"163":{"start":{"line":380,"column":2},"end":{"line":380,"column":21}},"164":{"start":{"line":381,"column":2},"end":{"line":381,"column":28}},"165":{"start":{"line":382,"column":2},"end":{"line":382,"column":33}},"166":{"start":{"line":383,"column":2},"end":{"line":383,"column":51}},"167":{"start":{"line":384,"column":2},"end":{"line":384,"column":36}},"168":{"start":{"line":390,"column":2},"end":{"line":398,"column":3}},"169":{"start":{"line":391,"column":4},"end":{"line":391,"column":25}},"170":{"start":{"line":391,"column":18},"end":{"line":391,"column":25}},"171":{"start":{"line":393,"column":4},"end":{"line":393,"column":20}},"172":{"start":{"line":394,"column":4},"end":{"line":394,"column":51}},"173":{"start":{"line":395,"column":4},"end":{"line":397,"column":5}},"174":{"start":{"line":396,"column":6},"end":{"line":396,"column":42}},"175":{"start":{"line":405,"column":2},"end":{"line":407,"column":4}},"176":{"start":{"line":406,"column":4},"end":{"line":406,"column":19}},"177":{"start":{"line":413,"column":2},"end":{"line":432,"column":3}},"178":{"start":{"line":414,"column":4},"end":{"line":414,"column":42}},"179":{"start":{"line":415,"column":4},"end":{"line":415,"column":30}},"180":{"start":{"line":416,"column":4},"end":{"line":416,"column":27}},"181":{"start":{"line":420,"column":4},"end":{"line":420,"column":29}},"182":{"start":{"line":421,"column":4},"end":{"line":431,"column":7}},"183":{"start":{"line":422,"column":6},"end":{"line":422,"column":31}},"184":{"start":{"line":424,"column":6},"end":{"line":424,"column":35}},"185":{"start":{"line":424,"column":15},"end":{"line":424,"column":35}},"186":{"start":{"line":425,"column":6},"end":{"line":430,"column":9}},"187":{"start":{"line":426,"column":8},"end":{"line":426,"column":37}},"188":{"start":{"line":426,"column":18},"end":{"line":426,"column":37}},"189":{"start":{"line":427,"column":8},"end":{"line":429,"column":9}},"190":{"start":{"line":428,"column":10},"end":{"line":428,"column":24}},"191":{"start":{"line":439,"column":2},"end":{"line":477,"column":3}},"192":{"start":{"line":440,"column":4},"end":{"line":440,"column":18}},"193":{"start":{"line":441,"column":4},"end":{"line":441,"column":20}},"194":{"start":{"line":443,"column":4},"end":{"line":476,"column":5}},"195":{"start":{"line":444,"column":6},"end":{"line":475,"column":7}},"196":{"start":{"line":445,"column":8},"end":{"line":445,"column":70}},"197":{"start":{"line":446,"column":8},"end":{"line":446,"column":72}},"198":{"start":{"line":447,"column":8},"end":{"line":447,"column":46}},"199":{"start":{"line":449,"column":8},"end":{"line":449,"column":46}},"200":{"start":{"line":450,"column":8},"end":{"line":450,"column":69}},"201":{"start":{"line":451,"column":8},"end":{"line":474,"column":11}},"202":{"start":{"line":456,"column":10},"end":{"line":460,"column":11}},"203":{"start":{"line":457,"column":12},"end":{"line":458,"column":62}},"204":{"start":{"line":459,"column":12},"end":{"line":459,"column":43}},"205":{"start":{"line":462,"column":10},"end":{"line":465,"column":11}},"206":{"start":{"line":463,"column":12},"end":{"line":463,"column":33}},"207":{"start":{"line":464,"column":12},"end":{"line":464,"column":19}},"208":{"start":{"line":467,"column":10},"end":{"line":467,"column":47}},"209":{"start":{"line":468,"column":10},"end":{"line":468,"column":53}},"210":{"start":{"line":469,"column":10},"end":{"line":469,"column":43}},"211":{"start":{"line":470,"column":10},"end":{"line":473,"column":13}},"212":{"start":{"line":471,"column":12},"end":{"line":471,"column":43}},"213":{"start":{"line":472,"column":12},"end":{"line":472,"column":26}},"214":{"start":{"line":484,"column":2},"end":{"line":494,"column":3}},"215":{"start":{"line":485,"column":4},"end":{"line":488,"column":5}},"216":{"start":{"line":486,"column":6},"end":{"line":486,"column":23}},"217":{"start":{"line":487,"column":6},"end":{"line":487,"column":13}},"218":{"start":{"line":490,"column":4},"end":{"line":490,"column":20}},"219":{"start":{"line":491,"column":4},"end":{"line":492,"column":60}},"220":{"start":{"line":493,"column":4},"end":{"line":493,"column":32}},"221":{"start":{"line":493,"column":18},"end":{"line":493,"column":32}},"222":{"start":{"line":500,"column":2},"end":{"line":508,"column":3}},"223":{"start":{"line":501,"column":4},"end":{"line":507,"column":5}},"224":{"start":{"line":502,"column":6},"end":{"line":502,"column":22}},"225":{"start":{"line":503,"column":6},"end":{"line":505,"column":39}},"226":{"start":{"line":506,"column":6},"end":{"line":506,"column":44}},"227":{"start":{"line":506,"column":20},"end":{"line":506,"column":44}},"228":{"start":{"line":510,"column":2},"end":{"line":510,"column":19}},"229":{"start":{"line":512,"column":2},"end":{"line":512,"column":55}},"230":{"start":{"line":514,"column":2},"end":{"line":518,"column":3}},"231":{"start":{"line":514,"column":43},"end":{"line":514,"column":95}},"232":{"start":{"line":515,"column":4},"end":{"line":516,"column":104}},"233":{"start":{"line":517,"column":4},"end":{"line":517,"column":86}},"234":{"start":{"line":519,"column":2},"end":{"line":525,"column":3}},"235":{"start":{"line":520,"column":4},"end":{"line":524,"column":5}},"236":{"start":{"line":520,"column":45},"end":{"line":520,"column":95}},"237":{"start":{"line":521,"column":6},"end":{"line":522,"column":106}},"238":{"start":{"line":523,"column":6},"end":{"line":523,"column":93}},"239":{"start":{"line":527,"column":2},"end":{"line":528,"column":102}},"240":{"start":{"line":529,"column":2},"end":{"line":542,"column":5}},"241":{"start":{"line":530,"column":4},"end":{"line":533,"column":5}},"242":{"start":{"line":531,"column":6},"end":{"line":531,"column":34}},"243":{"start":{"line":531,"column":20},"end":{"line":531,"column":34}},"244":{"start":{"line":532,"column":6},"end":{"line":532,"column":13}},"245":{"start":{"line":535,"column":4},"end":{"line":535,"column":41}},"246":{"start":{"line":536,"column":4},"end":{"line":536,"column":47}},"247":{"start":{"line":537,"column":4},"end":{"line":537,"column":64}},"248":{"start":{"line":537,"column":36},"end":{"line":537,"column":60}},"249":{"start":{"line":538,"column":4},"end":{"line":541,"column":7}},"250":{"start":{"line":539,"column":6},"end":{"line":539,"column":20}},"251":{"start":{"line":540,"column":6},"end":{"line":540,"column":26}},"252":{"start":{"line":553,"column":0},"end":{"line":619,"column":1}},"253":{"start":{"line":554,"column":2},"end":{"line":554,"column":57}},"254":{"start":{"line":555,"column":2},"end":{"line":555,"column":18}},"255":{"start":{"line":559,"column":2},"end":{"line":562,"column":3}},"256":{"start":{"line":560,"column":4},"end":{"line":560,"column":27}},"257":{"start":{"line":561,"column":4},"end":{"line":561,"column":11}},"258":{"start":{"line":566,"column":2},"end":{"line":566,"column":94}},"259":{"start":{"line":567,"column":2},"end":{"line":570,"column":3}},"260":{"start":{"line":568,"column":4},"end":{"line":568,"column":27}},"261":{"start":{"line":569,"column":4},"end":{"line":569,"column":11}},"262":{"start":{"line":574,"column":2},"end":{"line":574,"column":27}},"263":{"start":{"line":575,"column":2},"end":{"line":587,"column":5}},"264":{"start":{"line":577,"column":4},"end":{"line":577,"column":90}},"265":{"start":{"line":577,"column":48},"end":{"line":577,"column":90}},"266":{"start":{"line":578,"column":4},"end":{"line":578,"column":104}},"267":{"start":{"line":579,"column":4},"end":{"line":579,"column":46}},"268":{"start":{"line":583,"column":4},"end":{"line":583,"column":47}},"269":{"start":{"line":584,"column":4},"end":{"line":586,"column":5}},"270":{"start":{"line":585,"column":6},"end":{"line":585,"column":54}},"271":{"start":{"line":590,"column":2},"end":{"line":594,"column":3}},"272":{"start":{"line":591,"column":4},"end":{"line":591,"column":86}},"273":{"start":{"line":592,"column":4},"end":{"line":592,"column":27}},"274":{"start":{"line":593,"column":4},"end":{"line":593,"column":11}},"275":{"start":{"line":596,"column":2},"end":{"line":597,"column":57}},"276":{"start":{"line":599,"column":2},"end":{"line":600,"column":59}},"277":{"start":{"line":601,"column":2},"end":{"line":618,"column":5}},"278":{"start":{"line":602,"column":4},"end":{"line":605,"column":5}},"279":{"start":{"line":603,"column":6},"end":{"line":603,"column":20}},"280":{"start":{"line":604,"column":6},"end":{"line":604,"column":13}},"281":{"start":{"line":608,"column":4},"end":{"line":608,"column":34}},"282":{"start":{"line":609,"column":4},"end":{"line":616,"column":5}},"283":{"start":{"line":610,"column":6},"end":{"line":615,"column":7}},"284":{"start":{"line":611,"column":8},"end":{"line":611,"column":54}},"285":{"start":{"line":611,"column":32},"end":{"line":611,"column":54}},"286":{"start":{"line":612,"column":8},"end":{"line":614,"column":9}},"287":{"start":{"line":613,"column":10},"end":{"line":613,"column":71}},"288":{"start":{"line":617,"column":4},"end":{"line":617,"column":27}},"289":{"start":{"line":628,"column":0},"end":{"line":635,"column":1}},"290":{"start":{"line":629,"column":2},"end":{"line":634,"column":4}},"291":{"start":{"line":632,"column":11},"end":{"line":632,"column":37}},"292":{"start":{"line":644,"column":0},"end":{"line":650,"column":1}},"293":{"start":{"line":645,"column":2},"end":{"line":647,"column":3}},"294":{"start":{"line":646,"column":4},"end":{"line":646,"column":16}},"295":{"start":{"line":648,"column":2},"end":{"line":649,"column":80}},"296":{"start":{"line":659,"column":0},"end":{"line":665,"column":1}},"297":{"start":{"line":660,"column":2},"end":{"line":662,"column":3}},"298":{"start":{"line":661,"column":4},"end":{"line":661,"column":16}},"299":{"start":{"line":663,"column":2},"end":{"line":664,"column":79}},"300":{"start":{"line":670,"column":0},"end":{"line":677,"column":1}},"301":{"start":{"line":671,"column":2},"end":{"line":675,"column":3}},"302":{"start":{"line":672,"column":4},"end":{"line":674,"column":5}},"303":{"start":{"line":673,"column":6},"end":{"line":673,"column":18}},"304":{"start":{"line":676,"column":2},"end":{"line":676,"column":41}},"305":{"start":{"line":687,"column":0},"end":{"line":694,"column":1}},"306":{"start":{"line":688,"column":2},"end":{"line":692,"column":3}},"307":{"start":{"line":689,"column":4},"end":{"line":691,"column":6}},"308":{"start":{"line":690,"column":6},"end":{"line":690,"column":19}},"309":{"start":{"line":693,"column":2},"end":{"line":693,"column":37}},"310":{"start":{"line":704,"column":0},"end":{"line":807,"column":1}},"311":{"start":{"line":705,"column":2},"end":{"line":705,"column":18}},"312":{"start":{"line":707,"column":2},"end":{"line":710,"column":3}},"313":{"start":{"line":708,"column":4},"end":{"line":708,"column":21}},"314":{"start":{"line":709,"column":4},"end":{"line":709,"column":22}},"315":{"start":{"line":711,"column":2},"end":{"line":715,"column":3}},"316":{"start":{"line":712,"column":4},"end":{"line":712,"column":18}},"317":{"start":{"line":713,"column":4},"end":{"line":713,"column":14}},"318":{"start":{"line":714,"column":4},"end":{"line":714,"column":21}},"319":{"start":{"line":716,"column":2},"end":{"line":720,"column":3}},"320":{"start":{"line":717,"column":4},"end":{"line":717,"column":15}},"321":{"start":{"line":718,"column":4},"end":{"line":718,"column":14}},"322":{"start":{"line":719,"column":4},"end":{"line":719,"column":21}},"323":{"start":{"line":721,"column":2},"end":{"line":721,"column":87}},"324":{"start":{"line":724,"column":2},"end":{"line":729,"column":3}},"325":{"start":{"line":725,"column":4},"end":{"line":725,"column":97}},"326":{"start":{"line":726,"column":4},"end":{"line":726,"column":21}},"327":{"start":{"line":727,"column":4},"end":{"line":727,"column":54}},"328":{"start":{"line":727,"column":28},"end":{"line":727,"column":54}},"329":{"start":{"line":728,"column":4},"end":{"line":728,"column":28}},"330":{"start":{"line":735,"column":2},"end":{"line":739,"column":5}},"331":{"start":{"line":740,"column":2},"end":{"line":806,"column":5}},"332":{"start":{"line":741,"column":4},"end":{"line":744,"column":5}},"333":{"start":{"line":742,"column":6},"end":{"line":742,"column":20}},"334":{"start":{"line":743,"column":6},"end":{"line":743,"column":13}},"335":{"start":{"line":746,"column":4},"end":{"line":746,"column":20}},"336":{"start":{"line":747,"column":4},"end":{"line":805,"column":7}},"337":{"start":{"line":749,"column":6},"end":{"line":762,"column":7}},"338":{"start":{"line":750,"column":8},"end":{"line":755,"column":9}},"339":{"start":{"line":751,"column":10},"end":{"line":751,"column":39}},"340":{"start":{"line":754,"column":10},"end":{"line":754,"column":34}},"341":{"start":{"line":757,"column":8},"end":{"line":761,"column":11}},"342":{"start":{"line":758,"column":10},"end":{"line":760,"column":11}},"343":{"start":{"line":759,"column":12},"end":{"line":759,"column":27}},"344":{"start":{"line":764,"column":6},"end":{"line":789,"column":27}},"345":{"start":{"line":765,"column":8},"end":{"line":765,"column":60}},"346":{"start":{"line":766,"column":8},"end":{"line":766,"column":38}},"347":{"start":{"line":769,"column":8},"end":{"line":769,"column":81}},"348":{"start":{"line":770,"column":8},"end":{"line":787,"column":11}},"349":{"start":{"line":771,"column":10},"end":{"line":774,"column":11}},"350":{"start":{"line":772,"column":12},"end":{"line":772,"column":31}},"351":{"start":{"line":773,"column":12},"end":{"line":773,"column":19}},"352":{"start":{"line":776,"column":10},"end":{"line":780,"column":13}},"353":{"start":{"line":777,"column":12},"end":{"line":779,"column":13}},"354":{"start":{"line":778,"column":14},"end":{"line":778,"column":45}},"355":{"start":{"line":781,"column":10},"end":{"line":784,"column":23}},"356":{"start":{"line":783,"column":21},"end":{"line":783,"column":38}},"357":{"start":{"line":785,"column":10},"end":{"line":785,"column":59}},"358":{"start":{"line":786,"column":10},"end":{"line":786,"column":26}},"359":{"start":{"line":789,"column":11},"end":{"line":789,"column":27}},"360":{"start":{"line":791,"column":7},"end":{"line":794,"column":7}},"361":{"start":{"line":792,"column":8},"end":{"line":792,"column":22}},"362":{"start":{"line":793,"column":8},"end":{"line":793,"column":15}},"363":{"start":{"line":797,"column":6},"end":{"line":799,"column":9}},"364":{"start":{"line":797,"column":58},"end":{"line":797,"column":87}},"365":{"start":{"line":798,"column":8},"end":{"line":798,"column":25}},"366":{"start":{"line":801,"column":6},"end":{"line":803,"column":10}},"367":{"start":{"line":802,"column":9},"end":{"line":802,"column":26}},"368":{"start":{"line":804,"column":6},"end":{"line":804,"column":28}},"369":{"start":{"line":817,"column":0},"end":{"line":850,"column":1}},"370":{"start":{"line":818,"column":2},"end":{"line":818,"column":18}},"371":{"start":{"line":820,"column":2},"end":{"line":824,"column":3}},"372":{"start":{"line":821,"column":4},"end":{"line":821,"column":22}},"373":{"start":{"line":822,"column":4},"end":{"line":822,"column":18}},"374":{"start":{"line":823,"column":4},"end":{"line":823,"column":21}},"375":{"start":{"line":825,"column":2},"end":{"line":828,"column":3}},"376":{"start":{"line":826,"column":4},"end":{"line":826,"column":18}},"377":{"start":{"line":827,"column":4},"end":{"line":827,"column":21}},"378":{"start":{"line":829,"column":2},"end":{"line":829,"column":58}},"379":{"start":{"line":831,"column":2},"end":{"line":835,"column":5}},"380":{"start":{"line":836,"column":2},"end":{"line":849,"column":5}},"381":{"start":{"line":837,"column":4},"end":{"line":840,"column":5}},"382":{"start":{"line":838,"column":6},"end":{"line":838,"column":34}},"383":{"start":{"line":838,"column":20},"end":{"line":838,"column":34}},"384":{"start":{"line":839,"column":6},"end":{"line":839,"column":13}},"385":{"start":{"line":843,"column":4},"end":{"line":845,"column":7}},"386":{"start":{"line":844,"column":6},"end":{"line":844,"column":24}},"387":{"start":{"line":846,"column":4},"end":{"line":847,"column":70}},"388":{"start":{"line":848,"column":4},"end":{"line":848,"column":24}},"389":{"start":{"line":860,"column":0},"end":{"line":887,"column":1}},"390":{"start":{"line":861,"column":2},"end":{"line":861,"column":18}},"391":{"start":{"line":863,"column":2},"end":{"line":867,"column":3}},"392":{"start":{"line":864,"column":4},"end":{"line":864,"column":24}},"393":{"start":{"line":865,"column":4},"end":{"line":865,"column":20}},"394":{"start":{"line":866,"column":4},"end":{"line":866,"column":21}},"395":{"start":{"line":868,"column":2},"end":{"line":868,"column":59}},"396":{"start":{"line":871,"column":2},"end":{"line":875,"column":3}},"397":{"start":{"line":872,"column":4},"end":{"line":872,"column":86}},"398":{"start":{"line":873,"column":4},"end":{"line":873,"column":29}},"399":{"start":{"line":874,"column":4},"end":{"line":874,"column":11}},"400":{"start":{"line":877,"column":2},"end":{"line":886,"column":5}},"401":{"start":{"line":878,"column":4},"end":{"line":881,"column":5}},"402":{"start":{"line":879,"column":6},"end":{"line":879,"column":20}},"403":{"start":{"line":880,"column":6},"end":{"line":880,"column":13}},"404":{"start":{"line":883,"column":4},"end":{"line":884,"column":59}},"405":{"start":{"line":885,"column":4},"end":{"line":885,"column":35}},"406":{"start":{"line":897,"column":0},"end":{"line":924,"column":1}},"407":{"start":{"line":898,"column":2},"end":{"line":898,"column":18}},"408":{"start":{"line":900,"column":2},"end":{"line":904,"column":3}},"409":{"start":{"line":901,"column":4},"end":{"line":901,"column":25}},"410":{"start":{"line":902,"column":4},"end":{"line":902,"column":21}},"411":{"start":{"line":903,"column":4},"end":{"line":903,"column":21}},"412":{"start":{"line":905,"column":2},"end":{"line":905,"column":65}},"413":{"start":{"line":908,"column":2},"end":{"line":912,"column":3}},"414":{"start":{"line":909,"column":4},"end":{"line":909,"column":87}},"415":{"start":{"line":910,"column":4},"end":{"line":910,"column":30}},"416":{"start":{"line":911,"column":4},"end":{"line":911,"column":11}},"417":{"start":{"line":914,"column":2},"end":{"line":923,"column":5}},"418":{"start":{"line":915,"column":4},"end":{"line":918,"column":5}},"419":{"start":{"line":916,"column":6},"end":{"line":916,"column":20}},"420":{"start":{"line":917,"column":6},"end":{"line":917,"column":13}},"421":{"start":{"line":920,"column":4},"end":{"line":921,"column":60}},"422":{"start":{"line":922,"column":4},"end":{"line":922,"column":35}},"423":{"start":{"line":931,"column":0},"end":{"line":933,"column":2}},"424":{"start":{"line":932,"column":2},"end":{"line":932,"column":44}},"425":{"start":{"line":940,"column":0},"end":{"line":942,"column":2}},"426":{"start":{"line":941,"column":2},"end":{"line":941,"column":57}},"427":{"start":{"line":949,"column":0},"end":{"line":951,"column":2}},"428":{"start":{"line":950,"column":2},"end":{"line":950,"column":58}},"429":{"start":{"line":961,"column":0},"end":{"line":1082,"column":2}},"430":{"start":{"line":962,"column":2},"end":{"line":962,"column":18}},"431":{"start":{"line":964,"column":2},"end":{"line":968,"column":3}},"432":{"start":{"line":965,"column":4},"end":{"line":965,"column":25}},"433":{"start":{"line":966,"column":4},"end":{"line":966,"column":21}},"434":{"start":{"line":967,"column":4},"end":{"line":967,"column":21}},"435":{"start":{"line":969,"column":2},"end":{"line":969,"column":56}},"436":{"start":{"line":971,"column":2},"end":{"line":971,"column":17}},"437":{"start":{"line":972,"column":2},"end":{"line":972,"column":18}},"438":{"start":{"line":974,"column":2},"end":{"line":1081,"column":5}},"439":{"start":{"line":978,"column":4},"end":{"line":981,"column":5}},"440":{"start":{"line":979,"column":6},"end":{"line":979,"column":34}},"441":{"start":{"line":979,"column":20},"end":{"line":979,"column":34}},"442":{"start":{"line":980,"column":6},"end":{"line":980,"column":13}},"443":{"start":{"line":984,"column":4},"end":{"line":987,"column":5}},"444":{"start":{"line":985,"column":6},"end":{"line":985,"column":42}},"445":{"start":{"line":985,"column":20},"end":{"line":985,"column":42}},"446":{"start":{"line":986,"column":6},"end":{"line":986,"column":13}},"447":{"start":{"line":989,"column":4},"end":{"line":991,"column":5}},"448":{"start":{"line":990,"column":6},"end":{"line":990,"column":38}},"449":{"start":{"line":999,"column":4},"end":{"line":1005,"column":5}},"450":{"start":{"line":1000,"column":6},"end":{"line":1000,"column":22}},"451":{"start":{"line":1001,"column":6},"end":{"line":1003,"column":7}},"452":{"start":{"line":1002,"column":8},"end":{"line":1002,"column":56}},"453":{"start":{"line":1004,"column":6},"end":{"line":1004,"column":21}},"454":{"start":{"line":1009,"column":4},"end":{"line":1009,"column":60}},"455":{"start":{"line":1010,"column":4},"end":{"line":1013,"column":5}},"456":{"start":{"line":1011,"column":6},"end":{"line":1012,"column":71}},"457":{"start":{"line":1014,"column":4},"end":{"line":1014,"column":28}},"458":{"start":{"line":1015,"column":4},"end":{"line":1080,"column":7}},"459":{"start":{"line":1021,"column":6},"end":{"line":1023,"column":13}},"460":{"start":{"line":1022,"column":8},"end":{"line":1022,"column":78}},"461":{"start":{"line":1024,"column":6},"end":{"line":1024,"column":80}},"462":{"start":{"line":1026,"column":6},"end":{"line":1031,"column":8}},"463":{"start":{"line":1032,"column":6},"end":{"line":1060,"column":9}},"464":{"start":{"line":1033,"column":8},"end":{"line":1036,"column":9}},"465":{"start":{"line":1034,"column":10},"end":{"line":1034,"column":34}},"466":{"start":{"line":1035,"column":10},"end":{"line":1035,"column":17}},"467":{"start":{"line":1039,"column":8},"end":{"line":1059,"column":11}},"468":{"start":{"line":1041,"column":10},"end":{"line":1053,"column":11}},"469":{"start":{"line":1042,"column":12},"end":{"line":1042,"column":107}},"470":{"start":{"line":1043,"column":12},"end":{"line":1043,"column":28}},"471":{"start":{"line":1044,"column":12},"end":{"line":1044,"column":29}},"472":{"start":{"line":1045,"column":12},"end":{"line":1045,"column":28}},"473":{"start":{"line":1049,"column":12},"end":{"line":1052,"column":15}},"474":{"start":{"line":1050,"column":14},"end":{"line":1050,"column":51}},"475":{"start":{"line":1051,"column":14},"end":{"line":1051,"column":30}},"476":{"start":{"line":1055,"column":10},"end":{"line":1057,"column":11}},"477":{"start":{"line":1056,"column":12},"end":{"line":1056,"column":91}},"478":{"start":{"line":1058,"column":10},"end":{"line":1058,"column":34}},"479":{"start":{"line":1063,"column":6},"end":{"line":1065,"column":9}},"480":{"start":{"line":1064,"column":8},"end":{"line":1064,"column":32}},"481":{"start":{"line":1078,"column":6},"end":{"line":1078,"column":79}},"482":{"start":{"line":1079,"column":6},"end":{"line":1079,"column":42}},"483":{"start":{"line":1079,"column":20},"end":{"line":1079,"column":42}},"484":{"start":{"line":1092,"column":0},"end":{"line":1128,"column":2}},"485":{"start":{"line":1093,"column":2},"end":{"line":1093,"column":18}},"486":{"start":{"line":1095,"column":2},"end":{"line":1099,"column":3}},"487":{"start":{"line":1096,"column":4},"end":{"line":1096,"column":24}},"488":{"start":{"line":1097,"column":4},"end":{"line":1097,"column":20}},"489":{"start":{"line":1098,"column":4},"end":{"line":1098,"column":21}},"490":{"start":{"line":1100,"column":2},"end":{"line":1100,"column":64}},"491":{"start":{"line":1102,"column":2},"end":{"line":1127,"column":5}},"492":{"start":{"line":1103,"column":4},"end":{"line":1106,"column":5}},"493":{"start":{"line":1104,"column":6},"end":{"line":1104,"column":34}},"494":{"start":{"line":1104,"column":20},"end":{"line":1104,"column":34}},"495":{"start":{"line":1105,"column":6},"end":{"line":1105,"column":13}},"496":{"start":{"line":1108,"column":4},"end":{"line":1112,"column":5}},"497":{"start":{"line":1109,"column":6},"end":{"line":1109,"column":96}},"498":{"start":{"line":1110,"column":6},"end":{"line":1110,"column":31}},"499":{"start":{"line":1110,"column":20},"end":{"line":1110,"column":31}},"500":{"start":{"line":1111,"column":6},"end":{"line":1111,"column":13}},"501":{"start":{"line":1113,"column":4},"end":{"line":1126,"column":7}},"502":{"start":{"line":1114,"column":6},"end":{"line":1117,"column":7}},"503":{"start":{"line":1115,"column":8},"end":{"line":1115,"column":36}},"504":{"start":{"line":1115,"column":22},"end":{"line":1115,"column":36}},"505":{"start":{"line":1116,"column":8},"end":{"line":1116,"column":15}},"506":{"start":{"line":1119,"column":6},"end":{"line":1119,"column":23}},"507":{"start":{"line":1120,"column":6},"end":{"line":1124,"column":9}},"508":{"start":{"line":1121,"column":8},"end":{"line":1121,"column":106}},"509":{"start":{"line":1122,"column":8},"end":{"line":1122,"column":26}},"510":{"start":{"line":1123,"column":8},"end":{"line":1123,"column":29}},"511":{"start":{"line":1125,"column":6},"end":{"line":1125,"column":43}},"512":{"start":{"line":1125,"column":20},"end":{"line":1125,"column":43}},"513":{"start":{"line":1138,"column":0},"end":{"line":1174,"column":2}},"514":{"start":{"line":1139,"column":2},"end":{"line":1139,"column":18}},"515":{"start":{"line":1141,"column":2},"end":{"line":1145,"column":3}},"516":{"start":{"line":1142,"column":4},"end":{"line":1142,"column":25}},"517":{"start":{"line":1143,"column":4},"end":{"line":1143,"column":21}},"518":{"start":{"line":1144,"column":4},"end":{"line":1144,"column":21}},"519":{"start":{"line":1146,"column":2},"end":{"line":1146,"column":66}},"520":{"start":{"line":1148,"column":2},"end":{"line":1173,"column":5}},"521":{"start":{"line":1149,"column":4},"end":{"line":1152,"column":5}},"522":{"start":{"line":1150,"column":6},"end":{"line":1150,"column":34}},"523":{"start":{"line":1150,"column":20},"end":{"line":1150,"column":34}},"524":{"start":{"line":1151,"column":6},"end":{"line":1151,"column":13}},"525":{"start":{"line":1154,"column":4},"end":{"line":1158,"column":5}},"526":{"start":{"line":1155,"column":6},"end":{"line":1155,"column":99}},"527":{"start":{"line":1156,"column":6},"end":{"line":1156,"column":31}},"528":{"start":{"line":1156,"column":20},"end":{"line":1156,"column":31}},"529":{"start":{"line":1157,"column":6},"end":{"line":1157,"column":13}},"530":{"start":{"line":1159,"column":4},"end":{"line":1172,"column":7}},"531":{"start":{"line":1160,"column":6},"end":{"line":1163,"column":7}},"532":{"start":{"line":1161,"column":8},"end":{"line":1161,"column":36}},"533":{"start":{"line":1161,"column":22},"end":{"line":1161,"column":36}},"534":{"start":{"line":1162,"column":8},"end":{"line":1162,"column":15}},"535":{"start":{"line":1165,"column":6},"end":{"line":1165,"column":23}},"536":{"start":{"line":1166,"column":6},"end":{"line":1170,"column":9}},"537":{"start":{"line":1167,"column":8},"end":{"line":1167,"column":106}},"538":{"start":{"line":1168,"column":8},"end":{"line":1168,"column":26}},"539":{"start":{"line":1169,"column":8},"end":{"line":1169,"column":29}},"540":{"start":{"line":1171,"column":6},"end":{"line":1171,"column":43}},"541":{"start":{"line":1171,"column":20},"end":{"line":1171,"column":43}},"542":{"start":{"line":1183,"column":0},"end":{"line":1202,"column":2}},"543":{"start":{"line":1184,"column":2},"end":{"line":1184,"column":18}},"544":{"start":{"line":1186,"column":2},"end":{"line":1190,"column":3}},"545":{"start":{"line":1187,"column":4},"end":{"line":1187,"column":24}},"546":{"start":{"line":1188,"column":4},"end":{"line":1188,"column":20}},"547":{"start":{"line":1189,"column":4},"end":{"line":1189,"column":21}},"548":{"start":{"line":1191,"column":2},"end":{"line":1191,"column":49}},"549":{"start":{"line":1193,"column":2},"end":{"line":1201,"column":5}},"550":{"start":{"line":1194,"column":4},"end":{"line":1197,"column":5}},"551":{"start":{"line":1195,"column":6},"end":{"line":1195,"column":20}},"552":{"start":{"line":1196,"column":6},"end":{"line":1196,"column":13}},"553":{"start":{"line":1199,"column":4},"end":{"line":1199,"column":79}},"554":{"start":{"line":1200,"column":4},"end":{"line":1200,"column":33}},"555":{"start":{"line":1211,"column":0},"end":{"line":1230,"column":2}},"556":{"start":{"line":1212,"column":2},"end":{"line":1212,"column":18}},"557":{"start":{"line":1214,"column":2},"end":{"line":1218,"column":3}},"558":{"start":{"line":1215,"column":4},"end":{"line":1215,"column":25}},"559":{"start":{"line":1216,"column":4},"end":{"line":1216,"column":21}},"560":{"start":{"line":1217,"column":4},"end":{"line":1217,"column":21}},"561":{"start":{"line":1219,"column":2},"end":{"line":1219,"column":51}},"562":{"start":{"line":1221,"column":2},"end":{"line":1229,"column":5}},"563":{"start":{"line":1222,"column":4},"end":{"line":1225,"column":5}},"564":{"start":{"line":1223,"column":6},"end":{"line":1223,"column":20}},"565":{"start":{"line":1224,"column":6},"end":{"line":1224,"column":13}},"566":{"start":{"line":1227,"column":4},"end":{"line":1227,"column":82}},"567":{"start":{"line":1228,"column":4},"end":{"line":1228,"column":35}},"568":{"start":{"line":1240,"column":0},"end":{"line":1275,"column":2}},"569":{"start":{"line":1241,"column":2},"end":{"line":1241,"column":18}},"570":{"start":{"line":1243,"column":2},"end":{"line":1248,"column":3}},"571":{"start":{"line":1244,"column":4},"end":{"line":1244,"column":25}},"572":{"start":{"line":1245,"column":4},"end":{"line":1245,"column":25}},"573":{"start":{"line":1246,"column":4},"end":{"line":1246,"column":20}},"574":{"start":{"line":1247,"column":4},"end":{"line":1247,"column":21}},"575":{"start":{"line":1249,"column":2},"end":{"line":1249,"column":67}},"576":{"start":{"line":1251,"column":2},"end":{"line":1253,"column":5}},"577":{"start":{"line":1254,"column":2},"end":{"line":1274,"column":5}},"578":{"start":{"line":1255,"column":4},"end":{"line":1258,"column":5}},"579":{"start":{"line":1256,"column":6},"end":{"line":1256,"column":20}},"580":{"start":{"line":1257,"column":6},"end":{"line":1257,"column":13}},"581":{"start":{"line":1259,"column":4},"end":{"line":1263,"column":5}},"582":{"start":{"line":1260,"column":6},"end":{"line":1260,"column":95}},"583":{"start":{"line":1261,"column":6},"end":{"line":1261,"column":28}},"584":{"start":{"line":1262,"column":6},"end":{"line":1262,"column":13}},"585":{"start":{"line":1267,"column":4},"end":{"line":1267,"column":61}},"586":{"start":{"line":1268,"column":4},"end":{"line":1271,"column":8}},"587":{"start":{"line":1269,"column":6},"end":{"line":1270,"column":69}},"588":{"start":{"line":1272,"column":4},"end":{"line":1272,"column":88}},"589":{"start":{"line":1273,"column":4},"end":{"line":1273,"column":27}},"590":{"start":{"line":1284,"column":0},"end":{"line":1295,"column":1}},"591":{"start":{"line":1285,"column":2},"end":{"line":1288,"column":3}},"592":{"start":{"line":1286,"column":4},"end":{"line":1286,"column":16}},"593":{"start":{"line":1287,"column":4},"end":{"line":1287,"column":21}},"594":{"start":{"line":1290,"column":2},"end":{"line":1290,"column":49}},"595":{"start":{"line":1291,"column":2},"end":{"line":1294,"column":6}},"596":{"start":{"line":1292,"column":4},"end":{"line":1292,"column":24}},"597":{"start":{"line":1293,"column":4},"end":{"line":1293,"column":51}},"598":{"start":{"line":1306,"column":0},"end":{"line":1403,"column":2}},"599":{"start":{"line":1307,"column":2},"end":{"line":1307,"column":18}},"600":{"start":{"line":1309,"column":2},"end":{"line":1312,"column":3}},"601":{"start":{"line":1310,"column":4},"end":{"line":1310,"column":20}},"602":{"start":{"line":1311,"column":4},"end":{"line":1311,"column":21}},"603":{"start":{"line":1313,"column":2},"end":{"line":1317,"column":3}},"604":{"start":{"line":1314,"column":4},"end":{"line":1316,"column":6}},"605":{"start":{"line":1318,"column":2},"end":{"line":1318,"column":30}},"606":{"start":{"line":1320,"column":2},"end":{"line":1325,"column":5}},"607":{"start":{"line":1326,"column":2},"end":{"line":1402,"column":5}},"608":{"start":{"line":1327,"column":4},"end":{"line":1330,"column":5}},"609":{"start":{"line":1328,"column":6},"end":{"line":1328,"column":34}},"610":{"start":{"line":1328,"column":20},"end":{"line":1328,"column":34}},"611":{"start":{"line":1329,"column":6},"end":{"line":1329,"column":13}},"612":{"start":{"line":1332,"column":4},"end":{"line":1337,"column":5}},"613":{"start":{"line":1333,"column":6},"end":{"line":1333,"column":87}},"614":{"start":{"line":1334,"column":6},"end":{"line":1334,"column":31}},"615":{"start":{"line":1334,"column":20},"end":{"line":1334,"column":31}},"616":{"start":{"line":1335,"column":6},"end":{"line":1335,"column":24}},"617":{"start":{"line":1336,"column":6},"end":{"line":1336,"column":13}},"618":{"start":{"line":1339,"column":4},"end":{"line":1343,"column":6}},"619":{"start":{"line":1346,"column":4},"end":{"line":1401,"column":7}},"620":{"start":{"line":1347,"column":6},"end":{"line":1386,"column":7}},"621":{"start":{"line":1348,"column":8},"end":{"line":1348,"column":104}},"622":{"start":{"line":1349,"column":8},"end":{"line":1349,"column":34}},"623":{"start":{"line":1351,"column":8},"end":{"line":1362,"column":9}},"624":{"start":{"line":1352,"column":10},"end":{"line":1358,"column":13}},"625":{"start":{"line":1353,"column":12},"end":{"line":1353,"column":48}},"626":{"start":{"line":1353,"column":21},"end":{"line":1353,"column":48}},"627":{"start":{"line":1355,"column":12},"end":{"line":1355,"column":34}},"628":{"start":{"line":1356,"column":12},"end":{"line":1356,"column":38}},"629":{"start":{"line":1357,"column":12},"end":{"line":1357,"column":28}},"630":{"start":{"line":1360,"column":10},"end":{"line":1360,"column":36}},"631":{"start":{"line":1361,"column":10},"end":{"line":1361,"column":26}},"632":{"start":{"line":1364,"column":11},"end":{"line":1386,"column":7}},"633":{"start":{"line":1365,"column":8},"end":{"line":1365,"column":101}},"634":{"start":{"line":1366,"column":8},"end":{"line":1366,"column":32}},"635":{"start":{"line":1368,"column":8},"end":{"line":1379,"column":9}},"636":{"start":{"line":1369,"column":10},"end":{"line":1375,"column":13}},"637":{"start":{"line":1370,"column":12},"end":{"line":1370,"column":48}},"638":{"start":{"line":1370,"column":21},"end":{"line":1370,"column":48}},"639":{"start":{"line":1372,"column":12},"end":{"line":1372,"column":33}},"640":{"start":{"line":1373,"column":12},"end":{"line":1373,"column":36}},"641":{"start":{"line":1374,"column":12},"end":{"line":1374,"column":28}},"642":{"start":{"line":1377,"column":10},"end":{"line":1377,"column":34}},"643":{"start":{"line":1378,"column":10},"end":{"line":1378,"column":26}},"644":{"start":{"line":1382,"column":8},"end":{"line":1382,"column":126}},"645":{"start":{"line":1383,"column":8},"end":{"line":1383,"column":33}},"646":{"start":{"line":1384,"column":8},"end":{"line":1384,"column":34}},"647":{"start":{"line":1385,"column":8},"end":{"line":1385,"column":24}},"648":{"start":{"line":1389,"column":6},"end":{"line":1392,"column":7}},"649":{"start":{"line":1390,"column":8},"end":{"line":1390,"column":36}},"650":{"start":{"line":1390,"column":22},"end":{"line":1390,"column":36}},"651":{"start":{"line":1391,"column":8},"end":{"line":1391,"column":15}},"652":{"start":{"line":1394,"column":6},"end":{"line":1396,"column":55}},"653":{"start":{"line":1397,"column":6},"end":{"line":1397,"column":41}},"654":{"start":{"line":1398,"column":6},"end":{"line":1398,"column":39}},"655":{"start":{"line":1400,"column":6},"end":{"line":1400,"column":43}},"656":{"start":{"line":1400,"column":20},"end":{"line":1400,"column":43}},"657":{"start":{"line":1414,"column":0},"end":{"line":1493,"column":2}},"658":{"start":{"line":1415,"column":2},"end":{"line":1415,"column":18}},"659":{"start":{"line":1417,"column":2},"end":{"line":1420,"column":3}},"660":{"start":{"line":1418,"column":4},"end":{"line":1418,"column":20}},"661":{"start":{"line":1419,"column":4},"end":{"line":1419,"column":21}},"662":{"start":{"line":1421,"column":2},"end":{"line":1425,"column":3}},"663":{"start":{"line":1422,"column":4},"end":{"line":1424,"column":6}},"664":{"start":{"line":1426,"column":2},"end":{"line":1426,"column":44}},"665":{"start":{"line":1428,"column":2},"end":{"line":1437,"column":4}},"666":{"start":{"line":1444,"column":2},"end":{"line":1472,"column":3}},"667":{"start":{"line":1445,"column":4},"end":{"line":1471,"column":7}},"668":{"start":{"line":1446,"column":6},"end":{"line":1449,"column":7}},"669":{"start":{"line":1447,"column":8},"end":{"line":1447,"column":36}},"670":{"start":{"line":1447,"column":22},"end":{"line":1447,"column":36}},"671":{"start":{"line":1448,"column":8},"end":{"line":1448,"column":15}},"672":{"start":{"line":1451,"column":6},"end":{"line":1456,"column":7}},"673":{"start":{"line":1452,"column":8},"end":{"line":1452,"column":92}},"674":{"start":{"line":1453,"column":8},"end":{"line":1453,"column":33}},"675":{"start":{"line":1453,"column":22},"end":{"line":1453,"column":33}},"676":{"start":{"line":1454,"column":8},"end":{"line":1454,"column":26}},"677":{"start":{"line":1455,"column":8},"end":{"line":1455,"column":15}},"678":{"start":{"line":1458,"column":6},"end":{"line":1458,"column":28}},"679":{"start":{"line":1461,"column":6},"end":{"line":1465,"column":9}},"680":{"start":{"line":1462,"column":8},"end":{"line":1462,"column":77}},"681":{"start":{"line":1463,"column":8},"end":{"line":1463,"column":48}},"682":{"start":{"line":1464,"column":8},"end":{"line":1464,"column":39}},"683":{"start":{"line":1467,"column":6},"end":{"line":1468,"column":87}},"684":{"start":{"line":1469,"column":6},"end":{"line":1469,"column":41}},"685":{"start":{"line":1470,"column":6},"end":{"line":1470,"column":49}},"686":{"start":{"line":1470,"column":20},"end":{"line":1470,"column":49}},"687":{"start":{"line":1474,"column":2},"end":{"line":1478,"column":5}},"688":{"start":{"line":1480,"column":2},"end":{"line":1492,"column":57}},"689":{"start":{"line":1481,"column":4},"end":{"line":1481,"column":96}},"690":{"start":{"line":1482,"column":4},"end":{"line":1490,"column":7}},"691":{"start":{"line":1483,"column":6},"end":{"line":1486,"column":7}},"692":{"start":{"line":1484,"column":8},"end":{"line":1484,"column":36}},"693":{"start":{"line":1484,"column":22},"end":{"line":1484,"column":36}},"694":{"start":{"line":1485,"column":8},"end":{"line":1485,"column":15}},"695":{"start":{"line":1488,"column":6},"end":{"line":1488,"column":118}},"696":{"start":{"line":1489,"column":6},"end":{"line":1489,"column":91}},"697":{"start":{"line":1492,"column":7},"end":{"line":1492,"column":57}},"698":{"start":{"line":1503,"column":0},"end":{"line":1555,"column":2}},"699":{"start":{"line":1504,"column":2},"end":{"line":1504,"column":18}},"700":{"start":{"line":1506,"column":2},"end":{"line":1510,"column":3}},"701":{"start":{"line":1507,"column":4},"end":{"line":1507,"column":25}},"702":{"start":{"line":1508,"column":4},"end":{"line":1508,"column":21}},"703":{"start":{"line":1509,"column":4},"end":{"line":1509,"column":21}},"704":{"start":{"line":1511,"column":2},"end":{"line":1514,"column":3}},"705":{"start":{"line":1512,"column":4},"end":{"line":1512,"column":21}},"706":{"start":{"line":1513,"column":4},"end":{"line":1513,"column":21}},"707":{"start":{"line":1515,"column":2},"end":{"line":1515,"column":49}},"708":{"start":{"line":1517,"column":2},"end":{"line":1521,"column":5}},"709":{"start":{"line":1522,"column":2},"end":{"line":1554,"column":5}},"710":{"start":{"line":1523,"column":4},"end":{"line":1526,"column":5}},"711":{"start":{"line":1524,"column":6},"end":{"line":1524,"column":34}},"712":{"start":{"line":1524,"column":20},"end":{"line":1524,"column":34}},"713":{"start":{"line":1525,"column":6},"end":{"line":1525,"column":13}},"714":{"start":{"line":1528,"column":4},"end":{"line":1532,"column":5}},"715":{"start":{"line":1529,"column":6},"end":{"line":1529,"column":102}},"716":{"start":{"line":1530,"column":6},"end":{"line":1530,"column":31}},"717":{"start":{"line":1530,"column":20},"end":{"line":1530,"column":31}},"718":{"start":{"line":1531,"column":6},"end":{"line":1531,"column":13}},"719":{"start":{"line":1534,"column":4},"end":{"line":1534,"column":106}},"720":{"start":{"line":1535,"column":4},"end":{"line":1536,"column":73}},"721":{"start":{"line":1538,"column":4},"end":{"line":1553,"column":5}},"722":{"start":{"line":1539,"column":6},"end":{"line":1548,"column":9}},"723":{"start":{"line":1540,"column":8},"end":{"line":1543,"column":9}},"724":{"start":{"line":1541,"column":10},"end":{"line":1541,"column":38}},"725":{"start":{"line":1541,"column":24},"end":{"line":1541,"column":38}},"726":{"start":{"line":1542,"column":10},"end":{"line":1542,"column":17}},"727":{"start":{"line":1545,"column":8},"end":{"line":1545,"column":30}},"728":{"start":{"line":1546,"column":8},"end":{"line":1546,"column":34}},"729":{"start":{"line":1547,"column":8},"end":{"line":1547,"column":43}},"730":{"start":{"line":1547,"column":22},"end":{"line":1547,"column":43}},"731":{"start":{"line":1551,"column":6},"end":{"line":1551,"column":32}},"732":{"start":{"line":1552,"column":6},"end":{"line":1552,"column":41}},"733":{"start":{"line":1552,"column":20},"end":{"line":1552,"column":41}},"734":{"start":{"line":1565,"column":0},"end":{"line":1634,"column":2}},"735":{"start":{"line":1566,"column":2},"end":{"line":1566,"column":18}},"736":{"start":{"line":1567,"column":2},"end":{"line":1567,"column":118}},"737":{"start":{"line":1569,"column":2},"end":{"line":1572,"column":3}},"738":{"start":{"line":1570,"column":4},"end":{"line":1570,"column":20}},"739":{"start":{"line":1571,"column":4},"end":{"line":1571,"column":14}},"740":{"start":{"line":1573,"column":2},"end":{"line":1577,"column":3}},"741":{"start":{"line":1574,"column":4},"end":{"line":1576,"column":6}},"742":{"start":{"line":1579,"column":2},"end":{"line":1579,"column":36}},"743":{"start":{"line":1581,"column":2},"end":{"line":1586,"column":5}},"744":{"start":{"line":1587,"column":2},"end":{"line":1633,"column":5}},"745":{"start":{"line":1588,"column":4},"end":{"line":1591,"column":5}},"746":{"start":{"line":1589,"column":6},"end":{"line":1589,"column":34}},"747":{"start":{"line":1589,"column":20},"end":{"line":1589,"column":34}},"748":{"start":{"line":1590,"column":6},"end":{"line":1590,"column":13}},"749":{"start":{"line":1593,"column":4},"end":{"line":1597,"column":5}},"750":{"start":{"line":1594,"column":6},"end":{"line":1594,"column":91}},"751":{"start":{"line":1595,"column":6},"end":{"line":1595,"column":31}},"752":{"start":{"line":1595,"column":20},"end":{"line":1595,"column":31}},"753":{"start":{"line":1596,"column":6},"end":{"line":1596,"column":13}},"754":{"start":{"line":1599,"column":4},"end":{"line":1599,"column":20}},"755":{"start":{"line":1602,"column":4},"end":{"line":1632,"column":7}},"756":{"start":{"line":1603,"column":6},"end":{"line":1622,"column":27}},"757":{"start":{"line":1604,"column":8},"end":{"line":1604,"column":105}},"758":{"start":{"line":1605,"column":8},"end":{"line":1605,"column":27}},"759":{"start":{"line":1608,"column":8},"end":{"line":1620,"column":9}},"760":{"start":{"line":1609,"column":10},"end":{"line":1615,"column":13}},"761":{"start":{"line":1610,"column":12},"end":{"line":1610,"column":48}},"762":{"start":{"line":1610,"column":21},"end":{"line":1610,"column":48}},"763":{"start":{"line":1612,"column":12},"end":{"line":1612,"column":34}},"764":{"start":{"line":1613,"column":12},"end":{"line":1613,"column":38}},"765":{"start":{"line":1614,"column":12},"end":{"line":1614,"column":28}},"766":{"start":{"line":1618,"column":10},"end":{"line":1618,"column":36}},"767":{"start":{"line":1619,"column":10},"end":{"line":1619,"column":26}},"768":{"start":{"line":1622,"column":11},"end":{"line":1622,"column":27}},"769":{"start":{"line":1624,"column":6},"end":{"line":1627,"column":7}},"770":{"start":{"line":1625,"column":8},"end":{"line":1625,"column":36}},"771":{"start":{"line":1625,"column":22},"end":{"line":1625,"column":36}},"772":{"start":{"line":1626,"column":8},"end":{"line":1626,"column":15}},"773":{"start":{"line":1629,"column":6},"end":{"line":1629,"column":123}},"774":{"start":{"line":1630,"column":6},"end":{"line":1630,"column":34}},"775":{"start":{"line":1631,"column":6},"end":{"line":1631,"column":43}},"776":{"start":{"line":1631,"column":20},"end":{"line":1631,"column":43}},"777":{"start":{"line":1645,"column":0},"end":{"line":1705,"column":2}},"778":{"start":{"line":1646,"column":2},"end":{"line":1646,"column":18}},"779":{"start":{"line":1648,"column":2},"end":{"line":1651,"column":3}},"780":{"start":{"line":1649,"column":4},"end":{"line":1649,"column":33}},"781":{"start":{"line":1650,"column":4},"end":{"line":1650,"column":34}},"782":{"start":{"line":1652,"column":2},"end":{"line":1656,"column":3}},"783":{"start":{"line":1653,"column":4},"end":{"line":1653,"column":24}},"784":{"start":{"line":1654,"column":4},"end":{"line":1654,"column":20}},"785":{"start":{"line":1655,"column":4},"end":{"line":1655,"column":21}},"786":{"start":{"line":1657,"column":2},"end":{"line":1660,"column":3}},"787":{"start":{"line":1658,"column":4},"end":{"line":1658,"column":33}},"788":{"start":{"line":1659,"column":4},"end":{"line":1659,"column":20}},"789":{"start":{"line":1661,"column":2},"end":{"line":1664,"column":3}},"790":{"start":{"line":1662,"column":4},"end":{"line":1662,"column":20}},"791":{"start":{"line":1663,"column":4},"end":{"line":1663,"column":21}},"792":{"start":{"line":1665,"column":2},"end":{"line":1665,"column":69}},"793":{"start":{"line":1667,"column":2},"end":{"line":1671,"column":5}},"794":{"start":{"line":1672,"column":2},"end":{"line":1704,"column":5}},"795":{"start":{"line":1673,"column":4},"end":{"line":1676,"column":5}},"796":{"start":{"line":1674,"column":6},"end":{"line":1674,"column":34}},"797":{"start":{"line":1674,"column":20},"end":{"line":1674,"column":34}},"798":{"start":{"line":1675,"column":6},"end":{"line":1675,"column":13}},"799":{"start":{"line":1678,"column":4},"end":{"line":1682,"column":5}},"800":{"start":{"line":1679,"column":6},"end":{"line":1679,"column":100}},"801":{"start":{"line":1680,"column":6},"end":{"line":1680,"column":31}},"802":{"start":{"line":1680,"column":20},"end":{"line":1680,"column":31}},"803":{"start":{"line":1681,"column":6},"end":{"line":1681,"column":13}},"804":{"start":{"line":1684,"column":4},"end":{"line":1684,"column":103}},"805":{"start":{"line":1685,"column":4},"end":{"line":1685,"column":133}},"806":{"start":{"line":1688,"column":4},"end":{"line":1703,"column":5}},"807":{"start":{"line":1689,"column":6},"end":{"line":1698,"column":9}},"808":{"start":{"line":1690,"column":8},"end":{"line":1693,"column":9}},"809":{"start":{"line":1691,"column":10},"end":{"line":1691,"column":38}},"810":{"start":{"line":1691,"column":24},"end":{"line":1691,"column":38}},"811":{"start":{"line":1692,"column":10},"end":{"line":1692,"column":17}},"812":{"start":{"line":1695,"column":8},"end":{"line":1695,"column":29}},"813":{"start":{"line":1696,"column":8},"end":{"line":1696,"column":32}},"814":{"start":{"line":1697,"column":8},"end":{"line":1697,"column":42}},"815":{"start":{"line":1697,"column":22},"end":{"line":1697,"column":42}},"816":{"start":{"line":1701,"column":6},"end":{"line":1701,"column":30}},"817":{"start":{"line":1702,"column":6},"end":{"line":1702,"column":40}},"818":{"start":{"line":1702,"column":20},"end":{"line":1702,"column":40}},"819":{"start":{"line":1716,"column":0},"end":{"line":1788,"column":2}},"820":{"start":{"line":1717,"column":2},"end":{"line":1717,"column":18}},"821":{"start":{"line":1718,"column":2},"end":{"line":1718,"column":117}},"822":{"start":{"line":1720,"column":2},"end":{"line":1723,"column":3}},"823":{"start":{"line":1721,"column":4},"end":{"line":1721,"column":33}},"824":{"start":{"line":1722,"column":4},"end":{"line":1722,"column":30}},"825":{"start":{"line":1724,"column":2},"end":{"line":1727,"column":3}},"826":{"start":{"line":1725,"column":4},"end":{"line":1725,"column":20}},"827":{"start":{"line":1726,"column":4},"end":{"line":1726,"column":14}},"828":{"start":{"line":1728,"column":2},"end":{"line":1732,"column":3}},"829":{"start":{"line":1729,"column":4},"end":{"line":1731,"column":6}},"830":{"start":{"line":1733,"column":2},"end":{"line":1733,"column":57}},"831":{"start":{"line":1735,"column":2},"end":{"line":1740,"column":5}},"832":{"start":{"line":1741,"column":2},"end":{"line":1787,"column":5}},"833":{"start":{"line":1742,"column":4},"end":{"line":1745,"column":5}},"834":{"start":{"line":1743,"column":6},"end":{"line":1743,"column":34}},"835":{"start":{"line":1743,"column":20},"end":{"line":1743,"column":34}},"836":{"start":{"line":1744,"column":6},"end":{"line":1744,"column":13}},"837":{"start":{"line":1747,"column":4},"end":{"line":1751,"column":5}},"838":{"start":{"line":1748,"column":6},"end":{"line":1748,"column":90}},"839":{"start":{"line":1749,"column":6},"end":{"line":1749,"column":31}},"840":{"start":{"line":1749,"column":20},"end":{"line":1749,"column":31}},"841":{"start":{"line":1750,"column":6},"end":{"line":1750,"column":13}},"842":{"start":{"line":1753,"column":4},"end":{"line":1753,"column":19}},"843":{"start":{"line":1756,"column":4},"end":{"line":1786,"column":7}},"844":{"start":{"line":1757,"column":6},"end":{"line":1776,"column":27}},"845":{"start":{"line":1758,"column":8},"end":{"line":1758,"column":103}},"846":{"start":{"line":1759,"column":8},"end":{"line":1759,"column":25}},"847":{"start":{"line":1762,"column":8},"end":{"line":1774,"column":9}},"848":{"start":{"line":1763,"column":10},"end":{"line":1769,"column":13}},"849":{"start":{"line":1764,"column":12},"end":{"line":1764,"column":48}},"850":{"start":{"line":1764,"column":21},"end":{"line":1764,"column":48}},"851":{"start":{"line":1766,"column":12},"end":{"line":1766,"column":33}},"852":{"start":{"line":1767,"column":12},"end":{"line":1767,"column":36}},"853":{"start":{"line":1768,"column":12},"end":{"line":1768,"column":28}},"854":{"start":{"line":1772,"column":10},"end":{"line":1772,"column":34}},"855":{"start":{"line":1773,"column":10},"end":{"line":1773,"column":26}},"856":{"start":{"line":1776,"column":11},"end":{"line":1776,"column":27}},"857":{"start":{"line":1778,"column":6},"end":{"line":1781,"column":7}},"858":{"start":{"line":1779,"column":8},"end":{"line":1779,"column":36}},"859":{"start":{"line":1779,"column":22},"end":{"line":1779,"column":36}},"860":{"start":{"line":1780,"column":8},"end":{"line":1780,"column":15}},"861":{"start":{"line":1783,"column":6},"end":{"line":1783,"column":114}},"862":{"start":{"line":1784,"column":6},"end":{"line":1784,"column":32}},"863":{"start":{"line":1785,"column":6},"end":{"line":1785,"column":42}},"864":{"start":{"line":1785,"column":20},"end":{"line":1785,"column":42}},"865":{"start":{"line":1798,"column":0},"end":{"line":1836,"column":2}},"866":{"start":{"line":1799,"column":2},"end":{"line":1799,"column":18}},"867":{"start":{"line":1800,"column":2},"end":{"line":1800,"column":95}},"868":{"start":{"line":1803,"column":2},"end":{"line":1810,"column":3}},"869":{"start":{"line":1804,"column":4},"end":{"line":1808,"column":6}},"870":{"start":{"line":1809,"column":4},"end":{"line":1809,"column":33}},"871":{"start":{"line":1812,"column":2},"end":{"line":1812,"column":27}},"872":{"start":{"line":1813,"column":2},"end":{"line":1819,"column":3}},"873":{"start":{"line":1814,"column":4},"end":{"line":1818,"column":5}},"874":{"start":{"line":1815,"column":6},"end":{"line":1815,"column":26}},"875":{"start":{"line":1816,"column":6},"end":{"line":1816,"column":65}},"876":{"start":{"line":1816,"column":41},"end":{"line":1816,"column":65}},"877":{"start":{"line":1817,"column":6},"end":{"line":1817,"column":35}},"878":{"start":{"line":1821,"column":2},"end":{"line":1821,"column":39}},"879":{"start":{"line":1822,"column":2},"end":{"line":1822,"column":34}},"880":{"start":{"line":1823,"column":2},"end":{"line":1835,"column":5}},"881":{"start":{"line":1824,"column":4},"end":{"line":1824,"column":20}},"882":{"start":{"line":1825,"column":4},"end":{"line":1827,"column":105}},"883":{"start":{"line":1828,"column":4},"end":{"line":1831,"column":5}},"884":{"start":{"line":1829,"column":6},"end":{"line":1829,"column":46}},"885":{"start":{"line":1830,"column":6},"end":{"line":1830,"column":31}},"886":{"start":{"line":1833,"column":4},"end":{"line":1833,"column":22}},"887":{"start":{"line":1834,"column":4},"end":{"line":1834,"column":32}},"888":{"start":{"line":1846,"column":0},"end":{"line":1897,"column":2}},"889":{"start":{"line":1847,"column":2},"end":{"line":1847,"column":18}},"890":{"start":{"line":1848,"column":2},"end":{"line":1851,"column":3}},"891":{"start":{"line":1849,"column":4},"end":{"line":1849,"column":26}},"892":{"start":{"line":1850,"column":4},"end":{"line":1850,"column":27}},"893":{"start":{"line":1852,"column":2},"end":{"line":1856,"column":3}},"894":{"start":{"line":1853,"column":4},"end":{"line":1853,"column":19}},"895":{"start":{"line":1854,"column":4},"end":{"line":1854,"column":36}},"896":{"start":{"line":1855,"column":4},"end":{"line":1855,"column":27}},"897":{"start":{"line":1857,"column":2},"end":{"line":1857,"column":148}},"898":{"start":{"line":1857,"column":13},"end":{"line":1857,"column":148}},"899":{"start":{"line":1858,"column":2},"end":{"line":1858,"column":61}},"900":{"start":{"line":1865,"column":2},"end":{"line":1871,"column":3}},"901":{"start":{"line":1867,"column":4},"end":{"line":1870,"column":5}},"902":{"start":{"line":1868,"column":6},"end":{"line":1868,"column":107}},"903":{"start":{"line":1869,"column":6},"end":{"line":1869,"column":64}},"904":{"start":{"line":1869,"column":41},"end":{"line":1869,"column":64}},"905":{"start":{"line":1873,"column":2},"end":{"line":1873,"column":44}},"906":{"start":{"line":1874,"column":2},"end":{"line":1874,"column":36}},"907":{"start":{"line":1876,"column":2},"end":{"line":1896,"column":5}},"908":{"start":{"line":1877,"column":4},"end":{"line":1880,"column":5}},"909":{"start":{"line":1878,"column":6},"end":{"line":1878,"column":70}},"910":{"start":{"line":1879,"column":6},"end":{"line":1879,"column":35}},"911":{"start":{"line":1882,"column":4},"end":{"line":1895,"column":7}},"912":{"start":{"line":1883,"column":6},"end":{"line":1886,"column":7}},"913":{"start":{"line":1884,"column":8},"end":{"line":1884,"column":74}},"914":{"start":{"line":1885,"column":8},"end":{"line":1885,"column":30}},"915":{"start":{"line":1888,"column":6},"end":{"line":1888,"column":40}},"916":{"start":{"line":1889,"column":6},"end":{"line":1891,"column":9}},"917":{"start":{"line":1890,"column":8},"end":{"line":1890,"column":24}},"918":{"start":{"line":1892,"column":6},"end":{"line":1894,"column":9}},"919":{"start":{"line":1893,"column":8},"end":{"line":1893,"column":57}},"920":{"start":{"line":1899,"column":0},"end":{"line":1899,"column":33}}},"branchMap":{"1":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":2},"end":{"line":70,"column":2}},{"start":{"line":70,"column":2},"end":{"line":70,"column":2}}]},"2":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":72,"column":4}},{"start":{"line":72,"column":4},"end":{"line":72,"column":4}}]},"3":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":6},"end":{"line":78,"column":6}},{"start":{"line":78,"column":6},"end":{"line":78,"column":6}}]},"4":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":18},"end":{"line":78,"column":26}},{"start":{"line":78,"column":30},"end":{"line":78,"column":32}}]},"5":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":6},"end":{"line":86,"column":6}},{"start":{"line":86,"column":6},"end":{"line":86,"column":6}}]},"6":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":6},"end":{"line":87,"column":6}},{"start":{"line":87,"column":6},"end":{"line":87,"column":6}}]},"7":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":6},"end":{"line":89,"column":6}},{"start":{"line":89,"column":6},"end":{"line":89,"column":6}}]},"8":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":64},"end":{"line":95,"column":92}},{"start":{"line":95,"column":96},"end":{"line":95,"column":98}}]},"9":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":65},"end":{"line":95,"column":74}},{"start":{"line":95,"column":78},"end":{"line":95,"column":80}}]},"10":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":100},"end":{"line":95,"column":127}},{"start":{"line":95,"column":131},"end":{"line":95,"column":133}}]},"11":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":101},"end":{"line":95,"column":109}},{"start":{"line":95,"column":113},"end":{"line":95,"column":115}}]},"12":{"line":96,"type":"binary-expr","locations":[{"start":{"line":96,"column":62},"end":{"line":96,"column":89}},{"start":{"line":96,"column":93},"end":{"line":96,"column":95}}]},"13":{"line":96,"type":"binary-expr","locations":[{"start":{"line":96,"column":63},"end":{"line":96,"column":72}},{"start":{"line":96,"column":76},"end":{"line":96,"column":78}}]},"14":{"line":96,"type":"binary-expr","locations":[{"start":{"line":96,"column":97},"end":{"line":96,"column":123}},{"start":{"line":96,"column":128},"end":{"line":96,"column":130}}]},"15":{"line":96,"type":"binary-expr","locations":[{"start":{"line":96,"column":98},"end":{"line":96,"column":106}},{"start":{"line":96,"column":110},"end":{"line":96,"column":112}}]},"16":{"line":99,"type":"cond-expr","locations":[{"start":{"line":99,"column":40},"end":{"line":99,"column":65}},{"start":{"line":99,"column":68},"end":{"line":99,"column":78}}]},"17":{"line":100,"type":"cond-expr","locations":[{"start":{"line":100,"column":60},"end":{"line":100,"column":124}},{"start":{"line":100,"column":126},"end":{"line":100,"column":136}}]},"18":{"line":101,"type":"binary-expr","locations":[{"start":{"line":101,"column":44},"end":{"line":101,"column":66}},{"start":{"line":101,"column":70},"end":{"line":101,"column":72}}]},"19":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":45},"end":{"line":102,"column":68}},{"start":{"line":102,"column":72},"end":{"line":102,"column":74}}]},"20":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":4},"end":{"line":106,"column":4}},{"start":{"line":106,"column":4},"end":{"line":106,"column":4}}]},"21":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":2},"end":{"line":129,"column":2}},{"start":{"line":129,"column":2},"end":{"line":129,"column":2}}]},"22":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":2},"end":{"line":130,"column":2}},{"start":{"line":130,"column":2},"end":{"line":130,"column":2}}]},"23":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":2},"end":{"line":132,"column":2}},{"start":{"line":132,"column":2},"end":{"line":132,"column":2}}]},"24":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":2},"end":{"line":134,"column":2}},{"start":{"line":134,"column":2},"end":{"line":134,"column":2}}]},"25":{"line":134,"type":"binary-expr","locations":[{"start":{"line":134,"column":7},"end":{"line":134,"column":15}},{"start":{"line":134,"column":21},"end":{"line":134,"column":45}}]},"26":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":2},"end":{"line":161,"column":2}},{"start":{"line":161,"column":2},"end":{"line":161,"column":2}}]},"27":{"line":161,"type":"binary-expr","locations":[{"start":{"line":161,"column":7},"end":{"line":161,"column":14}},{"start":{"line":161,"column":20},"end":{"line":161,"column":38}}]},"28":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":2},"end":{"line":176,"column":2}},{"start":{"line":176,"column":2},"end":{"line":176,"column":2}}]},"29":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":2},"end":{"line":193,"column":2}},{"start":{"line":193,"column":2},"end":{"line":193,"column":2}}]},"30":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":2},"end":{"line":194,"column":2}},{"start":{"line":194,"column":2},"end":{"line":194,"column":2}}]},"31":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":2},"end":{"line":211,"column":2}},{"start":{"line":211,"column":2},"end":{"line":211,"column":2}}]},"32":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":2},"end":{"line":212,"column":2}},{"start":{"line":212,"column":2},"end":{"line":212,"column":2}}]},"33":{"line":212,"type":"binary-expr","locations":[{"start":{"line":212,"column":7},"end":{"line":212,"column":31}},{"start":{"line":212,"column":37},"end":{"line":212,"column":77}}]},"34":{"line":229,"type":"if","locations":[{"start":{"line":229,"column":2},"end":{"line":229,"column":2}},{"start":{"line":229,"column":2},"end":{"line":229,"column":2}}]},"35":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":2},"end":{"line":230,"column":2}},{"start":{"line":230,"column":2},"end":{"line":230,"column":2}}]},"36":{"line":244,"type":"if","locations":[{"start":{"line":244,"column":2},"end":{"line":244,"column":2}},{"start":{"line":244,"column":2},"end":{"line":244,"column":2}}]},"37":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":2},"end":{"line":245,"column":2}},{"start":{"line":245,"column":2},"end":{"line":245,"column":2}}]},"38":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":2},"end":{"line":246,"column":2}},{"start":{"line":246,"column":2},"end":{"line":246,"column":2}}]},"39":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":2},"end":{"line":250,"column":2}},{"start":{"line":250,"column":2},"end":{"line":250,"column":2}}]},"40":{"line":250,"type":"binary-expr","locations":[{"start":{"line":250,"column":7},"end":{"line":250,"column":23}},{"start":{"line":250,"column":29},"end":{"line":250,"column":56}}]},"41":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":2},"end":{"line":264,"column":2}},{"start":{"line":264,"column":2},"end":{"line":264,"column":2}}]},"42":{"line":265,"type":"if","locations":[{"start":{"line":265,"column":2},"end":{"line":265,"column":2}},{"start":{"line":265,"column":2},"end":{"line":265,"column":2}}]},"43":{"line":266,"type":"if","locations":[{"start":{"line":266,"column":2},"end":{"line":266,"column":2}},{"start":{"line":266,"column":2},"end":{"line":266,"column":2}}]},"44":{"line":270,"type":"if","locations":[{"start":{"line":270,"column":2},"end":{"line":270,"column":2}},{"start":{"line":270,"column":2},"end":{"line":270,"column":2}}]},"45":{"line":270,"type":"binary-expr","locations":[{"start":{"line":270,"column":7},"end":{"line":270,"column":23}},{"start":{"line":270,"column":29},"end":{"line":270,"column":56}}]},"46":{"line":285,"type":"binary-expr","locations":[{"start":{"line":285,"column":8},"end":{"line":285,"column":11}},{"start":{"line":285,"column":15},"end":{"line":285,"column":23}},{"start":{"line":285,"column":27},"end":{"line":285,"column":48}},{"start":{"line":285,"column":52},"end":{"line":285,"column":68}}]},"47":{"line":285,"type":"binary-expr","locations":[{"start":{"line":285,"column":28},"end":{"line":285,"column":37}},{"start":{"line":285,"column":41},"end":{"line":285,"column":43}}]},"48":{"line":285,"type":"binary-expr","locations":[{"start":{"line":285,"column":53},"end":{"line":285,"column":57}},{"start":{"line":285,"column":61},"end":{"line":285,"column":63}}]},"49":{"line":286,"type":"if","locations":[{"start":{"line":286,"column":2},"end":{"line":286,"column":2}},{"start":{"line":286,"column":2},"end":{"line":286,"column":2}}]},"50":{"line":304,"type":"if","locations":[{"start":{"line":304,"column":2},"end":{"line":304,"column":2}},{"start":{"line":304,"column":2},"end":{"line":304,"column":2}}]},"51":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":2},"end":{"line":305,"column":2}},{"start":{"line":305,"column":2},"end":{"line":305,"column":2}}]},"52":{"line":330,"type":"binary-expr","locations":[{"start":{"line":330,"column":16},"end":{"line":330,"column":20}},{"start":{"line":330,"column":24},"end":{"line":330,"column":26}}]},"53":{"line":348,"type":"binary-expr","locations":[{"start":{"line":348,"column":16},"end":{"line":348,"column":20}},{"start":{"line":348,"column":24},"end":{"line":348,"column":26}}]},"54":{"line":367,"type":"if","locations":[{"start":{"line":367,"column":2},"end":{"line":367,"column":2}},{"start":{"line":367,"column":2},"end":{"line":367,"column":2}}]},"55":{"line":372,"type":"if","locations":[{"start":{"line":372,"column":2},"end":{"line":372,"column":2}},{"start":{"line":372,"column":2},"end":{"line":372,"column":2}}]},"56":{"line":376,"type":"binary-expr","locations":[{"start":{"line":376,"column":2},"end":{"line":376,"column":6}},{"start":{"line":376,"column":11},"end":{"line":376,"column":20}}]},"57":{"line":377,"type":"binary-expr","locations":[{"start":{"line":377,"column":2},"end":{"line":377,"column":8}},{"start":{"line":377,"column":13},"end":{"line":377,"column":33}},{"start":{"line":377,"column":39},"end":{"line":377,"column":59}}]},"58":{"line":391,"type":"if","locations":[{"start":{"line":391,"column":4},"end":{"line":391,"column":4}},{"start":{"line":391,"column":4},"end":{"line":391,"column":4}}]},"59":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":4},"end":{"line":395,"column":4}},{"start":{"line":395,"column":4},"end":{"line":395,"column":4}}]},"60":{"line":405,"type":"binary-expr","locations":[{"start":{"line":405,"column":20},"end":{"line":405,"column":44}},{"start":{"line":405,"column":48},"end":{"line":405,"column":77}},{"start":{"line":405,"column":81},"end":{"line":407,"column":3}}]},"61":{"line":405,"type":"binary-expr","locations":[{"start":{"line":405,"column":21},"end":{"line":405,"column":25}},{"start":{"line":405,"column":29},"end":{"line":405,"column":31}}]},"62":{"line":405,"type":"binary-expr","locations":[{"start":{"line":405,"column":49},"end":{"line":405,"column":58}},{"start":{"line":405,"column":62},"end":{"line":405,"column":64}}]},"63":{"line":424,"type":"if","locations":[{"start":{"line":424,"column":6},"end":{"line":424,"column":6}},{"start":{"line":424,"column":6},"end":{"line":424,"column":6}}]},"64":{"line":426,"type":"if","locations":[{"start":{"line":426,"column":8},"end":{"line":426,"column":8}},{"start":{"line":426,"column":8},"end":{"line":426,"column":8}}]},"65":{"line":427,"type":"if","locations":[{"start":{"line":427,"column":8},"end":{"line":427,"column":8}},{"start":{"line":427,"column":8},"end":{"line":427,"column":8}}]},"66":{"line":427,"type":"binary-expr","locations":[{"start":{"line":427,"column":13},"end":{"line":427,"column":37}},{"start":{"line":427,"column":43},"end":{"line":427,"column":49}}]},"67":{"line":443,"type":"binary-expr","locations":[{"start":{"line":443,"column":26},"end":{"line":443,"column":34}},{"start":{"line":443,"column":38},"end":{"line":443,"column":40}}]},"68":{"line":444,"type":"if","locations":[{"start":{"line":444,"column":6},"end":{"line":444,"column":6}},{"start":{"line":444,"column":6},"end":{"line":444,"column":6}}]},"69":{"line":450,"type":"binary-expr","locations":[{"start":{"line":450,"column":30},"end":{"line":450,"column":47}},{"start":{"line":450,"column":51},"end":{"line":450,"column":54}}]},"70":{"line":458,"type":"binary-expr","locations":[{"start":{"line":458,"column":22},"end":{"line":458,"column":25}},{"start":{"line":458,"column":29},"end":{"line":458,"column":31}}]},"71":{"line":462,"type":"if","locations":[{"start":{"line":462,"column":10},"end":{"line":462,"column":10}},{"start":{"line":462,"column":10},"end":{"line":462,"column":10}}]},"72":{"line":485,"type":"if","locations":[{"start":{"line":485,"column":4},"end":{"line":485,"column":4}},{"start":{"line":485,"column":4},"end":{"line":485,"column":4}}]},"73":{"line":485,"type":"binary-expr","locations":[{"start":{"line":485,"column":9},"end":{"line":485,"column":12}},{"start":{"line":485,"column":16},"end":{"line":485,"column":18}}]},"74":{"line":492,"type":"binary-expr","locations":[{"start":{"line":492,"column":14},"end":{"line":492,"column":31}},{"start":{"line":492,"column":35},"end":{"line":492,"column":44}}]},"75":{"line":492,"type":"binary-expr","locations":[{"start":{"line":492,"column":15},"end":{"line":492,"column":18}},{"start":{"line":492,"column":22},"end":{"line":492,"column":24}}]},"76":{"line":493,"type":"if","locations":[{"start":{"line":493,"column":4},"end":{"line":493,"column":4}},{"start":{"line":493,"column":4},"end":{"line":493,"column":4}}]},"77":{"line":501,"type":"if","locations":[{"start":{"line":501,"column":4},"end":{"line":501,"column":4}},{"start":{"line":501,"column":4},"end":{"line":501,"column":4}}]},"78":{"line":501,"type":"binary-expr","locations":[{"start":{"line":501,"column":9},"end":{"line":501,"column":33}},{"start":{"line":501,"column":39},"end":{"line":501,"column":67}}]},"79":{"line":505,"type":"binary-expr","locations":[{"start":{"line":505,"column":16},"end":{"line":505,"column":23}},{"start":{"line":505,"column":27},"end":{"line":505,"column":29}}]},"80":{"line":506,"type":"if","locations":[{"start":{"line":506,"column":6},"end":{"line":506,"column":6}},{"start":{"line":506,"column":6},"end":{"line":506,"column":6}}]},"81":{"line":512,"type":"binary-expr","locations":[{"start":{"line":512,"column":17},"end":{"line":512,"column":30}},{"start":{"line":512,"column":35},"end":{"line":512,"column":53}}]},"82":{"line":514,"type":"if","locations":[{"start":{"line":514,"column":2},"end":{"line":514,"column":2}},{"start":{"line":514,"column":2},"end":{"line":514,"column":2}}]},"83":{"line":516,"type":"cond-expr","locations":[{"start":{"line":516,"column":79},"end":{"line":516,"column":94}},{"start":{"line":516,"column":97},"end":{"line":516,"column":102}}]},"84":{"line":519,"type":"if","locations":[{"start":{"line":519,"column":2},"end":{"line":519,"column":2}},{"start":{"line":519,"column":2},"end":{"line":519,"column":2}}]},"85":{"line":520,"type":"if","locations":[{"start":{"line":520,"column":4},"end":{"line":520,"column":4}},{"start":{"line":520,"column":4},"end":{"line":520,"column":4}}]},"86":{"line":522,"type":"cond-expr","locations":[{"start":{"line":522,"column":81},"end":{"line":522,"column":96}},{"start":{"line":522,"column":99},"end":{"line":522,"column":104}}]},"87":{"line":528,"type":"cond-expr","locations":[{"start":{"line":528,"column":77},"end":{"line":528,"column":92}},{"start":{"line":528,"column":95},"end":{"line":528,"column":100}}]},"88":{"line":530,"type":"if","locations":[{"start":{"line":530,"column":4},"end":{"line":530,"column":4}},{"start":{"line":530,"column":4},"end":{"line":530,"column":4}}]},"89":{"line":531,"type":"if","locations":[{"start":{"line":531,"column":6},"end":{"line":531,"column":6}},{"start":{"line":531,"column":6},"end":{"line":531,"column":6}}]},"90":{"line":559,"type":"if","locations":[{"start":{"line":559,"column":2},"end":{"line":559,"column":2}},{"start":{"line":559,"column":2},"end":{"line":559,"column":2}}]},"91":{"line":567,"type":"if","locations":[{"start":{"line":567,"column":2},"end":{"line":567,"column":2}},{"start":{"line":567,"column":2},"end":{"line":567,"column":2}}]},"92":{"line":567,"type":"binary-expr","locations":[{"start":{"line":567,"column":7},"end":{"line":567,"column":24}},{"start":{"line":567,"column":30},"end":{"line":567,"column":57}}]},"93":{"line":577,"type":"if","locations":[{"start":{"line":577,"column":4},"end":{"line":577,"column":4}},{"start":{"line":577,"column":4},"end":{"line":577,"column":4}}]},"94":{"line":584,"type":"if","locations":[{"start":{"line":584,"column":4},"end":{"line":584,"column":4}},{"start":{"line":584,"column":4},"end":{"line":584,"column":4}}]},"95":{"line":584,"type":"binary-expr","locations":[{"start":{"line":584,"column":9},"end":{"line":584,"column":23}},{"start":{"line":584,"column":29},"end":{"line":584,"column":58}}]},"96":{"line":590,"type":"if","locations":[{"start":{"line":590,"column":2},"end":{"line":590,"column":2}},{"start":{"line":590,"column":2},"end":{"line":590,"column":2}}]},"97":{"line":602,"type":"if","locations":[{"start":{"line":602,"column":4},"end":{"line":602,"column":4}},{"start":{"line":602,"column":4},"end":{"line":602,"column":4}}]},"98":{"line":608,"type":"binary-expr","locations":[{"start":{"line":608,"column":16},"end":{"line":608,"column":23}},{"start":{"line":608,"column":27},"end":{"line":608,"column":29}}]},"99":{"line":610,"type":"if","locations":[{"start":{"line":610,"column":6},"end":{"line":610,"column":6}},{"start":{"line":610,"column":6},"end":{"line":610,"column":6}}]},"100":{"line":611,"type":"if","locations":[{"start":{"line":611,"column":8},"end":{"line":611,"column":8}},{"start":{"line":611,"column":8},"end":{"line":611,"column":8}}]},"101":{"line":612,"type":"if","locations":[{"start":{"line":612,"column":8},"end":{"line":612,"column":8}},{"start":{"line":612,"column":8},"end":{"line":612,"column":8}}]},"102":{"line":629,"type":"binary-expr","locations":[{"start":{"line":629,"column":10},"end":{"line":629,"column":44}},{"start":{"line":630,"column":11},"end":{"line":630,"column":34}},{"start":{"line":631,"column":10},"end":{"line":633,"column":11}}]},"103":{"line":631,"type":"binary-expr","locations":[{"start":{"line":631,"column":16},"end":{"line":631,"column":26}},{"start":{"line":631,"column":30},"end":{"line":631,"column":32}}]},"104":{"line":645,"type":"if","locations":[{"start":{"line":645,"column":2},"end":{"line":645,"column":2}},{"start":{"line":645,"column":2},"end":{"line":645,"column":2}}]},"105":{"line":645,"type":"binary-expr","locations":[{"start":{"line":645,"column":34},"end":{"line":645,"column":38}},{"start":{"line":645,"column":42},"end":{"line":645,"column":44}}]},"106":{"line":649,"type":"cond-expr","locations":[{"start":{"line":649,"column":60},"end":{"line":649,"column":72}},{"start":{"line":649,"column":75},"end":{"line":649,"column":77}}]},"107":{"line":660,"type":"if","locations":[{"start":{"line":660,"column":2},"end":{"line":660,"column":2}},{"start":{"line":660,"column":2},"end":{"line":660,"column":2}}]},"108":{"line":660,"type":"binary-expr","locations":[{"start":{"line":660,"column":34},"end":{"line":660,"column":38}},{"start":{"line":660,"column":42},"end":{"line":660,"column":44}}]},"109":{"line":664,"type":"cond-expr","locations":[{"start":{"line":664,"column":59},"end":{"line":664,"column":71}},{"start":{"line":664,"column":74},"end":{"line":664,"column":76}}]},"110":{"line":672,"type":"if","locations":[{"start":{"line":672,"column":4},"end":{"line":672,"column":4}},{"start":{"line":672,"column":4},"end":{"line":672,"column":4}}]},"111":{"line":688,"type":"if","locations":[{"start":{"line":688,"column":2},"end":{"line":688,"column":2}},{"start":{"line":688,"column":2},"end":{"line":688,"column":2}}]},"112":{"line":707,"type":"if","locations":[{"start":{"line":707,"column":2},"end":{"line":707,"column":2}},{"start":{"line":707,"column":2},"end":{"line":707,"column":2}}]},"113":{"line":711,"type":"if","locations":[{"start":{"line":711,"column":2},"end":{"line":711,"column":2}},{"start":{"line":711,"column":2},"end":{"line":711,"column":2}}]},"114":{"line":716,"type":"if","locations":[{"start":{"line":716,"column":2},"end":{"line":716,"column":2}},{"start":{"line":716,"column":2},"end":{"line":716,"column":2}}]},"115":{"line":721,"type":"binary-expr","locations":[{"start":{"line":721,"column":66},"end":{"line":721,"column":71}},{"start":{"line":721,"column":75},"end":{"line":721,"column":77}}]},"116":{"line":724,"type":"if","locations":[{"start":{"line":724,"column":2},"end":{"line":724,"column":2}},{"start":{"line":724,"column":2},"end":{"line":724,"column":2}}]},"117":{"line":727,"type":"if","locations":[{"start":{"line":727,"column":4},"end":{"line":727,"column":4}},{"start":{"line":727,"column":4},"end":{"line":727,"column":4}}]},"118":{"line":735,"type":"binary-expr","locations":[{"start":{"line":735,"column":27},"end":{"line":735,"column":31}},{"start":{"line":735,"column":35},"end":{"line":735,"column":37}}]},"119":{"line":738,"type":"binary-expr","locations":[{"start":{"line":738,"column":31},"end":{"line":738,"column":54}},{"start":{"line":738,"column":58},"end":{"line":738,"column":81}}]},"120":{"line":738,"type":"binary-expr","locations":[{"start":{"line":738,"column":32},"end":{"line":738,"column":36}},{"start":{"line":738,"column":40},"end":{"line":738,"column":42}}]},"121":{"line":741,"type":"if","locations":[{"start":{"line":741,"column":4},"end":{"line":741,"column":4}},{"start":{"line":741,"column":4},"end":{"line":741,"column":4}}]},"122":{"line":749,"type":"if","locations":[{"start":{"line":749,"column":6},"end":{"line":749,"column":6}},{"start":{"line":749,"column":6},"end":{"line":749,"column":6}}]},"123":{"line":750,"type":"if","locations":[{"start":{"line":750,"column":8},"end":{"line":750,"column":8}},{"start":{"line":750,"column":8},"end":{"line":750,"column":8}}]},"124":{"line":758,"type":"if","locations":[{"start":{"line":758,"column":10},"end":{"line":758,"column":10}},{"start":{"line":758,"column":10},"end":{"line":758,"column":10}}]},"125":{"line":764,"type":"if","locations":[{"start":{"line":764,"column":6},"end":{"line":764,"column":6}},{"start":{"line":764,"column":6},"end":{"line":764,"column":6}}]},"126":{"line":771,"type":"if","locations":[{"start":{"line":771,"column":10},"end":{"line":771,"column":10}},{"start":{"line":771,"column":10},"end":{"line":771,"column":10}}]},"127":{"line":777,"type":"if","locations":[{"start":{"line":777,"column":12},"end":{"line":777,"column":12}},{"start":{"line":777,"column":12},"end":{"line":777,"column":12}}]},"128":{"line":791,"type":"if","locations":[{"start":{"line":791,"column":7},"end":{"line":791,"column":7}},{"start":{"line":791,"column":7},"end":{"line":791,"column":7}}]},"129":{"line":797,"type":"binary-expr","locations":[{"start":{"line":797,"column":65},"end":{"line":797,"column":73}},{"start":{"line":797,"column":77},"end":{"line":797,"column":85}}]},"130":{"line":820,"type":"if","locations":[{"start":{"line":820,"column":2},"end":{"line":820,"column":2}},{"start":{"line":820,"column":2},"end":{"line":820,"column":2}}]},"131":{"line":825,"type":"if","locations":[{"start":{"line":825,"column":2},"end":{"line":825,"column":2}},{"start":{"line":825,"column":2},"end":{"line":825,"column":2}}]},"132":{"line":831,"type":"binary-expr","locations":[{"start":{"line":831,"column":27},"end":{"line":831,"column":31}},{"start":{"line":831,"column":35},"end":{"line":831,"column":37}}]},"133":{"line":834,"type":"binary-expr","locations":[{"start":{"line":834,"column":31},"end":{"line":834,"column":54}},{"start":{"line":834,"column":58},"end":{"line":834,"column":60}}]},"134":{"line":834,"type":"binary-expr","locations":[{"start":{"line":834,"column":32},"end":{"line":834,"column":36}},{"start":{"line":834,"column":40},"end":{"line":834,"column":42}}]},"135":{"line":837,"type":"if","locations":[{"start":{"line":837,"column":4},"end":{"line":837,"column":4}},{"start":{"line":837,"column":4},"end":{"line":837,"column":4}}]},"136":{"line":838,"type":"if","locations":[{"start":{"line":838,"column":6},"end":{"line":838,"column":6}},{"start":{"line":838,"column":6},"end":{"line":838,"column":6}}]},"137":{"line":863,"type":"if","locations":[{"start":{"line":863,"column":2},"end":{"line":863,"column":2}},{"start":{"line":863,"column":2},"end":{"line":863,"column":2}}]},"138":{"line":871,"type":"if","locations":[{"start":{"line":871,"column":2},"end":{"line":871,"column":2}},{"start":{"line":871,"column":2},"end":{"line":871,"column":2}}]},"139":{"line":878,"type":"if","locations":[{"start":{"line":878,"column":4},"end":{"line":878,"column":4}},{"start":{"line":878,"column":4},"end":{"line":878,"column":4}}]},"140":{"line":884,"type":"binary-expr","locations":[{"start":{"line":884,"column":14},"end":{"line":884,"column":17}},{"start":{"line":884,"column":21},"end":{"line":884,"column":23}}]},"141":{"line":884,"type":"binary-expr","locations":[{"start":{"line":884,"column":44},"end":{"line":884,"column":47}},{"start":{"line":884,"column":51},"end":{"line":884,"column":53}}]},"142":{"line":885,"type":"binary-expr","locations":[{"start":{"line":885,"column":20},"end":{"line":885,"column":23}},{"start":{"line":885,"column":27},"end":{"line":885,"column":29}}]},"143":{"line":900,"type":"if","locations":[{"start":{"line":900,"column":2},"end":{"line":900,"column":2}},{"start":{"line":900,"column":2},"end":{"line":900,"column":2}}]},"144":{"line":908,"type":"if","locations":[{"start":{"line":908,"column":2},"end":{"line":908,"column":2}},{"start":{"line":908,"column":2},"end":{"line":908,"column":2}}]},"145":{"line":915,"type":"if","locations":[{"start":{"line":915,"column":4},"end":{"line":915,"column":4}},{"start":{"line":915,"column":4},"end":{"line":915,"column":4}}]},"146":{"line":921,"type":"binary-expr","locations":[{"start":{"line":921,"column":14},"end":{"line":921,"column":17}},{"start":{"line":921,"column":21},"end":{"line":921,"column":23}}]},"147":{"line":921,"type":"binary-expr","locations":[{"start":{"line":921,"column":45},"end":{"line":921,"column":48}},{"start":{"line":921,"column":52},"end":{"line":921,"column":54}}]},"148":{"line":922,"type":"binary-expr","locations":[{"start":{"line":922,"column":20},"end":{"line":922,"column":23}},{"start":{"line":922,"column":27},"end":{"line":922,"column":29}}]},"149":{"line":941,"type":"binary-expr","locations":[{"start":{"line":941,"column":25},"end":{"line":941,"column":42}},{"start":{"line":941,"column":46},"end":{"line":941,"column":48}}]},"150":{"line":950,"type":"binary-expr","locations":[{"start":{"line":950,"column":25},"end":{"line":950,"column":42}},{"start":{"line":950,"column":46},"end":{"line":950,"column":48}}]},"151":{"line":964,"type":"if","locations":[{"start":{"line":964,"column":2},"end":{"line":964,"column":2}},{"start":{"line":964,"column":2},"end":{"line":964,"column":2}}]},"152":{"line":974,"type":"binary-expr","locations":[{"start":{"line":974,"column":39},"end":{"line":974,"column":43}},{"start":{"line":974,"column":47},"end":{"line":974,"column":49}}]},"153":{"line":975,"type":"binary-expr","locations":[{"start":{"line":975,"column":46},"end":{"line":975,"column":69}},{"start":{"line":975,"column":73},"end":{"line":975,"column":96}}]},"154":{"line":975,"type":"binary-expr","locations":[{"start":{"line":975,"column":47},"end":{"line":975,"column":51}},{"start":{"line":975,"column":55},"end":{"line":975,"column":57}}]},"155":{"line":978,"type":"if","locations":[{"start":{"line":978,"column":4},"end":{"line":978,"column":4}},{"start":{"line":978,"column":4},"end":{"line":978,"column":4}}]},"156":{"line":979,"type":"if","locations":[{"start":{"line":979,"column":6},"end":{"line":979,"column":6}},{"start":{"line":979,"column":6},"end":{"line":979,"column":6}}]},"157":{"line":984,"type":"if","locations":[{"start":{"line":984,"column":4},"end":{"line":984,"column":4}},{"start":{"line":984,"column":4},"end":{"line":984,"column":4}}]},"158":{"line":985,"type":"if","locations":[{"start":{"line":985,"column":6},"end":{"line":985,"column":6}},{"start":{"line":985,"column":6},"end":{"line":985,"column":6}}]},"159":{"line":989,"type":"if","locations":[{"start":{"line":989,"column":4},"end":{"line":989,"column":4}},{"start":{"line":989,"column":4},"end":{"line":989,"column":4}}]},"160":{"line":1009,"type":"binary-expr","locations":[{"start":{"line":1009,"column":23},"end":{"line":1009,"column":35}},{"start":{"line":1009,"column":39},"end":{"line":1009,"column":41}}]},"161":{"line":1010,"type":"if","locations":[{"start":{"line":1010,"column":4},"end":{"line":1010,"column":4}},{"start":{"line":1010,"column":4},"end":{"line":1010,"column":4}}]},"162":{"line":1012,"type":"binary-expr","locations":[{"start":{"line":1012,"column":17},"end":{"line":1012,"column":29}},{"start":{"line":1012,"column":33},"end":{"line":1012,"column":35}}]},"163":{"line":1021,"type":"binary-expr","locations":[{"start":{"line":1021,"column":28},"end":{"line":1021,"column":35}},{"start":{"line":1021,"column":39},"end":{"line":1021,"column":41}}]},"164":{"line":1029,"type":"binary-expr","locations":[{"start":{"line":1029,"column":35},"end":{"line":1029,"column":58}},{"start":{"line":1029,"column":62},"end":{"line":1029,"column":84}},{"start":{"line":1029,"column":88},"end":{"line":1029,"column":90}}]},"165":{"line":1029,"type":"binary-expr","locations":[{"start":{"line":1029,"column":36},"end":{"line":1029,"column":40}},{"start":{"line":1029,"column":44},"end":{"line":1029,"column":46}}]},"166":{"line":1033,"type":"if","locations":[{"start":{"line":1033,"column":8},"end":{"line":1033,"column":8}},{"start":{"line":1033,"column":8},"end":{"line":1033,"column":8}}]},"167":{"line":1041,"type":"if","locations":[{"start":{"line":1041,"column":10},"end":{"line":1041,"column":10}},{"start":{"line":1041,"column":10},"end":{"line":1041,"column":10}}]},"168":{"line":1042,"type":"binary-expr","locations":[{"start":{"line":1042,"column":55},"end":{"line":1042,"column":78}},{"start":{"line":1042,"column":82},"end":{"line":1042,"column":104}}]},"169":{"line":1042,"type":"binary-expr","locations":[{"start":{"line":1042,"column":56},"end":{"line":1042,"column":60}},{"start":{"line":1042,"column":64},"end":{"line":1042,"column":66}}]},"170":{"line":1055,"type":"if","locations":[{"start":{"line":1055,"column":10},"end":{"line":1055,"column":10}},{"start":{"line":1055,"column":10},"end":{"line":1055,"column":10}}]},"171":{"line":1064,"type":"binary-expr","locations":[{"start":{"line":1064,"column":15},"end":{"line":1064,"column":22}},{"start":{"line":1064,"column":26},"end":{"line":1064,"column":30}}]},"172":{"line":1079,"type":"if","locations":[{"start":{"line":1079,"column":6},"end":{"line":1079,"column":6}},{"start":{"line":1079,"column":6},"end":{"line":1079,"column":6}}]},"173":{"line":1095,"type":"if","locations":[{"start":{"line":1095,"column":2},"end":{"line":1095,"column":2}},{"start":{"line":1095,"column":2},"end":{"line":1095,"column":2}}]},"174":{"line":1103,"type":"if","locations":[{"start":{"line":1103,"column":4},"end":{"line":1103,"column":4}},{"start":{"line":1103,"column":4},"end":{"line":1103,"column":4}}]},"175":{"line":1104,"type":"if","locations":[{"start":{"line":1104,"column":6},"end":{"line":1104,"column":6}},{"start":{"line":1104,"column":6},"end":{"line":1104,"column":6}}]},"176":{"line":1108,"type":"if","locations":[{"start":{"line":1108,"column":4},"end":{"line":1108,"column":4}},{"start":{"line":1108,"column":4},"end":{"line":1108,"column":4}}]},"177":{"line":1110,"type":"if","locations":[{"start":{"line":1110,"column":6},"end":{"line":1110,"column":6}},{"start":{"line":1110,"column":6},"end":{"line":1110,"column":6}}]},"178":{"line":1114,"type":"if","locations":[{"start":{"line":1114,"column":6},"end":{"line":1114,"column":6}},{"start":{"line":1114,"column":6},"end":{"line":1114,"column":6}}]},"179":{"line":1115,"type":"if","locations":[{"start":{"line":1115,"column":8},"end":{"line":1115,"column":8}},{"start":{"line":1115,"column":8},"end":{"line":1115,"column":8}}]},"180":{"line":1121,"type":"binary-expr","locations":[{"start":{"line":1121,"column":53},"end":{"line":1121,"column":76}},{"start":{"line":1121,"column":80},"end":{"line":1121,"column":103}}]},"181":{"line":1121,"type":"binary-expr","locations":[{"start":{"line":1121,"column":54},"end":{"line":1121,"column":58}},{"start":{"line":1121,"column":62},"end":{"line":1121,"column":64}}]},"182":{"line":1125,"type":"if","locations":[{"start":{"line":1125,"column":6},"end":{"line":1125,"column":6}},{"start":{"line":1125,"column":6},"end":{"line":1125,"column":6}}]},"183":{"line":1141,"type":"if","locations":[{"start":{"line":1141,"column":2},"end":{"line":1141,"column":2}},{"start":{"line":1141,"column":2},"end":{"line":1141,"column":2}}]},"184":{"line":1149,"type":"if","locations":[{"start":{"line":1149,"column":4},"end":{"line":1149,"column":4}},{"start":{"line":1149,"column":4},"end":{"line":1149,"column":4}}]},"185":{"line":1150,"type":"if","locations":[{"start":{"line":1150,"column":6},"end":{"line":1150,"column":6}},{"start":{"line":1150,"column":6},"end":{"line":1150,"column":6}}]},"186":{"line":1154,"type":"if","locations":[{"start":{"line":1154,"column":4},"end":{"line":1154,"column":4}},{"start":{"line":1154,"column":4},"end":{"line":1154,"column":4}}]},"187":{"line":1156,"type":"if","locations":[{"start":{"line":1156,"column":6},"end":{"line":1156,"column":6}},{"start":{"line":1156,"column":6},"end":{"line":1156,"column":6}}]},"188":{"line":1160,"type":"if","locations":[{"start":{"line":1160,"column":6},"end":{"line":1160,"column":6}},{"start":{"line":1160,"column":6},"end":{"line":1160,"column":6}}]},"189":{"line":1161,"type":"if","locations":[{"start":{"line":1161,"column":8},"end":{"line":1161,"column":8}},{"start":{"line":1161,"column":8},"end":{"line":1161,"column":8}}]},"190":{"line":1167,"type":"binary-expr","locations":[{"start":{"line":1167,"column":53},"end":{"line":1167,"column":76}},{"start":{"line":1167,"column":80},"end":{"line":1167,"column":103}}]},"191":{"line":1167,"type":"binary-expr","locations":[{"start":{"line":1167,"column":54},"end":{"line":1167,"column":58}},{"start":{"line":1167,"column":62},"end":{"line":1167,"column":64}}]},"192":{"line":1171,"type":"if","locations":[{"start":{"line":1171,"column":6},"end":{"line":1171,"column":6}},{"start":{"line":1171,"column":6},"end":{"line":1171,"column":6}}]},"193":{"line":1186,"type":"if","locations":[{"start":{"line":1186,"column":2},"end":{"line":1186,"column":2}},{"start":{"line":1186,"column":2},"end":{"line":1186,"column":2}}]},"194":{"line":1194,"type":"if","locations":[{"start":{"line":1194,"column":4},"end":{"line":1194,"column":4}},{"start":{"line":1194,"column":4},"end":{"line":1194,"column":4}}]},"195":{"line":1199,"type":"cond-expr","locations":[{"start":{"line":1199,"column":58},"end":{"line":1199,"column":64}},{"start":{"line":1199,"column":67},"end":{"line":1199,"column":77}}]},"196":{"line":1214,"type":"if","locations":[{"start":{"line":1214,"column":2},"end":{"line":1214,"column":2}},{"start":{"line":1214,"column":2},"end":{"line":1214,"column":2}}]},"197":{"line":1222,"type":"if","locations":[{"start":{"line":1222,"column":4},"end":{"line":1222,"column":4}},{"start":{"line":1222,"column":4},"end":{"line":1222,"column":4}}]},"198":{"line":1227,"type":"cond-expr","locations":[{"start":{"line":1227,"column":61},"end":{"line":1227,"column":67}},{"start":{"line":1227,"column":70},"end":{"line":1227,"column":80}}]},"199":{"line":1243,"type":"if","locations":[{"start":{"line":1243,"column":2},"end":{"line":1243,"column":2}},{"start":{"line":1243,"column":2},"end":{"line":1243,"column":2}}]},"200":{"line":1251,"type":"binary-expr","locations":[{"start":{"line":1251,"column":27},"end":{"line":1251,"column":31}},{"start":{"line":1251,"column":35},"end":{"line":1251,"column":37}}]},"201":{"line":1255,"type":"if","locations":[{"start":{"line":1255,"column":4},"end":{"line":1255,"column":4}},{"start":{"line":1255,"column":4},"end":{"line":1255,"column":4}}]},"202":{"line":1259,"type":"if","locations":[{"start":{"line":1259,"column":4},"end":{"line":1259,"column":4}},{"start":{"line":1259,"column":4},"end":{"line":1259,"column":4}}]},"203":{"line":1259,"type":"binary-expr","locations":[{"start":{"line":1259,"column":9},"end":{"line":1259,"column":17}},{"start":{"line":1259,"column":23},"end":{"line":1259,"column":42}}]},"204":{"line":1267,"type":"binary-expr","locations":[{"start":{"line":1267,"column":30},"end":{"line":1267,"column":39}},{"start":{"line":1267,"column":43},"end":{"line":1267,"column":45}}]},"205":{"line":1269,"type":"binary-expr","locations":[{"start":{"line":1269,"column":14},"end":{"line":1269,"column":66}},{"start":{"line":1270,"column":14},"end":{"line":1270,"column":66}}]},"206":{"line":1269,"type":"binary-expr","locations":[{"start":{"line":1269,"column":15},"end":{"line":1269,"column":22}},{"start":{"line":1269,"column":26},"end":{"line":1269,"column":28}}]},"207":{"line":1270,"type":"binary-expr","locations":[{"start":{"line":1270,"column":15},"end":{"line":1270,"column":22}},{"start":{"line":1270,"column":26},"end":{"line":1270,"column":28}}]},"208":{"line":1272,"type":"cond-expr","locations":[{"start":{"line":1272,"column":60},"end":{"line":1272,"column":64}},{"start":{"line":1272,"column":67},"end":{"line":1272,"column":75}}]},"209":{"line":1285,"type":"if","locations":[{"start":{"line":1285,"column":2},"end":{"line":1285,"column":2}},{"start":{"line":1285,"column":2},"end":{"line":1285,"column":2}}]},"210":{"line":1290,"type":"binary-expr","locations":[{"start":{"line":1290,"column":23},"end":{"line":1290,"column":27}},{"start":{"line":1290,"column":31},"end":{"line":1290,"column":33}}]},"211":{"line":1291,"type":"binary-expr","locations":[{"start":{"line":1291,"column":16},"end":{"line":1291,"column":59}},{"start":{"line":1291,"column":63},"end":{"line":1291,"column":65}}]},"212":{"line":1291,"type":"binary-expr","locations":[{"start":{"line":1291,"column":17},"end":{"line":1291,"column":21}},{"start":{"line":1291,"column":25},"end":{"line":1291,"column":34}},{"start":{"line":1291,"column":38},"end":{"line":1291,"column":40}}]},"213":{"line":1293,"type":"binary-expr","locations":[{"start":{"line":1293,"column":12},"end":{"line":1293,"column":23}},{"start":{"line":1293,"column":29},"end":{"line":1293,"column":48}}]},"214":{"line":1309,"type":"if","locations":[{"start":{"line":1309,"column":2},"end":{"line":1309,"column":2}},{"start":{"line":1309,"column":2},"end":{"line":1309,"column":2}}]},"215":{"line":1313,"type":"if","locations":[{"start":{"line":1313,"column":2},"end":{"line":1313,"column":2}},{"start":{"line":1313,"column":2},"end":{"line":1313,"column":2}}]},"216":{"line":1320,"type":"binary-expr","locations":[{"start":{"line":1320,"column":36},"end":{"line":1320,"column":40}},{"start":{"line":1320,"column":44},"end":{"line":1320,"column":46}}]},"217":{"line":1322,"type":"binary-expr","locations":[{"start":{"line":1322,"column":31},"end":{"line":1322,"column":54}},{"start":{"line":1322,"column":58},"end":{"line":1322,"column":60}}]},"218":{"line":1322,"type":"binary-expr","locations":[{"start":{"line":1322,"column":32},"end":{"line":1322,"column":36}},{"start":{"line":1322,"column":40},"end":{"line":1322,"column":42}}]},"219":{"line":1322,"type":"binary-expr","locations":[{"start":{"line":1322,"column":62},"end":{"line":1322,"column":85}},{"start":{"line":1322,"column":89},"end":{"line":1322,"column":91}}]},"220":{"line":1322,"type":"binary-expr","locations":[{"start":{"line":1322,"column":93},"end":{"line":1322,"column":115}},{"start":{"line":1322,"column":119},"end":{"line":1322,"column":121}}]},"221":{"line":1327,"type":"if","locations":[{"start":{"line":1327,"column":4},"end":{"line":1327,"column":4}},{"start":{"line":1327,"column":4},"end":{"line":1327,"column":4}}]},"222":{"line":1328,"type":"if","locations":[{"start":{"line":1328,"column":6},"end":{"line":1328,"column":6}},{"start":{"line":1328,"column":6},"end":{"line":1328,"column":6}}]},"223":{"line":1332,"type":"if","locations":[{"start":{"line":1332,"column":4},"end":{"line":1332,"column":4}},{"start":{"line":1332,"column":4},"end":{"line":1332,"column":4}}]},"224":{"line":1332,"type":"binary-expr","locations":[{"start":{"line":1332,"column":9},"end":{"line":1332,"column":18}},{"start":{"line":1332,"column":24},"end":{"line":1332,"column":44}}]},"225":{"line":1334,"type":"if","locations":[{"start":{"line":1334,"column":6},"end":{"line":1334,"column":6}},{"start":{"line":1334,"column":6},"end":{"line":1334,"column":6}}]},"226":{"line":1347,"type":"if","locations":[{"start":{"line":1347,"column":6},"end":{"line":1347,"column":6}},{"start":{"line":1347,"column":6},"end":{"line":1347,"column":6}}]},"227":{"line":1348,"type":"binary-expr","locations":[{"start":{"line":1348,"column":51},"end":{"line":1348,"column":74}},{"start":{"line":1348,"column":78},"end":{"line":1348,"column":101}}]},"228":{"line":1348,"type":"binary-expr","locations":[{"start":{"line":1348,"column":52},"end":{"line":1348,"column":56}},{"start":{"line":1348,"column":60},"end":{"line":1348,"column":62}}]},"229":{"line":1351,"type":"if","locations":[{"start":{"line":1351,"column":8},"end":{"line":1351,"column":8}},{"start":{"line":1351,"column":8},"end":{"line":1351,"column":8}}]},"230":{"line":1353,"type":"if","locations":[{"start":{"line":1353,"column":12},"end":{"line":1353,"column":12}},{"start":{"line":1353,"column":12},"end":{"line":1353,"column":12}}]},"231":{"line":1364,"type":"if","locations":[{"start":{"line":1364,"column":11},"end":{"line":1364,"column":11}},{"start":{"line":1364,"column":11},"end":{"line":1364,"column":11}}]},"232":{"line":1365,"type":"binary-expr","locations":[{"start":{"line":1365,"column":49},"end":{"line":1365,"column":72}},{"start":{"line":1365,"column":76},"end":{"line":1365,"column":98}}]},"233":{"line":1365,"type":"binary-expr","locations":[{"start":{"line":1365,"column":50},"end":{"line":1365,"column":54}},{"start":{"line":1365,"column":58},"end":{"line":1365,"column":60}}]},"234":{"line":1368,"type":"if","locations":[{"start":{"line":1368,"column":8},"end":{"line":1368,"column":8}},{"start":{"line":1368,"column":8},"end":{"line":1368,"column":8}}]},"235":{"line":1370,"type":"if","locations":[{"start":{"line":1370,"column":12},"end":{"line":1370,"column":12}},{"start":{"line":1370,"column":12},"end":{"line":1370,"column":12}}]},"236":{"line":1382,"type":"binary-expr","locations":[{"start":{"line":1382,"column":41},"end":{"line":1382,"column":64}},{"start":{"line":1382,"column":68},"end":{"line":1382,"column":124}}]},"237":{"line":1382,"type":"binary-expr","locations":[{"start":{"line":1382,"column":42},"end":{"line":1382,"column":46}},{"start":{"line":1382,"column":50},"end":{"line":1382,"column":52}}]},"238":{"line":1389,"type":"if","locations":[{"start":{"line":1389,"column":6},"end":{"line":1389,"column":6}},{"start":{"line":1389,"column":6},"end":{"line":1389,"column":6}}]},"239":{"line":1390,"type":"if","locations":[{"start":{"line":1390,"column":8},"end":{"line":1390,"column":8}},{"start":{"line":1390,"column":8},"end":{"line":1390,"column":8}}]},"240":{"line":1400,"type":"if","locations":[{"start":{"line":1400,"column":6},"end":{"line":1400,"column":6}},{"start":{"line":1400,"column":6},"end":{"line":1400,"column":6}}]},"241":{"line":1417,"type":"if","locations":[{"start":{"line":1417,"column":2},"end":{"line":1417,"column":2}},{"start":{"line":1417,"column":2},"end":{"line":1417,"column":2}}]},"242":{"line":1421,"type":"if","locations":[{"start":{"line":1421,"column":2},"end":{"line":1421,"column":2}},{"start":{"line":1421,"column":2},"end":{"line":1421,"column":2}}]},"243":{"line":1446,"type":"if","locations":[{"start":{"line":1446,"column":6},"end":{"line":1446,"column":6}},{"start":{"line":1446,"column":6},"end":{"line":1446,"column":6}}]},"244":{"line":1447,"type":"if","locations":[{"start":{"line":1447,"column":8},"end":{"line":1447,"column":8}},{"start":{"line":1447,"column":8},"end":{"line":1447,"column":8}}]},"245":{"line":1451,"type":"if","locations":[{"start":{"line":1451,"column":6},"end":{"line":1451,"column":6}},{"start":{"line":1451,"column":6},"end":{"line":1451,"column":6}}]},"246":{"line":1451,"type":"binary-expr","locations":[{"start":{"line":1451,"column":11},"end":{"line":1451,"column":20}},{"start":{"line":1451,"column":26},"end":{"line":1451,"column":46}}]},"247":{"line":1453,"type":"if","locations":[{"start":{"line":1453,"column":8},"end":{"line":1453,"column":8}},{"start":{"line":1453,"column":8},"end":{"line":1453,"column":8}}]},"248":{"line":1462,"type":"binary-expr","locations":[{"start":{"line":1462,"column":47},"end":{"line":1462,"column":69}},{"start":{"line":1462,"column":73},"end":{"line":1462,"column":75}}]},"249":{"line":1470,"type":"if","locations":[{"start":{"line":1470,"column":6},"end":{"line":1470,"column":6}},{"start":{"line":1470,"column":6},"end":{"line":1470,"column":6}}]},"250":{"line":1474,"type":"binary-expr","locations":[{"start":{"line":1474,"column":29},"end":{"line":1474,"column":33}},{"start":{"line":1474,"column":37},"end":{"line":1474,"column":39}}]},"251":{"line":1476,"type":"binary-expr","locations":[{"start":{"line":1476,"column":31},"end":{"line":1476,"column":54}},{"start":{"line":1476,"column":58},"end":{"line":1476,"column":60}}]},"252":{"line":1476,"type":"binary-expr","locations":[{"start":{"line":1476,"column":32},"end":{"line":1476,"column":36}},{"start":{"line":1476,"column":40},"end":{"line":1476,"column":42}}]},"253":{"line":1480,"type":"if","locations":[{"start":{"line":1480,"column":2},"end":{"line":1480,"column":2}},{"start":{"line":1480,"column":2},"end":{"line":1480,"column":2}}]},"254":{"line":1483,"type":"if","locations":[{"start":{"line":1483,"column":6},"end":{"line":1483,"column":6}},{"start":{"line":1483,"column":6},"end":{"line":1483,"column":6}}]},"255":{"line":1484,"type":"if","locations":[{"start":{"line":1484,"column":8},"end":{"line":1484,"column":8}},{"start":{"line":1484,"column":8},"end":{"line":1484,"column":8}}]},"256":{"line":1506,"type":"if","locations":[{"start":{"line":1506,"column":2},"end":{"line":1506,"column":2}},{"start":{"line":1506,"column":2},"end":{"line":1506,"column":2}}]},"257":{"line":1511,"type":"if","locations":[{"start":{"line":1511,"column":2},"end":{"line":1511,"column":2}},{"start":{"line":1511,"column":2},"end":{"line":1511,"column":2}}]},"258":{"line":1517,"type":"binary-expr","locations":[{"start":{"line":1517,"column":36},"end":{"line":1517,"column":40}},{"start":{"line":1517,"column":44},"end":{"line":1517,"column":46}}]},"259":{"line":1520,"type":"binary-expr","locations":[{"start":{"line":1520,"column":31},"end":{"line":1520,"column":54}},{"start":{"line":1520,"column":58},"end":{"line":1520,"column":81}}]},"260":{"line":1520,"type":"binary-expr","locations":[{"start":{"line":1520,"column":32},"end":{"line":1520,"column":36}},{"start":{"line":1520,"column":40},"end":{"line":1520,"column":42}}]},"261":{"line":1523,"type":"if","locations":[{"start":{"line":1523,"column":4},"end":{"line":1523,"column":4}},{"start":{"line":1523,"column":4},"end":{"line":1523,"column":4}}]},"262":{"line":1524,"type":"if","locations":[{"start":{"line":1524,"column":6},"end":{"line":1524,"column":6}},{"start":{"line":1524,"column":6},"end":{"line":1524,"column":6}}]},"263":{"line":1528,"type":"if","locations":[{"start":{"line":1528,"column":4},"end":{"line":1528,"column":4}},{"start":{"line":1528,"column":4},"end":{"line":1528,"column":4}}]},"264":{"line":1528,"type":"binary-expr","locations":[{"start":{"line":1528,"column":9},"end":{"line":1528,"column":18}},{"start":{"line":1528,"column":24},"end":{"line":1528,"column":44}}]},"265":{"line":1530,"type":"if","locations":[{"start":{"line":1530,"column":6},"end":{"line":1530,"column":6}},{"start":{"line":1530,"column":6},"end":{"line":1530,"column":6}}]},"266":{"line":1534,"type":"binary-expr","locations":[{"start":{"line":1534,"column":53},"end":{"line":1534,"column":76}},{"start":{"line":1534,"column":80},"end":{"line":1534,"column":103}}]},"267":{"line":1534,"type":"binary-expr","locations":[{"start":{"line":1534,"column":54},"end":{"line":1534,"column":58}},{"start":{"line":1534,"column":62},"end":{"line":1534,"column":64}}]},"268":{"line":1538,"type":"if","locations":[{"start":{"line":1538,"column":4},"end":{"line":1538,"column":4}},{"start":{"line":1538,"column":4},"end":{"line":1538,"column":4}}]},"269":{"line":1540,"type":"if","locations":[{"start":{"line":1540,"column":8},"end":{"line":1540,"column":8}},{"start":{"line":1540,"column":8},"end":{"line":1540,"column":8}}]},"270":{"line":1541,"type":"if","locations":[{"start":{"line":1541,"column":10},"end":{"line":1541,"column":10}},{"start":{"line":1541,"column":10},"end":{"line":1541,"column":10}}]},"271":{"line":1547,"type":"if","locations":[{"start":{"line":1547,"column":8},"end":{"line":1547,"column":8}},{"start":{"line":1547,"column":8},"end":{"line":1547,"column":8}}]},"272":{"line":1552,"type":"if","locations":[{"start":{"line":1552,"column":6},"end":{"line":1552,"column":6}},{"start":{"line":1552,"column":6},"end":{"line":1552,"column":6}}]},"273":{"line":1569,"type":"if","locations":[{"start":{"line":1569,"column":2},"end":{"line":1569,"column":2}},{"start":{"line":1569,"column":2},"end":{"line":1569,"column":2}}]},"274":{"line":1573,"type":"if","locations":[{"start":{"line":1573,"column":2},"end":{"line":1573,"column":2}},{"start":{"line":1573,"column":2},"end":{"line":1573,"column":2}}]},"275":{"line":1573,"type":"binary-expr","locations":[{"start":{"line":1573,"column":7},"end":{"line":1573,"column":32}},{"start":{"line":1573,"column":38},"end":{"line":1573,"column":42}}]},"276":{"line":1581,"type":"binary-expr","locations":[{"start":{"line":1581,"column":36},"end":{"line":1581,"column":40}},{"start":{"line":1581,"column":44},"end":{"line":1581,"column":46}}]},"277":{"line":1584,"type":"binary-expr","locations":[{"start":{"line":1584,"column":31},"end":{"line":1584,"column":54}},{"start":{"line":1584,"column":58},"end":{"line":1584,"column":81}},{"start":{"line":1584,"column":85},"end":{"line":1584,"column":87}}]},"278":{"line":1584,"type":"binary-expr","locations":[{"start":{"line":1584,"column":32},"end":{"line":1584,"column":36}},{"start":{"line":1584,"column":40},"end":{"line":1584,"column":42}}]},"279":{"line":1588,"type":"if","locations":[{"start":{"line":1588,"column":4},"end":{"line":1588,"column":4}},{"start":{"line":1588,"column":4},"end":{"line":1588,"column":4}}]},"280":{"line":1589,"type":"if","locations":[{"start":{"line":1589,"column":6},"end":{"line":1589,"column":6}},{"start":{"line":1589,"column":6},"end":{"line":1589,"column":6}}]},"281":{"line":1593,"type":"if","locations":[{"start":{"line":1593,"column":4},"end":{"line":1593,"column":4}},{"start":{"line":1593,"column":4},"end":{"line":1593,"column":4}}]},"282":{"line":1593,"type":"binary-expr","locations":[{"start":{"line":1593,"column":9},"end":{"line":1593,"column":18}},{"start":{"line":1593,"column":24},"end":{"line":1593,"column":44}}]},"283":{"line":1595,"type":"if","locations":[{"start":{"line":1595,"column":6},"end":{"line":1595,"column":6}},{"start":{"line":1595,"column":6},"end":{"line":1595,"column":6}}]},"284":{"line":1603,"type":"if","locations":[{"start":{"line":1603,"column":6},"end":{"line":1603,"column":6}},{"start":{"line":1603,"column":6},"end":{"line":1603,"column":6}}]},"285":{"line":1604,"type":"binary-expr","locations":[{"start":{"line":1604,"column":53},"end":{"line":1604,"column":76}},{"start":{"line":1604,"column":80},"end":{"line":1604,"column":102}}]},"286":{"line":1604,"type":"binary-expr","locations":[{"start":{"line":1604,"column":54},"end":{"line":1604,"column":58}},{"start":{"line":1604,"column":62},"end":{"line":1604,"column":64}}]},"287":{"line":1608,"type":"if","locations":[{"start":{"line":1608,"column":8},"end":{"line":1608,"column":8}},{"start":{"line":1608,"column":8},"end":{"line":1608,"column":8}}]},"288":{"line":1610,"type":"if","locations":[{"start":{"line":1610,"column":12},"end":{"line":1610,"column":12}},{"start":{"line":1610,"column":12},"end":{"line":1610,"column":12}}]},"289":{"line":1624,"type":"if","locations":[{"start":{"line":1624,"column":6},"end":{"line":1624,"column":6}},{"start":{"line":1624,"column":6},"end":{"line":1624,"column":6}}]},"290":{"line":1625,"type":"if","locations":[{"start":{"line":1625,"column":8},"end":{"line":1625,"column":8}},{"start":{"line":1625,"column":8},"end":{"line":1625,"column":8}}]},"291":{"line":1631,"type":"if","locations":[{"start":{"line":1631,"column":6},"end":{"line":1631,"column":6}},{"start":{"line":1631,"column":6},"end":{"line":1631,"column":6}}]},"292":{"line":1648,"type":"if","locations":[{"start":{"line":1648,"column":2},"end":{"line":1648,"column":2}},{"start":{"line":1648,"column":2},"end":{"line":1648,"column":2}}]},"293":{"line":1652,"type":"if","locations":[{"start":{"line":1652,"column":2},"end":{"line":1652,"column":2}},{"start":{"line":1652,"column":2},"end":{"line":1652,"column":2}}]},"294":{"line":1657,"type":"if","locations":[{"start":{"line":1657,"column":2},"end":{"line":1657,"column":2}},{"start":{"line":1657,"column":2},"end":{"line":1657,"column":2}}]},"295":{"line":1661,"type":"if","locations":[{"start":{"line":1661,"column":2},"end":{"line":1661,"column":2}},{"start":{"line":1661,"column":2},"end":{"line":1661,"column":2}}]},"296":{"line":1667,"type":"binary-expr","locations":[{"start":{"line":1667,"column":36},"end":{"line":1667,"column":40}},{"start":{"line":1667,"column":44},"end":{"line":1667,"column":46}}]},"297":{"line":1670,"type":"binary-expr","locations":[{"start":{"line":1670,"column":31},"end":{"line":1670,"column":54}},{"start":{"line":1670,"column":58},"end":{"line":1670,"column":80}},{"start":{"line":1670,"column":84},"end":{"line":1670,"column":86}}]},"298":{"line":1670,"type":"binary-expr","locations":[{"start":{"line":1670,"column":32},"end":{"line":1670,"column":36}},{"start":{"line":1670,"column":40},"end":{"line":1670,"column":42}}]},"299":{"line":1673,"type":"if","locations":[{"start":{"line":1673,"column":4},"end":{"line":1673,"column":4}},{"start":{"line":1673,"column":4},"end":{"line":1673,"column":4}}]},"300":{"line":1674,"type":"if","locations":[{"start":{"line":1674,"column":6},"end":{"line":1674,"column":6}},{"start":{"line":1674,"column":6},"end":{"line":1674,"column":6}}]},"301":{"line":1678,"type":"if","locations":[{"start":{"line":1678,"column":4},"end":{"line":1678,"column":4}},{"start":{"line":1678,"column":4},"end":{"line":1678,"column":4}}]},"302":{"line":1678,"type":"binary-expr","locations":[{"start":{"line":1678,"column":9},"end":{"line":1678,"column":18}},{"start":{"line":1678,"column":24},"end":{"line":1678,"column":44}}]},"303":{"line":1680,"type":"if","locations":[{"start":{"line":1680,"column":6},"end":{"line":1680,"column":6}},{"start":{"line":1680,"column":6},"end":{"line":1680,"column":6}}]},"304":{"line":1684,"type":"binary-expr","locations":[{"start":{"line":1684,"column":51},"end":{"line":1684,"column":74}},{"start":{"line":1684,"column":78},"end":{"line":1684,"column":100}}]},"305":{"line":1684,"type":"binary-expr","locations":[{"start":{"line":1684,"column":52},"end":{"line":1684,"column":56}},{"start":{"line":1684,"column":60},"end":{"line":1684,"column":62}}]},"306":{"line":1688,"type":"if","locations":[{"start":{"line":1688,"column":4},"end":{"line":1688,"column":4}},{"start":{"line":1688,"column":4},"end":{"line":1688,"column":4}}]},"307":{"line":1688,"type":"binary-expr","locations":[{"start":{"line":1688,"column":8},"end":{"line":1688,"column":47}},{"start":{"line":1688,"column":51},"end":{"line":1688,"column":68}}]},"308":{"line":1690,"type":"if","locations":[{"start":{"line":1690,"column":8},"end":{"line":1690,"column":8}},{"start":{"line":1690,"column":8},"end":{"line":1690,"column":8}}]},"309":{"line":1691,"type":"if","locations":[{"start":{"line":1691,"column":10},"end":{"line":1691,"column":10}},{"start":{"line":1691,"column":10},"end":{"line":1691,"column":10}}]},"310":{"line":1697,"type":"if","locations":[{"start":{"line":1697,"column":8},"end":{"line":1697,"column":8}},{"start":{"line":1697,"column":8},"end":{"line":1697,"column":8}}]},"311":{"line":1702,"type":"if","locations":[{"start":{"line":1702,"column":6},"end":{"line":1702,"column":6}},{"start":{"line":1702,"column":6},"end":{"line":1702,"column":6}}]},"312":{"line":1720,"type":"if","locations":[{"start":{"line":1720,"column":2},"end":{"line":1720,"column":2}},{"start":{"line":1720,"column":2},"end":{"line":1720,"column":2}}]},"313":{"line":1724,"type":"if","locations":[{"start":{"line":1724,"column":2},"end":{"line":1724,"column":2}},{"start":{"line":1724,"column":2},"end":{"line":1724,"column":2}}]},"314":{"line":1728,"type":"if","locations":[{"start":{"line":1728,"column":2},"end":{"line":1728,"column":2}},{"start":{"line":1728,"column":2},"end":{"line":1728,"column":2}}]},"315":{"line":1728,"type":"binary-expr","locations":[{"start":{"line":1728,"column":7},"end":{"line":1728,"column":32}},{"start":{"line":1728,"column":38},"end":{"line":1728,"column":42}}]},"316":{"line":1735,"type":"binary-expr","locations":[{"start":{"line":1735,"column":36},"end":{"line":1735,"column":40}},{"start":{"line":1735,"column":44},"end":{"line":1735,"column":46}}]},"317":{"line":1738,"type":"binary-expr","locations":[{"start":{"line":1738,"column":31},"end":{"line":1738,"column":54}},{"start":{"line":1738,"column":58},"end":{"line":1738,"column":80}},{"start":{"line":1738,"column":84},"end":{"line":1738,"column":86}}]},"318":{"line":1738,"type":"binary-expr","locations":[{"start":{"line":1738,"column":32},"end":{"line":1738,"column":36}},{"start":{"line":1738,"column":40},"end":{"line":1738,"column":42}}]},"319":{"line":1742,"type":"if","locations":[{"start":{"line":1742,"column":4},"end":{"line":1742,"column":4}},{"start":{"line":1742,"column":4},"end":{"line":1742,"column":4}}]},"320":{"line":1743,"type":"if","locations":[{"start":{"line":1743,"column":6},"end":{"line":1743,"column":6}},{"start":{"line":1743,"column":6},"end":{"line":1743,"column":6}}]},"321":{"line":1747,"type":"if","locations":[{"start":{"line":1747,"column":4},"end":{"line":1747,"column":4}},{"start":{"line":1747,"column":4},"end":{"line":1747,"column":4}}]},"322":{"line":1747,"type":"binary-expr","locations":[{"start":{"line":1747,"column":9},"end":{"line":1747,"column":18}},{"start":{"line":1747,"column":24},"end":{"line":1747,"column":44}}]},"323":{"line":1749,"type":"if","locations":[{"start":{"line":1749,"column":6},"end":{"line":1749,"column":6}},{"start":{"line":1749,"column":6},"end":{"line":1749,"column":6}}]},"324":{"line":1757,"type":"if","locations":[{"start":{"line":1757,"column":6},"end":{"line":1757,"column":6}},{"start":{"line":1757,"column":6},"end":{"line":1757,"column":6}}]},"325":{"line":1758,"type":"binary-expr","locations":[{"start":{"line":1758,"column":51},"end":{"line":1758,"column":74}},{"start":{"line":1758,"column":78},"end":{"line":1758,"column":100}}]},"326":{"line":1758,"type":"binary-expr","locations":[{"start":{"line":1758,"column":52},"end":{"line":1758,"column":56}},{"start":{"line":1758,"column":60},"end":{"line":1758,"column":62}}]},"327":{"line":1762,"type":"if","locations":[{"start":{"line":1762,"column":8},"end":{"line":1762,"column":8}},{"start":{"line":1762,"column":8},"end":{"line":1762,"column":8}}]},"328":{"line":1762,"type":"binary-expr","locations":[{"start":{"line":1762,"column":12},"end":{"line":1762,"column":51}},{"start":{"line":1762,"column":55},"end":{"line":1762,"column":72}}]},"329":{"line":1764,"type":"if","locations":[{"start":{"line":1764,"column":12},"end":{"line":1764,"column":12}},{"start":{"line":1764,"column":12},"end":{"line":1764,"column":12}}]},"330":{"line":1778,"type":"if","locations":[{"start":{"line":1778,"column":6},"end":{"line":1778,"column":6}},{"start":{"line":1778,"column":6},"end":{"line":1778,"column":6}}]},"331":{"line":1779,"type":"if","locations":[{"start":{"line":1779,"column":8},"end":{"line":1779,"column":8}},{"start":{"line":1779,"column":8},"end":{"line":1779,"column":8}}]},"332":{"line":1785,"type":"if","locations":[{"start":{"line":1785,"column":6},"end":{"line":1785,"column":6}},{"start":{"line":1785,"column":6},"end":{"line":1785,"column":6}}]},"333":{"line":1800,"type":"cond-expr","locations":[{"start":{"line":1800,"column":72},"end":{"line":1800,"column":80}},{"start":{"line":1800,"column":83},"end":{"line":1800,"column":93}}]},"334":{"line":1803,"type":"if","locations":[{"start":{"line":1803,"column":2},"end":{"line":1803,"column":2}},{"start":{"line":1803,"column":2},"end":{"line":1803,"column":2}}]},"335":{"line":1803,"type":"binary-expr","locations":[{"start":{"line":1803,"column":7},"end":{"line":1803,"column":17}},{"start":{"line":1803,"column":23},"end":{"line":1803,"column":33}}]},"336":{"line":1814,"type":"if","locations":[{"start":{"line":1814,"column":4},"end":{"line":1814,"column":4}},{"start":{"line":1814,"column":4},"end":{"line":1814,"column":4}}]},"337":{"line":1816,"type":"if","locations":[{"start":{"line":1816,"column":6},"end":{"line":1816,"column":6}},{"start":{"line":1816,"column":6},"end":{"line":1816,"column":6}}]},"338":{"line":1826,"type":"cond-expr","locations":[{"start":{"line":1826,"column":36},"end":{"line":1826,"column":44}},{"start":{"line":1826,"column":47},"end":{"line":1826,"column":58}}]},"339":{"line":1827,"type":"cond-expr","locations":[{"start":{"line":1827,"column":82},"end":{"line":1827,"column":90}},{"start":{"line":1827,"column":93},"end":{"line":1827,"column":103}}]},"340":{"line":1828,"type":"if","locations":[{"start":{"line":1828,"column":4},"end":{"line":1828,"column":4}},{"start":{"line":1828,"column":4},"end":{"line":1828,"column":4}}]},"341":{"line":1848,"type":"if","locations":[{"start":{"line":1848,"column":2},"end":{"line":1848,"column":2}},{"start":{"line":1848,"column":2},"end":{"line":1848,"column":2}}]},"342":{"line":1852,"type":"if","locations":[{"start":{"line":1852,"column":2},"end":{"line":1852,"column":2}},{"start":{"line":1852,"column":2},"end":{"line":1852,"column":2}}]},"343":{"line":1854,"type":"binary-expr","locations":[{"start":{"line":1854,"column":10},"end":{"line":1854,"column":18}},{"start":{"line":1854,"column":22},"end":{"line":1854,"column":35}}]},"344":{"line":1857,"type":"if","locations":[{"start":{"line":1857,"column":2},"end":{"line":1857,"column":2}},{"start":{"line":1857,"column":2},"end":{"line":1857,"column":2}}]},"345":{"line":1858,"type":"binary-expr","locations":[{"start":{"line":1858,"column":38},"end":{"line":1858,"column":48}},{"start":{"line":1858,"column":52},"end":{"line":1858,"column":59}}]},"346":{"line":1867,"type":"if","locations":[{"start":{"line":1867,"column":4},"end":{"line":1867,"column":4}},{"start":{"line":1867,"column":4},"end":{"line":1867,"column":4}}]},"347":{"line":1867,"type":"binary-expr","locations":[{"start":{"line":1867,"column":9},"end":{"line":1867,"column":12}},{"start":{"line":1867,"column":16},"end":{"line":1867,"column":18}}]},"348":{"line":1869,"type":"if","locations":[{"start":{"line":1869,"column":6},"end":{"line":1869,"column":6}},{"start":{"line":1869,"column":6},"end":{"line":1869,"column":6}}]},"349":{"line":1877,"type":"if","locations":[{"start":{"line":1877,"column":4},"end":{"line":1877,"column":4}},{"start":{"line":1877,"column":4},"end":{"line":1877,"column":4}}]},"350":{"line":1882,"type":"binary-expr","locations":[{"start":{"line":1882,"column":51},"end":{"line":1882,"column":61}},{"start":{"line":1882,"column":65},"end":{"line":1882,"column":72}}]},"351":{"line":1883,"type":"if","locations":[{"start":{"line":1883,"column":6},"end":{"line":1883,"column":6}},{"start":{"line":1883,"column":6},"end":{"line":1883,"column":6}}]}},"code":["var events = require('events');","var util = require('util');","var ldap = require('ldapjs');","var async = require('async');","var _ = require('underscore');","var bunyan = require('bunyan');","var Url = require('url');","","var User = require('./models/user');","var Group = require('./models/group');","var RangeRetrievalSpecifierAttribute = require('./client/rangeretrievalspecifierattribute');","","var isPasswordLoggingEnabled = false;","var maxOutputLength = 256;","","var log = bunyan.createLogger({","  name: 'ActiveDirectory',","  streams: [","    { level: 'fatal',","      stream: process.stdout }","  ]","});","","var defaultPageSize = 1000; // The maximum number of results that AD will return in a single call. Default=1000","var defaultAttributes, originalDefaultAttributes;","defaultAttributes = originalDefaultAttributes = {","  user: [ ","    'dn',","    'userPrincipalName', 'sAMAccountName', /*'objectSID',*/ 'mail',","    'lockoutTime', 'whenCreated', 'pwdLastSet', 'userAccountControl',","    'employeeID', 'sn', 'givenName', 'initials', 'cn', 'displayName',","    'comment', 'description' ","  ],","  group: [","    'dn', 'cn', 'description'","  ]","};","","var defaultReferrals, originalDefaultReferrals;","defaultReferrals = originalDefaultReferrals = {","  enabled: false,","  // Active directory returns the following partitions as default referrals which we don't want to follow","  exclude: [","    'ldaps?://ForestDnsZones\\\\..*/.*',","    'ldaps?://DomainDnsZones\\\\..*/.*',","    'ldaps?://.*/CN=Configuration,.*'","  ]","};","","// Precompile some common, frequently used regular expressions.","var re = {","  'isDistinguishedName': /(([^=]+=.+),?)+/gi,","  'isUserResult': /CN=Person,CN=Schema,CN=Configuration,.*/i,","  'isGroupResult': /CN=Group,CN=Schema,CN=Configuration,.*/i","};","","/**"," * Agent for retrieving ActiveDirectory user & group information."," *"," * @public"," * @constructor"," * @param {Object|String} url The url of the ldap server (i.e. ldap://domain.com). Optionally, all of the parameters can be specified as an object. { url: 'ldap://domain.com', baseDN: 'dc=domain,dc=com', username: 'admin@domain.com', password: 'supersecret', { referrals: { enabled: true }, attributes: { user: [ 'attributes to include in response' ], group: [ 'attributes to include in response' ] } } }. 'attributes' & 'referrals' parameter is optional and only necesary if overriding functionality."," * @param {String} baseDN The default base container where all LDAP queries originate from. (i.e. dc=domain,dc=com)"," * @param {String} username The administrative username or dn of the user for retrieving user & group information. (i.e. Must be a DN or a userPrincipalName (email))"," * @param {String} password The administrative password of the specified user."," * @param {Object} defaults Allow for default options to be overridden. { attributes: { user: [ 'attributes to include in response' ], group: [ 'attributes to include in response' ] } }"," * @returns {ActiveDirectory}"," */","var ActiveDirectory = function(url, baseDN, username, password, defaults) {","  if (this instanceof ActiveDirectory) {","    this.opts = {};","    if (typeof(url) === 'string') {","      this.opts.url = url;","      this.baseDN = baseDN;","      this.opts.bindDN = username;","      this.opts.bindCredentials = password;","","      if (typeof((defaults || {}).entryParser) === 'function') {","        this.opts.entryParser = defaults.entryParser;","      }","    }","    else {","      this.opts = _.defaults({}, url);","      this.baseDN = this.opts.baseDN;","","      if (! this.opts.bindDN) this.opts.bindDN = this.opts.username;","      if (! this.opts.bindCredentials) this.opts.bindCredentials = this.opts.password;","","      if (this.opts.logging) {","        log = bunyan.createLogger(_.defaults({}, this.opts.logging));","        delete(this.opts.logging);","      }","    }","","    defaultAttributes = _.extend({}, originalDefaultAttributes, (this.opts || {}).attributes || {}, (defaults || {}).attributes || {});","    defaultReferrals = _.extend({}, originalDefaultReferrals, (this.opts || {}).referrals || {}, (defaults || {}).referrals  || {});","","    log.info('Using username/password (%s/%s) to bind to ActiveDirectory (%s).', this.opts.bindDN,","             isPasswordLoggingEnabled ? this.opts.bindCredentials : '********', this.opts.url);","    log.info('Referrals are %s', defaultReferrals.enabled ? 'enabled. Exclusions: '+JSON.stringify(defaultReferrals.exclude): 'disabled');","    log.info('Default user attributes: %j', defaultAttributes.user || []);","    log.info('Default group attributes: %j', defaultAttributes.group || []);","","    // Enable connection pooling","    // TODO: To be disabled / removed in future release of ldapjs > 0.7.1","    if (typeof(this.opts.maxConnections) === 'undefined') {","      this.opts.maxConnections = 20;","    }","    events.EventEmitter.call(this);","  }","  else {","    return(new ActiveDirectory(url, baseDN, username, password, defaults));","  }","};","util.inherits(ActiveDirectory, events.EventEmitter);","","/**"," * Expose ldapjs filters to avoid TypeErrors for filters"," * @static"," */","ActiveDirectory.filters = ldap.filters;","","/**"," * Truncates the specified output to the specified length if exceeded."," * @param {String} output The output to truncate if too long"," * @param {Number} [maxLength] The maximum length. If not specified, then the global value maxOutputLength is used."," */","function truncateLogOutput(output, maxLength) {","  if (typeof(maxLength) === 'undefined') maxLength = maxOutputLength;","  if (! output) return(output);","","  if (typeof(output) !== 'string') output = output.toString();","  var length = output.length;","  if ((! length) || (length < (maxLength + 3))) return(output);","","  var prefix = Math.ceil((maxLength - 3)/2);","  var suffix = Math.floor((maxLength - 3)/2);","  return(output.slice(0, prefix)+ '...' +","    output.slice(length-suffix));","}","","/**"," * Checks to see if there are any event emitters defined for the"," * specified event name."," * @param {String} event The name of the event to inspect."," * @returns {Boolean} True if there are events defined, false if otherwise."," */","function hasEvents(event) {","  return(events.EventEmitter.listenerCount(this, event) > 0);","}","","/**"," * Checks to see if the value is a distinguished name."," *"," * @private"," * @param {String} value The value to check to see if it's a distinguished name."," * @returns {Boolean}"," */","function isDistinguishedName(value) {","  log.trace('isDistinguishedName(%s)', value);","  if ((! value) || (value.length === 0)) return(false);","  re.isDistinguishedName.lastIndex = 0; // Reset the regular expression","  return(re.isDistinguishedName.test(value));","}","","/**"," * Parses the distinguishedName (dn) to remove any invalid characters or to"," * properly escape the request."," *"," * @private"," *   @param dn {String} The dn to parse."," * @returns {String}"," */","function parseDistinguishedName(dn) {","  log.trace('parseDistinguishedName(%s)', dn);","  if (! dn) return(dn);","","  dn = dn.replace(/\"/g, '\\\\\"');","  return(dn.replace('\\\\,', '\\\\\\\\,'));","}","","/**"," * Gets the ActiveDirectory LDAP query string for a user search."," *"," * @private"," * @param {String} username The samAccountName or userPrincipalName (email) of the user."," * @returns {String}"," */","function getUserQueryFilter(username) {","  log.trace('getUserQueryFilter(%s)', username);","  var self = this;","","  if (! username) return('(objectCategory=User)');","  if (isDistinguishedName.call(self, username)) {","    return('(&(objectCategory=User)(distinguishedName='+parseDistinguishedName(username)+'))');","  }","","  return('(&(objectCategory=User)(|(sAMAccountName='+username+')(userPrincipalName='+username+')))');","}","","/**"," * Gets a properly formatted LDAP compound filter. This is a very simple approach to ensure that the LDAP"," * compound filter is wrapped with an enclosing () if necessary. It does not handle parsing of an existing"," * compound ldap filter."," * @param {String} filter The LDAP filter to inspect."," * @returns {String}"," */","function getCompoundFilter(filter) {","  log.trace('getCompoundFilter(%s)', filter);","","  if (! filter) return(false);","  if ((filter.charAt(0) === '(') && (filter.charAt(filter.length - 1) === ')')) {","    return(filter);","  }","  return('('+filter+')');","}","","/**"," * Gets the ActiveDirectory LDAP query string for a group search."," *"," * @private"," * @param {String} groupName The name of the group"," * @returns {String}"," */","function getGroupQueryFilter(groupName) {","  log.trace('getGroupQueryFilter(%s)', groupName);","  var self = this;","","  if (! groupName) return('(objectCategory=Group)');","  if (isDistinguishedName.call(self, groupName)) {","    return('(&(objectCategory=Group)(distinguishedName='+parseDistinguishedName(groupName)+'))');","  }","  return('(&(objectCategory=Group)(cn='+groupName+'))');","}","","/**"," * Checks to see if the LDAP result describes a group entry."," * @param {Object} item The LDAP result to inspect."," * @returns {Boolean}"," */","function isGroupResult(item) {","  log.trace('isGroupResult(%j)', item);","","  if (! item) return(false);","  if (item.groupType) return(true);","  if (item.objectCategory) {","    re.isGroupResult.lastIndex = 0; // Reset the regular expression","    return(re.isGroupResult.test(item.objectCategory));","  }","  if ((item.objectClass) && (item.objectClass.length > 0)) {","    return(_.any(item.objectClass, function(c) { return(c.toLowerCase() === 'group'); }));","  }","  return(false);","}","","/**"," * Checks to see if the LDAP result describes a user entry."," * @param {Object} item The LDAP result to inspect."," * @returns {Boolean}"," */","function isUserResult(item) {","  log.trace('isUserResult(%j)', item);","","  if (! item) return(false);","  if (item.userPrincipalName) return(true);","  if (item.objectCategory) {","    re.isUserResult.lastIndex = 0; // Reset the regular expression","    return(re.isUserResult.test(item.objectCategory));","  }","  if ((item.objectClass) && (item.objectClass.length > 0)) {","    return(_.any(item.objectClass, function(c) { return(c.toLowerCase() === 'user'); }));","  }","  return(false);","}","","/**"," * Factory to create the LDAP client object."," *"," * @private"," * @param {String} url The url to use when creating the LDAP client."," * @param {object} opts The optional LDAP client options."," */","function createClient(url, opts) {","  // Attempt to get Url from this instance.","  url = url || this.url || (this.opts || {}).url || (opts || {}).url;","  if (! url) {","    throw 'No url specified for ActiveDirectory client.';","  }","  log.trace('createClient(%s)', url);","","  var opts = getLdapClientOpts(_.defaults({}, { url: url }, opts, this.opts));","  log.debug('Creating ldapjs client for %s. Opts: %j', opts.url, _.omit(opts, 'url', 'bindDN', 'bindCredentials'));","  var client = ldap.createClient(opts);","  return(client);","}","","/**"," * Checks to see if the specified referral or \"chase\" is allowed."," * @param {String} referral The referral to inspect."," * @returns {Boolean} True if the referral should be followed, false if otherwise."," */","function isAllowedReferral(referral) {","  log.trace('isAllowedReferral(%j)', referral);","  if (! defaultReferrals.enabled) return(false);","  if (! referral) return(false);","","  return(! _.any(defaultReferrals.exclude, function(exclusion) {","    var re = new RegExp(exclusion, \"i\");","    return(re.test(referral));","  }));","}","","/**"," * From the list of options, retrieves the ldapjs specific options."," *"," * @param {Object} opts The opts to parse."," * @returns {Object} The ldapjs opts."," */","function getLdapOpts(opts) {","  return(_.defaults({}, getLdapClientOpts(opts), getLdapSearchOpts(opts)));","}","","/**"," * From the list of options, retrieves the ldapjs client specific options."," *"," * @param {Object} opts The opts to parse."," * @returns {Object} The ldapjs opts."," */","function getLdapClientOpts(opts) {","  return(_.pick(opts || {},","    // Client","    'url',","    'host', 'port', 'secure', 'tlsOptions',","    'socketPath', 'log', 'timeout', 'idleTimeout',","    'reconnect', 'queue', 'queueSize', 'queueTimeout',","    'queueDisable', 'bindDN', 'bindCredentials',","    'maxConnections'","  ));","}","","/**"," * From the list of options, retrieves the ldapjs search specific options."," *"," * @param {Object} opts The opts to parse."," * @returns {Object} The ldapjs opts."," */","function getLdapSearchOpts(opts) {","  return(_.pick(opts || {},","    // Search","    'filter', 'scope', 'attributes', 'controls',","    'paged', 'sizeLimit', 'timeLimit', 'typesOnly',","    'derefAliases'","  ));","}","","/**"," * Performs a search on the LDAP tree."," * "," * @private"," * @param {String} [baseDN] The optional base directory where the LDAP query is to originate from. If not specified, then starts at the root."," * @param {Object} [opts] LDAP query string parameters to execute. { scope: '', filter: '', attributes: [ '', '', ... ], sizeLimit: 0, timelimit: 0 }"," * @param {Function} callback The callback to execure when completed. callback(err: {Object}, results: {Array[Object]}})"," */","function search(baseDN, opts, callback) {","  var self = this;","","  if (typeof(opts) === 'function') {","    callback = opts;","    opts = baseDN;","    baseDN = undefined;","  }","  if (typeof(baseDN) === 'object') {","    opts = baseDN;","    baseDN = undefined;","  }","  opts || (opts = {});","  baseDN || (baseDN = opts.baseDN) || (baseDN = self.baseDN);","  log.trace('search(%s,%j)', baseDN, opts);","","  var isDone = false;","  var pendingReferrals = [];","  var pendingRangeRetrievals = 0;","  var client = createClient.call(self, null, opts);","  client.on('error', onClientError);","","  /**","   * Call to remove the specified referral client.","   * @param {Object} client The referral client to remove.","   */","  function removeReferral(client) {","    if (! client) return;","","    client.unbind();","    var indexOf = pendingReferrals.indexOf(client);","    if (indexOf >= 0) {","      pendingReferrals.splice(indexOf, 1);","    }","  }","","  /**","   * The default entry parser to use. Does not modifications.","   * @params {Object} entry The original / raw ldapjs entry to augment","   * @params {Function} callback The callback to execute when complete.","   */","  var entryParser = (opts || {}).entryParser || (self.opts || {}).entryParser || function onEntryParser(item, raw, callback) {","    callback(item);","  };","","  /**","   * Occurs when a search entry is received. Cleans up the search entry and pushes it to the result set.","   * @param {Object} entry The entry received.","   */","  function onSearchEntry(entry) {","    log.trace('onSearchEntry(%j)', entry);","    var result = entry.object;","    delete result.controls; // Remove the controls array returned as part of the SearchEntry","","    // Some attributes can have range attributes (paging). Execute the query","    // again to get additional items.","    pendingRangeRetrievals++;","    parseRangeAttributes.call(self, result, opts, function(err, item) {","      pendingRangeRetrievals--;","","      if (err) item = entry.object;","      entryParser(item, entry.raw, function(item) {","        if (item) results.push(item);","        if ((! pendingRangeRetrievals) && (isDone)) {","          onSearchEnd();","        }","      });","    });","  }","","  /**","   * Occurs when a search reference / referral is received. Follows the referral chase if","   * enabled.","   * @param {Object} ref The referral.","   */","  function onReferralChase(ref) {","    var index = 0;","    var referralUrl;","    // Loop over the referrals received.","    while (referralUrl = (ref.uris || [])[index++]) {","      if (isAllowedReferral(referralUrl)) {","        log.debug('Following LDAP referral chase at %s', referralUrl);","        var referralClient = createClient.call(self, referralUrl, opts);","        pendingReferrals.push(referralClient);","","        var referral = Url.parse(referralUrl);","        var referralBaseDn = (referral.pathname || '/').substring(1);","        referralClient.search(referralBaseDn, getLdapOpts(opts), controls, function(err, res) {","          /**","           * Occurs when a error is encountered with the referral client.","           * @param {Object} err The error object or string.","           */","          function onReferralError(err) {","            log.error(err, '[%s] An error occurred chasing the LDAP referral on %s (%j)',","                     (err || {}).errno, referralBaseDn, opts);","            removeReferral(referralClient);","          }","          // If the referral chase / search failed, fail silently.","          if (err) {","            onReferralError(err);","            return;","          }","","          res.on('searchEntry', onSearchEntry);","          res.on('searchReference', onReferralChase);","          res.on('error', onReferralError);","          res.on('end', function(result) {","            removeReferral(referralClient);","            onSearchEnd();","          });","        });","      }","    }","  }","","  /**","   * Occurs when a client / search error occurs.","   * @param {Object} err The error object or string.","   * @param {Object} res The optional server response.","   */","  function onClientError(err, res) {","    if ((err || {}).name === 'SizeLimitExceededError') {","      onSearchEnd(res);","      return;","    }","","    client.unbind();","    log.error(err, '[%s] An error occurred performing the requested LDAP search on %s (%j)',","              (err || {}).errno || 'UNKNOWN', baseDN, opts);","    if (callback) callback(err);","  }","","  /**","   * Occurs when a search results have all been processed.","   * @param {Object} result","   */","  function onSearchEnd(result) {","    if ((! pendingRangeRetrievals) && (pendingReferrals.length <= 0)) {","      client.unbind();","      log.info('Active directory search (%s) for \"%s\" returned %d entries.',","               baseDN, truncateLogOutput(opts.filter),","               (results || []).length);","      if (callback) callback(null, results);","    }","  }","","  var results = [];","  ","  var controls = opts.controls || (opts.controls = []);","  // Add paging results control by default if not already added.","  if (!_.any(controls, function(control) { return(control instanceof ldap.PagedResultsControl); })) {","    log.debug('Adding PagedResultControl to search (%s) with filter \"%s\" for %j',","              baseDN, truncateLogOutput(opts.filter), _.any(opts.attributes) ? opts.attributes : '[*]');","    controls.push(new ldap.PagedResultsControl({ value: { size: defaultPageSize } }));","  }","  if (opts.includeDeleted) {","    if (!_.any(controls, function(control) { return(control.type === '1.2.840.113556.1.4.417'); })) {","      log.debug('Adding ShowDeletedOidControl(1.2.840.113556.1.4.417) to search (%s) with filter \"%s\" for %j',","                baseDN, truncateLogOutput(opts.filter), _.any(opts.attributes) ? opts.attributes : '[*]');","      controls.push(new ldap.Control({ type: '1.2.840.113556.1.4.417', criticality: true }));","    }","  }","","  log.debug('Querying active directory (%s) with filter \"%s\" for %j',","            baseDN, truncateLogOutput(opts.filter), _.any(opts.attributes) ? opts.attributes : '[*]');","  client.search(baseDN, getLdapOpts(opts), controls, function onSearch(err, res) {","    if (err) {","      if (callback) callback(err);","      return;","    }","","    res.on('searchEntry', onSearchEntry);","    res.on('searchReference', onReferralChase);","    res.on('error', function(err) { onClientError(err, res); });","    res.on('end', function(result) {","      isDone = true; // Flag that the primary query is complete","      onSearchEnd(result);","    });","  });","}","","/**"," * Handles any attributes that might have been returned with a range= specifier."," *"," * @private"," * @param {Object} result The entry returned from the query."," * @param {Object} opts The original LDAP query string parameters to execute. { scope: '', filter: '', attributes: [ '', '', ... ], sizeLimit: 0, timelimit: 0 }"," * @param {Function} callback The callback to execute when completed. callback(err: {Object}, result: {Object}})"," */","function parseRangeAttributes(result, opts, callback) {","  log.trace('parseRangeAttributes(%j,%j)', result, opts);","  var self = this;","","  // Check to see if any of the result attributes have range= attributes.","  // If not, return immediately.","  if (! RangeRetrievalSpecifierAttribute.prototype.hasRangeAttributes(result)) {","    callback(null, result);","    return;","  }","","  // Parse the range attributes that were provided. If the range attributes are null","  // or indicate that the range is complete, return the result.","  var rangeAttributes = RangeRetrievalSpecifierAttribute.prototype.getRangeAttributes(result);","  if ((! rangeAttributes) || (rangeAttributes.length <= 0)) {","    callback(null, result);","    return;","  }","","  // Parse each of the range attributes. Merge the range attributes into","  // the properly named property.","  var queryAttributes = [];","  _.each(rangeAttributes, function(rangeAttribute, index) {","    // Merge existing range into the properly named property.","    if (! result[rangeAttribute.attributeName]) result[rangeAttribute.attributeName] = [];","    Array.prototype.push.apply(result[rangeAttribute.attributeName], result[rangeAttribute.toString()]);","    delete(result[rangeAttribute.toString()]);","","    // Build our ldap query attributes with the proper attribute;range= tags to","    // get the next sequence of data.","    var queryAttribute = rangeAttribute.next();","    if ((queryAttribute) && (! queryAttribute.isComplete())) {","      queryAttributes.push(queryAttribute.toString());","    }","  });","","  // If we're at the end of the range (i.e. all items retrieved), return the result.","  if (queryAttributes.length <= 0) {","    log.debug('All attribute ranges %j retrieved for %s', rangeAttributes, result.dn);","    callback(null, result);","    return;","  }","","  log.debug('Attribute range retrieval specifiers %j found for \"%s\". Next range: %j',","            rangeAttributes, result.dn, queryAttributes);","  // Execute the query again with the query attributes updated.","  opts = _.defaults({ filter: '(distinguishedName='+parseDistinguishedName(result.dn)+')',","                      attributes: queryAttributes }, opts);","  search.call(self, opts, function onSearch(err, results) {","    if (err) {","      callback(err);","      return;","    }","","    // Should be only one result","    var item = (results || [])[0];","    for(var property in item) {","      if (item.hasOwnProperty(property)) {","        if (! result[property]) result[property] = [];","        if (_.isArray(result[property])) {","          Array.prototype.push.apply(result[property], item[property]);","        }","      }","    }","    callback(null, result);","  });","}","","/**"," * Checks to see if any of the specified attributes are the wildcard"," * '*\" attribute."," * @private"," * @params {Array} attributes - The attributes to inspect."," * @returns {Boolean}"," */","function shouldIncludeAllAttributes(attributes) {","  return((typeof(attributes) !== 'undefined') &&","         ((attributes.length === 0) ||","          _.any(attributes || [], function(attribute) {","           return(attribute === '*');","         }))","  );","}","","/**"," * Gets the required ldap attributes for group related queries in order to"," * do recursive queries, etc."," *"," * @private"," * @params {Object} [opts] Optional LDAP query string parameters to execute. { scope: '', filter: '', attributes: [ '', '', ... ], sizeLimit: 0, timelimit: 0 }"," */","function getRequiredLdapAttributesForGroup(opts) {","  if (shouldIncludeAllAttributes((opts || {}).attributes)) {","    return([ ]);","  }","  return(_.union([ 'dn', 'objectCategory', 'groupType', 'cn' ], ","                 includeGroupMembershipFor(opts, 'group') ? [ 'member' ] : []));","}","","/**"," * Gets the required ldap attributes for user related queries in order to"," * do recursive queries, etc."," *"," * @private"," * @params {Object} [opts] Optional LDAP query string parameters to execute. { scope: '', filter: '', attributes: [ '', '', ... ], sizeLimit: 0, timelimit: 0 }"," */","function getRequiredLdapAttributesForUser(opts) {","  if (shouldIncludeAllAttributes((opts || {}).attributes)) {","    return([ ]);","  }","  return(_.union([ 'dn', 'cn' ], ","                 includeGroupMembershipFor(opts, 'user') ? [ 'member' ] : []));","}","","/**"," * Retrieves / merges the attributes for the query."," */","function joinAttributes() {","  for (var index = 0, length = arguments.length; index < length; index++){","    if (shouldIncludeAllAttributes(arguments[index])) {","      return([ ]);","    }","  }","  return(_.union.apply(this, arguments));","}","","/**"," * Picks only the requested attributes from the ldap result. If a wildcard or"," * empty result is specified, then all attributes are returned."," * @private"," * @params {Object} result The ldap result"," * @params {Array} attributes The desired or wanted attributes"," * @returns {Object} A copy of the object with only the requested attributes"," */","function pickAttributes(result, attributes) {","  if (shouldIncludeAllAttributes(attributes)) {","    attributes = function() { ","      return(true); ","    };","  }","  return(_.pick(result, attributes));","}","","/**"," * Gets all of the groups that the specified distinguishedName (DN) belongs to."," * "," * @private"," * @param {Object} [opts] Optional LDAP query string parameters to execute. { scope: '', filter: '', attributes: [ '', '', ... ], sizeLimit: 0, timelimit: 0 }"," * @param {String} dn The distinguishedName (DN) to find membership of."," * @param {Function} callback The callback to execute when completed. callback(err: {Object}, groups: {Array[Group]})"," */","function getGroupMembershipForDN(opts, dn, stack, callback) {","  var self = this;","   ","  if (typeof(stack) === 'function') {","    callback = stack;","    stack = undefined;","  }","  if (typeof(dn) === 'function') {","    callback = dn;","    dn = opts;","    opts = undefined;","  }","  if (typeof(opts) === 'string') {","    stack = dn;","    dn = opts;","    opts = undefined;","  }","  log.trace('getGroupMembershipForDN(%j,%s,stack:%j)', opts, dn, (stack || []).length);","","  // Ensure that a valid DN was provided. Otherwise abort the search.","  if (! dn) {","    var error = new Error('No distinguishedName (dn) specified for group membership retrieval.');","    log.error(error);","    if (hasEvents('error')) self.emit('error', error);","    return(callback(error));","  }","","  //  Note: Microsoft provides a 'Transitive Filter' for querying nested groups.","  //        i.e. (member:1.2.840.113556.1.4.1941:=<userDistinguishedName>)","  //        However this filter is EXTREMELY slow. Recursively querying ActiveDirectory","  //        is typically 10x faster.","  opts = _.defaults(_.omit(opts || {}, 'filter', 'scope', 'attributes'), {","    filter: '(member='+parseDistinguishedName(dn)+')',","    scope: 'sub',","    attributes: joinAttributes((opts || {}).attributes || defaultAttributes.group, [ 'groupType' ])","  });","  search.call(self, opts, function(err, results) {","    if (err) {","      callback(err);","      return;","    }","","    var groups = [];","    async.forEach(results, function(group, asyncCallback) {","      // accumulates discovered groups","      if (typeof(stack) !== 'undefined') {","        if (!_.findWhere(stack, { cn: group.cn })) {","          stack.push(new Group(group));","        } else {","          // ignore groups already found","          return(asyncCallback());","        }","","        _.each(stack,function(s) {","          if (!_.findWhere(groups, { cn: s.cn })) {","            groups.push(s);","          }","        });","      }","","      if (isGroupResult(group)) {","        log.debug('Adding group \"%s\" to %s\"', group.dn, dn);","        groups.push(new Group(group));","","        // Get the groups that this group may be a member of.","        log.debug('Retrieving nested group membership for group \"%s\"', group.dn);","        getGroupMembershipForDN.call(self, opts, group.dn, groups, function(err, nestedGroups) {","          if (err) {","            asyncCallback(err);","            return;","          }","","          nestedGroups = _.map(nestedGroups, function(nestedGroup) {","            if (isGroupResult(nestedGroup)) {","              return(new Group(nestedGroup));","            }","          });","          log.debug('Group \"%s\" which is a member of group \"%s\" has %d nested group(s). Nested: %j',","                    group.dn, dn, nestedGroups.length, _.map(nestedGroups, function(group) {","                     return(group.dn);","                   }));","          Array.prototype.push.apply(groups, nestedGroups);","          asyncCallback();","        });","      }","      else asyncCallback();","    }, function(err) {","       if (err) {","        callback(err);","        return;","      }","","      // Remove the duplicates from the list.","      groups =  _.uniq(_.sortBy(groups, function(group) { return(group.cn || group.dn); }), false, function(group) {","        return(group.dn);","      });","","      log.info('Group \"%s\" has %d group(s). Groups: %j', dn, groups.length, _.map(groups, function(group) {","         return(group.dn);","      }));","      callback(err, groups);","    });","  });","}","","/**"," * For the specified filter, return the distinguishedName (dn) of all the matched entries."," *"," * @private"," * @param {Object} [opts] Optional LDAP query string parameters to execute. { scope: '', filter: '', attributes: [ '', '', ... ], sizeLimit: 0, timelimit: 0 }"," * @params {Object|String} filter The LDAP filter to execute. Optionally a custom LDAP query object can be specified. { scope: '', filter: '', attributes: [ '', '', ... ], sizeLimit: 0, timelimit: 0 }"," * @param {Function} callback The callback to execute when completed. callback(err: {Object}, dns: {Array[String]})"," */","function getDistinguishedNames(opts, filter, callback) {","  var self = this;","","  if (typeof(filter) === 'function') {","    callback = filter;","    filter = opts;","    opts = undefined;","  }","  if (typeof(opts) === 'string') {","    filter = opts;","    opts = undefined;","  }","  log.trace('getDistinguishedNames(%j,%j)', opts, filter);","","  opts = _.defaults(_.omit(opts || {}, 'attributes'), {","    filter: filter,","    scope: 'sub',","    attributes: joinAttributes((opts || {}).attributes || [], [ 'dn' ])","  });","  search.call(self, opts, function(err, results) {","    if (err) {","      if (callback) callback(err);","      return;","    }","","    // Extract just the DN from the results","    var dns =  _.map(results, function(result) {","      return(result.dn);","    });","    log.info('%d distinguishedName(s) found for LDAP query: \"%s\". Results: %j',","             results.length, truncateLogOutput(opts.filter), results);","    callback(null, dns);","  });","}","","/**"," * Gets the distinguished name for the specified user (userPrincipalName/email or sAMAccountName)."," *"," * @private"," * @param {Object} [opts] Optional LDAP query string parameters to execute. { scope: '', filter: '', attributes: [ '', '', ... ], sizeLimit: 0, timelimit: 0 }"," * @param {String} username The name of the username to retrieve the distinguishedName (dn)."," * @param {Function} callback The callback to execute when completed. callback(err: {Object}, dn: {String})"," */","function getUserDistinguishedName(opts, username, callback) {","  var self = this;","","  if (typeof(username) === 'function') {","    callback = username;","    username = opts;","    opts = undefined;","  }","  log.trace('getDistinguishedName(%j,%s)', opts, username);","","  // Already a dn?","  if (isDistinguishedName.call(self, username)) {","    log.debug('\"%s\" is already a distinguishedName. NOT performing query.', username);","    callback(null, username);","    return;","  }","","  getDistinguishedNames.call(self, opts, getUserQueryFilter(username), function(err, dns) {","    if (err) {","      callback(err);","      return;","    }","","    log.info('%d distinguishedName(s) found for user: \"%s\". Returning first dn: \"%s\"',","             (dns || []).length, username, (dns || [])[0]);","    callback(null, (dns || [])[0]);","  });","}","","/**"," * Gets the distinguished name for the specified group (cn)."," *"," * @private"," * @param {Object} [opts] Optional LDAP query string parameters to execute. { scope: '', filter: '', attributes: [ '', '', ... ], sizeLimit: 0, timelimit: 0 }"," * @param {String} groupName The name of the group to retrieve the distinguishedName (dn)."," * @param {Function} callback The callback to execute when completed. callback(err: {Object}, dn: {String})"," */","function getGroupDistinguishedName(opts, groupName, callback) {","  var self = this;","","  if (typeof(groupName) === 'function') {","    callback = groupName;","    groupName = opts;","    opts = undefined;","  }","  log.trace('getGroupDistinguishedName(%j,%s)', opts, groupName);","","  // Already a dn?","  if (isDistinguishedName.call(self, groupName)) {","    log.debug('\"%s\" is already a distinguishedName. NOT performing query.', groupName);","    callback(null, groupName);","    return;","  }","","  getDistinguishedNames.call(self, opts, getGroupQueryFilter(groupName), function(err, dns) {","    if (err) {","      callback(err);","      return;","    }","","    log.info('%d distinguishedName(s) found for group \"%s\". Returning first dn: \"%s\"',","             (dns || []).length, groupName, (dns || [])[0]);","    callback(null, (dns || [])[0]);","  });  ","}","","/**"," * Gets the currently configured default attributes"," *"," * @private"," */","ActiveDirectory.prototype._getDefaultAttributes = function _getDefaultAttributes() {","  return(_.defaults({}, defaultAttributes));","};","","/**"," * Gets the currently configured default user attributes"," *"," * @private"," */","ActiveDirectory.prototype._getDefaultUserAttributes = function _getDefaultUserAttributes() {","  return(_.defaults({}, (defaultAttributes || {}).user));","};","","/**"," * Gets the currently configured default group attributes"," *"," * @private"," */","ActiveDirectory.prototype._getDefaultGroupAttributes = function _getDefaultGroupAttributes() {","  return(_.defaults({}, (defaultAttributes || {}).group));","};"," ","/**"," * For the specified group, retrieve all of the users that belong to the group."," *"," * @public"," * @param {Object} [opts] Optional LDAP query string parameters to execute. { scope: '', filter: '', attributes: [ '', '', ... ], sizeLimit: 0, timelimit: 0 }"," * @param {String} groupName The name of the group to retrieve membership from."," * @param {Function} callback The callback to execute when completed. callback(err: {Object}, users: {Array[User]})"," */","ActiveDirectory.prototype.getUsersForGroup = function getUsersForGroup(opts, groupName, callback) {","  var self = this;","","  if (typeof(groupName) === 'function') {","    callback = groupName;","    groupName = opts;","    opts = undefined;","  }","  log.trace('getUsersForGroup(%j,%s)', opts, groupName);","","  var users = [];","  var groups = [];","","  self.findGroup(_.defaults({}, _.omit(opts || {}, 'attributes'), {","                   attributes: joinAttributes((opts || {}).attributes || defaultAttributes.group, [ 'member' ])","                 }), ","                 groupName, function(err, group) {","    if (err) {","      if (callback) callback(err);","      return;","    }","","    // Group not found","    if (! group) {","      if (callback) callback(null, group);","      return;","    }","    // If only one result found, encapsulate result into array.","    if (typeof(group.member) === 'string') {","      group.member = [ group.member ];","    }","","    /**","     * Breaks the large array into chucks of the specified size.","     * @param {Array} arr The array to break into chunks","     * @param {Number} chunkSize The size of each chunk.","     * @returns {Array} The resulting array containing each chunk","     */","    function chunk(arr, chunkSize) {","      var result = [];","      for (var index = 0, length = arr.length; index < length; index += chunkSize) {","        result.push(arr.slice(index,index + chunkSize));","      }","      return(result);","    }","","    // We need to break this into the default size queries so","    // we can have them running concurrently.","    var chunks = chunk(group.member || [], defaultPageSize);","    if (chunks.length > 1) {","      log.debug('Splitting %d member(s) of \"%s\" into %d parallel chunks',","                (group.member || []).length, groupName, chunks.length);","    }","    var chunksProcessed = 0;","    async.each(chunks, function getUsersForGroup_ChunkItem(members, asyncChunkCallback) {","      // We're going to build up a bulk LDAP query so we can reduce","      // the number of round trips to the server. We need to get","      // additional details about each 'member' to determine if","      // it is a group or another user. If it's a group, we need","      // to recursively retrieve the members of that group.","      var filter = _.reduce(members || [], function(memo, member, index) {","        return(memo+'(distinguishedName='+parseDistinguishedName(member)+')');","      }, '');","      filter = '(&(|(objectCategory=User)(objectCategory=Group))(|'+filter+'))';","","      var localOpts = {","        filter: filter,","        scope: 'sub',","        attributes: joinAttributes((opts || {}).attributes || defaultAttributes.user || [], ","                            getRequiredLdapAttributesForUser(opts), [ 'groupType' ])","      };","      search.call(self, localOpts, function onSearch(err, members) {","        if (err) {","          asyncChunkCallback(err);","          return;","        }","","        // Parse the results in parallel.","        async.forEach(members, function(member, asyncCallback) {","          // If a user, no groupType will be specified.","          if (! member.groupType) {","            var user = new User(pickAttributes(member, (opts || {}).attributes || defaultAttributes.user));","            self.emit(user);","            users.push(user);","            asyncCallback();","          }","          else {","            // We have a group, recursively get the users belonging to this group.","            self.getUsersForGroup(opts, member.cn, function(err, nestedUsers) {","              users.push.apply(users, nestedUsers);","              asyncCallback();","            });","          }","        }, function(err) {","          if (chunks.length > 1) {","            log.debug('Finished processing chunk %d/%d', ++chunksProcessed, chunks.length);","          }","          asyncChunkCallback(err);","        });","      });","    }, function getUsersForGroup_ChunkComplete(err) {","      // Remove duplicates","      users = _.uniq(users, function(user) {","        return(user.dn || user);","      });","      ","","/*","      // Remove the dn that was added for duplicate detection if not requested.","      if (! _.any((opts || {}).attributes || defaultAttributes.user, function(attribute) {","        return(attribute === 'dn');","      })) {","        users = _.each(users, function(user) {","          delete(users.dn);","        });","      }","*/","      log.info('%d user(s) belong in the group \"%s\"', users.length, groupName);","      if (callback) callback(null, users);","    });","  });","};","","/**"," * For the specified username, get all of the groups that the user is a member of."," *"," * @public"," * @param {Object} [opts] Optional LDAP query string parameters to execute. { scope: '', filter: '', attributes: [ '', '', ... ], sizeLimit: 0, timelimit: 0 }"," * @param {String} username The username to retrieve membership information about."," * @param {Function} [callback] The callback to execute when completed. callback(err: {Object}, groups: {Array[Group]})"," */","ActiveDirectory.prototype.getGroupMembershipForUser = function getGroupMembershipForUser(opts, username, callback) {","  var self = this;","","  if (typeof(username) === 'function') {","    callback = username;","    username = opts;","    opts = undefined;","  }","  log.trace('getGroupMembershipForUser(%j,%s)', opts, username);","","  getUserDistinguishedName.call(self, opts, username, function(err, dn) {","    if (err) {","      if (callback) callback(err);","      return;","    }  ","","    if (! dn) {","      log.warn('Could not find a distinguishedName for the specified username: \"%s\"', username);","      if (callback) callback();","      return;","    }","    getGroupMembershipForDN.call(self, opts, dn, function(err, groups) {","      if (err) {","        if (callback) callback(err);","        return;","      }","      ","      var results = [];","      _.each(groups, function(group) {","        var result = new Group(pickAttributes(group, (opts || {}).attributes || defaultAttributes.group));","        self.emit(result);","        results.push(result);","      });","      if (callback) callback(err, results);","    });","  });","};","","/**"," * For the specified group, get all of the groups that the group is a member of."," *"," * @public"," * @param {Object} [opts] Optional LDAP query string parameters to execute. { scope: '', filter: '', attributes: [ '', '', ... ], sizeLimit: 0, timelimit: 0 }"," * @param {String} groupName The group to retrieve membership information about."," * @param {Function} [callback] The callback to execute when completed. callback(err: {Object}, groups: {Array[Group]})"," */","ActiveDirectory.prototype.getGroupMembershipForGroup = function getGroupMembershipForGroup(opts, groupName, callback) {","  var self = this;","  ","  if (typeof(groupName) === 'function') {","    callback = groupName;","    groupName = opts;","    opts = undefined;","  }","  log.trace('getGroupMembershipForGroup(%j,%s)', opts, groupName);","","  getGroupDistinguishedName.call(self, opts, groupName, function(err, dn) {","    if (err) {","      if (callback) callback(err);","      return;","    }  ","","    if (! dn) {","      log.warn('Could not find a distinguishedName for the specified group name: \"%s\"', groupName);","      if (callback) callback();","      return;","    }","    getGroupMembershipForDN.call(self, opts, dn, function(err, groups) {","      if (err) {","        if (callback) callback(err);","        return;","      }","","      var results = [];","      _.each(groups, function(group) {","        var result = new Group(pickAttributes(group, (opts || {}).attributes || defaultAttributes.group));","        self.emit(result);","        results.push(result);","      });","      if (callback) callback(err, results);","    });","  });","};","","/**"," * Checks to see if the specified username exists."," *"," * @param {Object} [opts] Optional LDAP query string parameters to execute. { scope: '', filter: '', attributes: [ '', '', ... ], sizeLimit: 0, timelimit: 0 }"," * @param {String} username The username to check to see if it exits."," * @param {Function} callback The callback to execute when completed. callback(err: {Object}, result: {Boolean})"," */ ","ActiveDirectory.prototype.userExists = function userExists(opts, username, callback) {","  var self = this;","","  if (typeof(username) === 'function') {","    callback = username;","    username = opts;","    opts = undefined;","  }","  log.trace('userExists(%j,%s)', opts, username);","","  self.findUser(opts, username, function(err, user) {","    if (err) {","      callback(err);","      return;","    }","","    log.info('\"%s\" %s exist.', username, (user != null) ? 'DOES' : 'DOES NOT');","    callback(null, user != null);","  });","};","","/**"," * Checks to see if the specified group exists."," *"," * @param {Object} [opts] Optional LDAP query string parameters to execute. { scope: '', filter: '', attributes: [ '', '', ... ], sizeLimit: 0, timelimit: 0 }"," * @param {String} groupName The group to check to see if it exists."," * @param {Function} callback The callback to execute when completed. callback(err: {Object}, result: {Boolean})"," */ ","ActiveDirectory.prototype.groupExists = function groupExists(opts, groupName, callback) {","  var self = this;","","  if (typeof(groupName) === 'function') {","    callback = groupName;","    groupName = opts;","    opts = undefined;","  }","  log.trace('groupExists(%j,%s)', opts, groupName);","","  self.findGroup(opts, groupName, function(err, result) {","    if (err) {","      callback(err);","      return;","    }","","    log.info('\"%s\" %s exist.', groupName, (result != null) ? 'DOES' : 'DOES NOT');","    callback(null, result != null);","  });","};","","/**"," * Checks to see if the specified user is a member of the specified group."," *"," * @param {Object} [opts] Optional LDAP query string parameters to execute. { scope: '', filter: '', attributes: [ '', '', ... ], sizeLimit: 0, timelimit: 0 }"," * @param {String} username The username to check for membership."," * @param {String} groupName The group to check for membership."," * @param {Function} callback The callback to execute when completed. callback(err: {Object}, result: {Boolean})"," */","ActiveDirectory.prototype.isUserMemberOf = function isUserMemberOf(opts, username, groupName, callback) {","  var self = this;","","  if (typeof(groupName) === 'function') {","    callback = groupName;","    groupName = username;","    username = opts;","    opts = undefined;","  }","  log.trace('isUserMemberOf(%j,%s,%s)', opts, username, groupName);","","  opts = _.defaults(_.omit(opts || {}, 'attributes'), {","    attributes: [ 'cn', 'dn' ] ","  });","  self.getGroupMembershipForUser(opts, username, function(err, groups) {","    if (err) {","      callback(err);","      return;","    }","    if ((! groups) || (groups.length === 0)) {","      log.info('\"%s\" IS NOT a member of \"%s\". No groups found for user.', username, groupName);","      callback(null, false);","      return;","    }","","    // Check to see if the group.distinguishedName or group.cn matches the list of","    // retrieved groups.","    var lowerCaseGroupName = (groupName || '').toLowerCase();","    var result = _.any(groups, function(item) {","      return(((item.dn || '').toLowerCase() === lowerCaseGroupName) ||","             ((item.cn || '').toLowerCase() === lowerCaseGroupName));","     });","    log.info('\"%s\" %s a member of \"%s\"', username, result ? 'IS' : 'IS NOT', groupName);","    callback(null, result);","  });","};","","/**"," * Checks to see if group membership for the specified type is enabled."," *"," * @param {Object} [opts] The options to inspect. If not specified, uses this.opts."," * @param {String} name The name of the membership value to inspect. Values: (all|user|group)"," * @returns {Boolean} True if the specified membership is enabled."," */","function includeGroupMembershipFor(opts, name) {","  if (typeof(opts) === 'string') {","    name = opts;","    opts = this.opts;","  }","","  var lowerCaseName = (name || '').toLowerCase();","  return(_.any(((opts || this.opts || {}).includeMembership || []), function(i) {","    i = i.toLowerCase();","    return((i === 'all') || (i === lowerCaseName));","  }));","}","","/**"," * Perform a generic search for the specified LDAP query filter. This function will return both"," * groups and users that match the specified filter. Any results not recognized as a user or group"," * (i.e. computer accounts, etc.) can be found in the 'other' attribute / array of the result."," *"," * @public"," * @param {Object} [opts] Optional LDAP query string parameters to execute. { scope: '', filter: '', attributes: [ '', '', ... ], sizeLimit: 0, timelimit: 0 }. Optionally, if only a string is provided, then the string is assumed to be an LDAP filter."," * @param {Function} callback The callback to execute when completed. callback(err: {Object}, { users: [ User ], groups: [ Group ], other: [ ] )"," */","ActiveDirectory.prototype.find = function find(opts, callback) {","  var self = this;","","  if (typeof(opts) === 'function') {","    callback = opts;","    opts = undefined;","  }","  if (typeof(opts) === 'string') {","    opts = {","      filter: opts","    };","  }","  log.trace('find(%j)', opts);","","  var localOpts = _.defaults(_.omit(opts || {}, 'attributes'), {","    scope: 'sub',","    attributes: joinAttributes((opts || {}).attributes || [], defaultAttributes.group || [], defaultAttributes.user || [], ","                        getRequiredLdapAttributesForGroup(opts), getRequiredLdapAttributesForUser(opts), ","                        [ 'objectCategory' ])","  });","  search.call(self, localOpts, function onFind(err, results) {","    if (err) {","      if (callback) callback(err);","      return;","    }","","    if ((! results) || (results.length === 0)) {","      log.warn('No results found for query \"%s\"', truncateLogOutput(localOpts.filter));","      if (callback) callback();","      self.emit('done');","      return;","    }","","    var result = {","      users: [],","      groups: [],","      other: []","    };","","    // Parse the results in parallel.","    async.forEach(results, function(item, asyncCallback) {","      if (isGroupResult(item)) {","        var group = new Group(pickAttributes(item, (opts || {}).attributes || defaultAttributes.group));","        result.groups.push(group);","        // Also retrieving user group memberships?","        if (includeGroupMembershipFor(opts, 'group')) {","          getGroupMembershipForDN.call(self, opts, group.dn, function(err, groups) {","            if (err) return(asyncCallback(err));","","            group.groups = groups;","            self.emit('group', group);","            asyncCallback();","          });","        } else {","          self.emit('group', group);","          asyncCallback();","        }","      }","      else if (isUserResult(item)) {","        var user = new User(pickAttributes(item, (opts || {}).attributes || defaultAttributes.user));","        result.users.push(user);","        // Also retrieving user group memberships?","        if (includeGroupMembershipFor(opts, 'user')) {","          getGroupMembershipForDN.call(self, opts, user.dn, function(err, groups) {","            if (err) return(asyncCallback(err));","","            user.groups = groups;","            self.emit('user', user);","            asyncCallback();","          });","        } else {","          self.emit('user', user);","          asyncCallback();","        }","      }","      else {","        var other = pickAttributes(item, (opts || {}).attributes || _.union(defaultAttributes.user, defaultAttributes.group));","        result.other.push(other);","        self.emit('other', other);","        asyncCallback();","      }","","    }, function(err) {","      if (err) {","        if (callback) callback(err);","        return;","      }","","      log.info('%d group(s), %d user(s), %d other found for query \"%s\". Results: %j',","               result.groups.length, result.users.length, result.other.length,","               truncateLogOutput(opts.filter), result);","      self.emit('groups', result.groups);","      self.emit('users', result.users);","","      if (callback) callback(null, result);","    });","  });","};","","/**"," * Perform a generic search on the Deleted Objects container for active directory. For this function"," * to work correctly, the tombstone feature for active directory must be enabled. A tombstoned object"," * has most of the attributes stripped from the object."," *"," * @public"," * @param {Object} [opts] Optional LDAP query string parameters to execute. { scope: '', filter: '', attributes: [ '', '', ... ], sizeLimit: 0, timelimit: 0 }. Optionally, if only a string is provided, then the string is assumed to be an LDAP filter."," * @param {Function} callback The callback to execute when completed. callback(err: {Object}, result: [ ])"," */","ActiveDirectory.prototype.findDeletedObjects = function find(opts, callback) {","  var self = this;","","  if (typeof(opts) === 'function') {","    callback = opts;","    opts = undefined;","  }","  if (typeof(opts) === 'string') {","    opts = {","      filter: opts","    };","  }","  log.trace('findDeletedObjects(%j)', opts);","","  var defaultDeletedAttributes = [","    'attributeID', 'attributeSyntax', 'dnReferenceUpdate' , 'dNSHostName' , 'flatName',","    'governsID', 'groupType', 'instanceType', 'lDAPDisplayName', 'legacyExchangeDN',","    'mS-DS-CreatorSID', 'mSMQOwnerID', 'nCName', 'objectClass', 'objectGUID', 'objectSid',","    'oMSyntax', 'proxiedObjectName', 'replPropertyMetaData', 'sAMAccountName', 'securityIdentifier',","    'sIDHistory', 'subClassOf', 'systemFlags', 'trustPartner', 'trustDirection', 'trustType',","    'trustAttributes', 'userAccountControl', 'uSNChanged', 'uSNCreated', 'whenCreated',","    'msDS-AdditionalSam­AccountName', 'msDS-Auxiliary-Classes', 'msDS-Entry-Time-To-Die',","    'msDS-IntId', 'msSFU30NisDomain', 'nTSecurityDescriptor', 'uid' ","  ];","","  /**","   * Performs the actul search of the specified baseDN for any deleted (tombstoned) objects.","   * @param {String} baseDN The baseDN to search on.","   * @param {Object} opts The ldapjs query options.","   */","  function searchDeletedObjects(baseDN, opts) {","    search.call(self, baseDN, _.defaults({}, opts, { includeDeleted: true }), function onFind(err, results) {","      if (err) {","        if (callback) callback(err);","        return;","      }","","      if ((! results) || (results.length === 0)) {","        log.warn('No deleted objects found for query \"%s\"', truncateLogOutput(opts.filter));","        if (callback) callback();","        self.emit('done');","        return;","      }","","      var deletedItems = [];","","      // Parse the results in parallel.","      _.forEach(deletedItemss, function(item) {","        var deletedItem = pickAttributes(item, (opts | {}).attributes || []);","        self.emit('entry:deleted', deletedItem);","        deletedItems.push(deletedItem);","      });","","      log.info('%d deleted objects found for query \"%s\". Results: %j',","               deletedItems.length, truncateLogOutput(localOpts.filter), deletedItems);","      self.emit('deleted', deletedItems);","      if (callback) callback(null, deletedItems);","    });","  }","","  var localOpts = _.defaults(opts || {}, {","    scope: 'one',","    attributes: joinAttributes((opts || {}).attributes || [], defaultDeletedAttributes),","    controls: [ ]","  });","  // Get the BaseDN for the tree","  if (! localOpts.baseDN) {","    log.debug('No baseDN specified for Deleted Object. Querying RootDSE at %s.', self.opts.url);","    ActiveDirectory.prototype.getRootDSE(self.opts.url, [ 'defaultNamingContext' ], function(err, result) {","      if (err) {","        if (callback) callback(err);","        return;","      }","","      log.info('Retrieved defaultNamingContext (%s) from RootDSE at %s.', result.defaultNamingContext, self.opts.url);","      searchDeletedObjects('CN=Deleted Objects,' + result.defaultNamingContext, localOpts);","    });","  }","  else searchDeletedObjects(localOpts.baseDN, localOpts);","};","","/**"," * Retrieves the specified group."," *"," * @public"," * @param {Object} [opts] Optional LDAP query string parameters to execute. { scope: '', filter: '', attributes: [ '', '', ... ], sizeLimit: 0, timelimit: 0 }"," * @param {String} groupName The group (cn) to retrieve information about. Optionally can pass in the distinguishedName (dn) of the group to retrieve."," * @param {Function} callback The callback to execute when completed. callback(err: {Object}, group: {Group})"," */","ActiveDirectory.prototype.findGroup = function findGroup(opts, groupName, callback) {","  var self = this;","","  if (typeof(groupName) === 'function') {","    callback = groupName;","    groupName = opts;","    opts = undefined;","  }","  if (typeof(opts) === 'string') {","    groupName = opts;","    opts = undefined;","  }","  log.trace('findGroup(%j,%s)', opts, groupName);","","  var localOpts = _.defaults(_.omit(opts || {}, 'attributes'), {","    filter: getGroupQueryFilter.call(self, groupName),","    scope: 'sub',","    attributes: joinAttributes((opts || {}).attributes || defaultAttributes.group, getRequiredLdapAttributesForGroup(opts))","  });","  search.call(self, localOpts, function onSearch(err, results) {","    if (err) {","      if (callback) callback(err);","      return;","    }","","    if ((! results) || (results.length === 0)) {","      log.warn('Group \"%s\" not found for query \"%s\"', groupName, truncateLogOutput(localOpts.filter));","      if (callback) callback();","      return;","    }","","    var group = new Group(pickAttributes(results[0], (opts || {}).attributes || defaultAttributes.group));","    log.info('%d group(s) found for query \"%s\". Returning first group: %j',","             results.length, truncateLogOutput(localOpts.filter), group);","    // Also retrieving user group memberships?","    if (includeGroupMembershipFor(opts, 'group')) {","      getGroupMembershipForDN.call(self, opts, group.dn, function(err, groups) {","        if (err) {","          if (callback) callback(err);","          return;","        }","","        group.groups = groups;","        self.emit('group', group);","        if (callback) callback(err, group);","      });","    }","    else {","      self.emit('group', group);","      if (callback) callback(err, group);","    }","  });","};","","/**"," * Perform a generic search for groups that match the specified filter. The default LDAP filter for groups is"," * specified as (&(objectClass=group)(!(objectClass=computer))(!(objectClass=user))(!(objectClass=person)))"," *"," * @public"," * @param {Object} [opts] Optional LDAP query string parameters to execute. { scope: '', filter: '', attributes: [ '', '', ... ], sizeLimit: 0, timelimit: 0 }. Optionally, if only a string is provided, then the string is assumed to be an LDAP filter that will be appended as the last parameter in the default LDAP filter."," * @param {Function} callback The callback to execute when completed. callback(err: {Object}, groups: [ Group ])"," */","ActiveDirectory.prototype.findGroups = function findGroup(opts, callback) {","  var self = this;","  var defaultGroupFilter = '(objectClass=group)(!(objectClass=computer))(!(objectClass=user))(!(objectClass=person))';","","  if (typeof(opts) === 'function') {","    callback = opts;","    opts = '';","  }","  if ((typeof(opts) === 'string') && (opts)) {","    opts = {","      filter: '(&'+defaultGroupFilter+getCompoundFilter(opts)+')'","    };","  }","","  log.trace('findGroups(%j)', opts);","","  var localOpts = _.defaults(_.omit(opts || {}, 'attributes'), {","    filter: '(&'+defaultGroupFilter+')',","    scope: 'sub',","    attributes: joinAttributes((opts || {}).attributes || defaultAttributes.group || [], getRequiredLdapAttributesForGroup(opts), ","                        [ 'groupType' ])","  });","  search.call(self, localOpts, function onSearch(err, results) {","    if (err) {","      if (callback) callback(err);","      return;","    }","","    if ((! results) || (results.length === 0)) {","      log.warn('No groups found matching query \"%s\"', truncateLogOutput(localOpts.filter));","      if (callback) callback();","      return;","    }","","    var groups = [];","","    // Parse the results in parallel.","    async.forEach(results, function(result, asyncCallback) {","      if (isGroupResult(result)) {","        var group = new Group(pickAttributes(result, (opts || {}).attributes || defaultAttributes.user));","        groups.push(group);","","        // Also retrieving user group memberships?","        if (includeGroupMembershipFor(opts, 'group')) {","          getGroupMembershipForDN.call(self, opts, group.dn, function(err, groups) {","            if (err) return(asyncCallback(err));","  ","            group.groups = groups;","            self.emit('group', group);","            asyncCallback();","          });","        }","        else {","          self.emit('group', group);","          asyncCallback();","        }","      }","      else asyncCallback();","    }, function(err) {","      if (err) {","        if (callback) callback(err);","        return;","      }","","      log.info('%d group(s) found for query \"%s\". Groups: %j', groups.length, truncateLogOutput(localOpts.filter), groups);","      self.emit('groups', groups);","      if (callback) callback(null, groups);","    });","  });","};","","/**"," * Retrieves the specified user."," *"," * @public"," * @param {Object} [opts] Optional LDAP query string parameters to execute. { scope: '', filter: '', attributes: [ '', '', ... ], sizeLimit: 0, timelimit: 0 }"," * @param {String} username The username to retrieve information about. Optionally can pass in the distinguishedName (dn) of the user to retrieve."," * @param {Boolean} [includeMembership] OBSOLETE; NOT NOT USE. Indicates if the results should include group memberships for the user. Defaults to false."," * @param {Function} callback The callback to execute when completed. callback(err: {Object}, user: {User})"," */","ActiveDirectory.prototype.findUser = function findUser(opts, username, includeMembership, callback) {","  var self = this;","","  if (typeof(includeMembership) === 'function') {","    callback = includeMembership;","    includeMembership = undefined;","  }","  if (typeof(username) === 'function') {","    callback = username;","    username = opts;","    opts = undefined;","  }","  if (typeof(username) === 'boolean') {","    includeMembership = username;","    username = opts;","  }","  if (typeof(opts) === 'string') {","    username = opts;","    opts = undefined;","  }","  log.trace('findUser(%j,%s,%s)', opts, username, includeMembership);","","  var localOpts = _.defaults(_.omit(opts || {}, 'attributes'), {","    filter: getUserQueryFilter.call(self, username),","    scope: 'sub',","    attributes: joinAttributes((opts || {}).attributes || defaultAttributes.user || [], getRequiredLdapAttributesForUser(opts))","  });","  search.call(self, localOpts, function onSearch(err, results) {","    if (err) {","      if (callback) callback(err);","      return;","    }","","    if ((! results) || (results.length === 0)) {","      log.warn('User \"%s\" not found for query \"%s\"', username, truncateLogOutput(localOpts.filter));","      if (callback) callback();","      return;","    }","","    var user = new User(pickAttributes(results[0], (opts || {}).attributes || defaultAttributes.user));","    log.info('%d user(s) found for query \"%s\". Returning first user: %j', results.length, truncateLogOutput(localOpts.filter), user);","","    // Also retrieving user group memberships?","    if (includeGroupMembershipFor(opts, 'user') || includeMembership) {","      getGroupMembershipForDN.call(self, opts, user.dn, function(err, groups) {","        if (err) {","          if (callback) callback(err);","          return;","        }","","        user.groups = groups;","        self.emit('user', user);","        if (callback) callback(err, user);","      });","    }","    else {","      self.emit('user', user);","      if (callback) callback(err, user);","    }","  });","};","","/**"," * Perform a generic search for users that match the specified filter. The default LDAP filter for users is"," * specified as (&(|(objectClass=user)(objectClass=person))(!(objectClass=computer))(!(objectClass=group)))"," *"," * @public"," * @param {Object} [opts] Optional LDAP query string parameters to execute. { scope: '', filter: '', attributes: [ '', '', ... ], sizeLimit: 0, timelimit: 0 }. Optionally, if only a string is provided, then the string is assumed to be an LDAP filter that will be appended as the last parameter in the default LDAP filter."," * @param {Boolean} [includeMembership] OBSOLETE; NOT NOT USE. Indicates if the results should include group memberships for the user. Defaults to false."," * @param {Function} callback The callback to execute when completed. callback(err: {Object}, users: [ User ])"," */","ActiveDirectory.prototype.findUsers = function findUsers(opts, includeMembership, callback) {","  var self = this;","  var defaultUserFilter = '(|(objectClass=user)(objectClass=person))(!(objectClass=computer))(!(objectClass=group))';","","  if (typeof(includeMembership) === 'function') {","    callback = includeMembership;","    includeMembership = false;","  }","  if (typeof(opts) === 'function') {","    callback = opts;","    opts = '';","  }","  if ((typeof(opts) === 'string') && (opts)) {","    opts = {","      filter: '(&'+defaultUserFilter+getCompoundFilter(opts)+')'","    };","  }","  log.trace('findUsers(%j,%s)', opts, includeMembership);","","  var localOpts = _.defaults(_.omit(opts || {}, 'attributes'), {","    filter: '(&'+defaultUserFilter+')',","    scope: 'sub',","    attributes: joinAttributes((opts || {}).attributes || defaultAttributes.user || [], ","                               getRequiredLdapAttributesForUser(opts), [ 'objectCategory' ])","  });","  search.call(self, localOpts, function onSearch(err, results) {","    if (err) {","      if (callback) callback(err);","      return;","    }","","    if ((! results) || (results.length === 0)) {","      log.warn('No users found matching query \"%s\"', truncateLogOutput(localOpts.filter));","      if (callback) callback();","      return;","    }","","    var users = [];","","    // Parse the results in parallel.","    async.forEach(results, function(result, asyncCallback) {","      if (isUserResult(result)) {","        var user = new User(pickAttributes(result, (opts || {}).attributes || defaultAttributes.user));","        users.push(user);","","        // Also retrieving user group memberships?","        if (includeGroupMembershipFor(opts, 'user') || includeMembership) {","          getGroupMembershipForDN.call(self, opts, user.dn, function(err, groups) {","            if (err) return(asyncCallback(err));","  ","            user.groups = groups;","            self.emit('user', user);","            asyncCallback();","          });","        }","        else {","          self.emit('user', user);","          asyncCallback();","        }","      }","      else asyncCallback();","    }, function(err) {","      if (err) {","        if (callback) callback(err);","        return;","      }","","      log.info('%d user(s) found for query \"%s\". Users: %j', users.length, truncateLogOutput(opts.filter), users);","      self.emit('users', users);","      if (callback) callback(null, users);","    });","  });","};","","/**"," * Attempts to authenticate the specified username / password combination."," *"," * @public"," * @param {String} username The username to authenticate."," * @param {String} password The password to use for authentication.\t"," * @param {Function} callback The callback to execute when the authenication is completed. callback(err: {Object}, authenticated: {Boolean})"," */","ActiveDirectory.prototype.authenticate = function authenticate(username, password, callback) {","  var self = this;","  log.trace('authenticate(%j,%s)', username, isPasswordLoggingEnabled ? password : '********');","","  // Skip authentication if an empty username or password is provided.","  if ((! username) || (! password)) {","    var err = {","      'code': 0x31,","      'errno': 'LDAP_INVALID_CREDENTIALS',","      'description': 'The supplied credential is invalid'","    };","    return(callback(err, false));","  }","","  var errorHandled = false;","  function handleError(err) {","    if (! errorHandled) {","      errorHandled = true;","      if (hasEvents.call(self, 'error')) self.emit('error', err);","      return(callback(err, false));","    }","  }","","  var client = createClient.call(self);","  client.on('error', handleError);","  client.bind(username, password, function(err) {","    client.unbind();","    var message = util.format('Authentication %s for \"%s\" as \"%s\" (password: \"%s\")',","                              err ? 'failed' : 'succeeded',","                              self.opts.url, username, isPasswordLoggingEnabled ? password : '********');","    if (err) {","      log.warn('%s. Error: %s', message, err);","      return(handleError(err));","    }","","    log.info(message);","    return(callback(err, true));","  });","};","","/**"," * Retrieves the root DSE for the specified url"," *"," * @public"," * @param {String} url The url to retrieve the root DSE for."," * @param {Array} [attributes] The optional list of attributes to retrieve. Returns all if not specified."," * @param {Function} callback The callback to execute when the getRootDSE is completed. callback(err: {Object}, result: {Object})"," */","ActiveDirectory.prototype.getRootDSE = function getRootDSE(url, attributes, callback) {","  var self = this;","  if (typeof(attributes) === 'function') {","    callback = attributes;","    attributes = undefined;","  }","  if (typeof(url) === 'function') {","    callback = url;","    url = self.url || self.opts.url;","    attributes = undefined;","  }","  if (! url) throw new Error('No url specified for the root DSE. Please specify an ldap url in the following format: \"ldap://yourdomain.com:389\".');","  log.trace('getRootDSE(%s,%j)', url, attributes || [ '*' ]);","","  /**","   * Inline function handle connection and result errors.","   *","   * @private","   **/","  function onClientError(err) {","    // Ignore ECONNRESET errors","    if ((err || {}).errno !== 'ECONNRESET') {","      log.error('An unhandled error occured when searching for the root DSE at \"%s\". Error: %j', url, err);","      if (hasEvents.call(self, 'error')) self.emit('error', err)","    }","  }","","  var client = createClient.call(this, url);","  client.on('error', onClientError);","  // Anonymous bind","  client.bind('', '', function(err) {","    if (err) {","      log.error('Anonymous bind to \"%s\" failed. Error: %s', url, err);","      return(callback(err, false));","    }","","    client.search('', { scope: 'base', attributes: attributes || [ '*' ], filter: '(objectClass=*)' }, function(err, result) {","      if (err) {","        log.error('Root DSE search failed for \"%s\". Error: %s', url, err);","        return(callback(err));","      }","","      result.on('error', onClientError);","      result.on('end', function(result) {","        client.unbind();","      });","      result.on('searchEntry', function(entry) {","        callback(null, _.omit(entry.object, 'controls'));","      });","    });    ","  });","};","","module.exports = ActiveDirectory;",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"9":1,"10":1,"11":1,"13":1,"14":1,"16":1,"24":1,"25":1,"26":1,"39":1,"40":1,"51":1,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"78":0,"79":0,"83":0,"84":0,"86":0,"87":0,"89":0,"90":0,"91":0,"95":0,"96":0,"98":0,"100":0,"101":0,"102":0,"106":0,"107":0,"109":0,"112":0,"115":1,"121":1,"128":1,"129":0,"130":0,"132":0,"133":0,"134":0,"136":0,"137":0,"138":0,"148":1,"149":0,"159":1,"160":0,"161":0,"162":0,"163":0,"174":1,"175":0,"176":0,"178":0,"179":0,"189":1,"190":0,"191":0,"193":0,"194":0,"195":0,"198":0,"208":1,"209":0,"211":0,"212":0,"213":0,"215":0,"225":1,"226":0,"227":0,"229":0,"230":0,"231":0,"233":0,"241":1,"242":0,"244":0,"245":0,"246":0,"247":0,"248":0,"250":0,"251":0,"253":0,"261":1,"262":0,"264":0,"265":0,"266":0,"267":0,"268":0,"270":0,"271":0,"273":0,"283":1,"285":0,"286":0,"287":0,"289":0,"291":0,"292":0,"293":0,"294":0,"302":1,"303":0,"304":0,"305":0,"307":0,"308":0,"309":0,"319":1,"320":0,"329":1,"330":0,"347":1,"348":0,"364":1,"365":0,"367":0,"368":0,"369":0,"370":0,"372":0,"373":0,"374":0,"376":0,"377":0,"378":0,"380":0,"381":0,"382":0,"383":0,"384":0,"390":1,"391":0,"393":0,"394":0,"395":0,"396":0,"405":0,"406":0,"413":1,"414":0,"415":0,"416":0,"420":0,"421":0,"422":0,"424":0,"425":0,"426":0,"427":0,"428":0,"439":1,"440":0,"441":0,"443":0,"444":0,"445":0,"446":0,"447":0,"449":0,"450":0,"451":0,"456":1,"457":0,"459":0,"462":0,"463":0,"464":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"484":1,"485":0,"486":0,"487":0,"490":0,"491":0,"493":0,"500":1,"501":0,"502":0,"503":0,"506":0,"510":0,"512":0,"514":0,"515":0,"517":0,"519":0,"520":0,"521":0,"523":0,"527":0,"529":0,"530":0,"531":0,"532":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"553":1,"554":0,"555":0,"559":0,"560":0,"561":0,"566":0,"567":0,"568":0,"569":0,"574":0,"575":0,"577":0,"578":0,"579":0,"583":0,"584":0,"585":0,"590":0,"591":0,"592":0,"593":0,"596":0,"599":0,"601":0,"602":0,"603":0,"604":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"617":0,"628":1,"629":0,"632":0,"644":1,"645":0,"646":0,"648":0,"659":1,"660":0,"661":0,"663":0,"670":1,"671":0,"672":0,"673":0,"676":0,"687":1,"688":0,"689":0,"690":0,"693":0,"704":1,"705":0,"707":0,"708":0,"709":0,"711":0,"712":0,"713":0,"714":0,"716":0,"717":0,"718":0,"719":0,"721":0,"724":0,"725":0,"726":0,"727":0,"728":0,"735":0,"740":0,"741":0,"742":0,"743":0,"746":0,"747":0,"749":0,"750":0,"751":0,"754":0,"757":0,"758":0,"759":0,"764":0,"765":0,"766":0,"769":0,"770":0,"771":0,"772":0,"773":0,"776":0,"777":0,"778":0,"781":0,"783":0,"785":0,"786":0,"789":0,"791":0,"792":0,"793":0,"797":0,"798":0,"801":0,"802":0,"804":0,"817":1,"818":0,"820":0,"821":0,"822":0,"823":0,"825":0,"826":0,"827":0,"829":0,"831":0,"836":0,"837":0,"838":0,"839":0,"843":0,"844":0,"846":0,"848":0,"860":1,"861":0,"863":0,"864":0,"865":0,"866":0,"868":0,"871":0,"872":0,"873":0,"874":0,"877":0,"878":0,"879":0,"880":0,"883":0,"885":0,"897":1,"898":0,"900":0,"901":0,"902":0,"903":0,"905":0,"908":0,"909":0,"910":0,"911":0,"914":0,"915":0,"916":0,"917":0,"920":0,"922":0,"931":1,"932":0,"940":1,"941":0,"949":1,"950":0,"961":1,"962":0,"964":0,"965":0,"966":0,"967":0,"969":0,"971":0,"972":0,"974":0,"978":0,"979":0,"980":0,"984":0,"985":0,"986":0,"989":0,"990":0,"999":1,"1000":0,"1001":0,"1002":0,"1004":0,"1009":0,"1010":0,"1011":0,"1014":0,"1015":0,"1021":0,"1022":0,"1024":0,"1026":0,"1032":0,"1033":0,"1034":0,"1035":0,"1039":0,"1041":0,"1042":0,"1043":0,"1044":0,"1045":0,"1049":0,"1050":0,"1051":0,"1055":0,"1056":0,"1058":0,"1063":0,"1064":0,"1078":0,"1079":0,"1092":1,"1093":0,"1095":0,"1096":0,"1097":0,"1098":0,"1100":0,"1102":0,"1103":0,"1104":0,"1105":0,"1108":0,"1109":0,"1110":0,"1111":0,"1113":0,"1114":0,"1115":0,"1116":0,"1119":0,"1120":0,"1121":0,"1122":0,"1123":0,"1125":0,"1138":1,"1139":0,"1141":0,"1142":0,"1143":0,"1144":0,"1146":0,"1148":0,"1149":0,"1150":0,"1151":0,"1154":0,"1155":0,"1156":0,"1157":0,"1159":0,"1160":0,"1161":0,"1162":0,"1165":0,"1166":0,"1167":0,"1168":0,"1169":0,"1171":0,"1183":1,"1184":0,"1186":0,"1187":0,"1188":0,"1189":0,"1191":0,"1193":0,"1194":0,"1195":0,"1196":0,"1199":0,"1200":0,"1211":1,"1212":0,"1214":0,"1215":0,"1216":0,"1217":0,"1219":0,"1221":0,"1222":0,"1223":0,"1224":0,"1227":0,"1228":0,"1240":1,"1241":0,"1243":0,"1244":0,"1245":0,"1246":0,"1247":0,"1249":0,"1251":0,"1254":0,"1255":0,"1256":0,"1257":0,"1259":0,"1260":0,"1261":0,"1262":0,"1267":0,"1268":0,"1269":0,"1272":0,"1273":0,"1284":1,"1285":0,"1286":0,"1287":0,"1290":0,"1291":0,"1292":0,"1293":0,"1306":1,"1307":0,"1309":0,"1310":0,"1311":0,"1313":0,"1314":0,"1318":0,"1320":0,"1326":0,"1327":0,"1328":0,"1329":0,"1332":0,"1333":0,"1334":0,"1335":0,"1336":0,"1339":0,"1346":0,"1347":0,"1348":0,"1349":0,"1351":0,"1352":0,"1353":0,"1355":0,"1356":0,"1357":0,"1360":0,"1361":0,"1364":0,"1365":0,"1366":0,"1368":0,"1369":0,"1370":0,"1372":0,"1373":0,"1374":0,"1377":0,"1378":0,"1382":0,"1383":0,"1384":0,"1385":0,"1389":0,"1390":0,"1391":0,"1394":0,"1397":0,"1398":0,"1400":0,"1414":1,"1415":0,"1417":0,"1418":0,"1419":0,"1421":0,"1422":0,"1426":0,"1428":0,"1444":1,"1445":0,"1446":0,"1447":0,"1448":0,"1451":0,"1452":0,"1453":0,"1454":0,"1455":0,"1458":0,"1461":0,"1462":0,"1463":0,"1464":0,"1467":0,"1469":0,"1470":0,"1474":0,"1480":0,"1481":0,"1482":0,"1483":0,"1484":0,"1485":0,"1488":0,"1489":0,"1492":0,"1503":1,"1504":0,"1506":0,"1507":0,"1508":0,"1509":0,"1511":0,"1512":0,"1513":0,"1515":0,"1517":0,"1522":0,"1523":0,"1524":0,"1525":0,"1528":0,"1529":0,"1530":0,"1531":0,"1534":0,"1535":0,"1538":0,"1539":0,"1540":0,"1541":0,"1542":0,"1545":0,"1546":0,"1547":0,"1551":0,"1552":0,"1565":1,"1566":0,"1567":0,"1569":0,"1570":0,"1571":0,"1573":0,"1574":0,"1579":0,"1581":0,"1587":0,"1588":0,"1589":0,"1590":0,"1593":0,"1594":0,"1595":0,"1596":0,"1599":0,"1602":0,"1603":0,"1604":0,"1605":0,"1608":0,"1609":0,"1610":0,"1612":0,"1613":0,"1614":0,"1618":0,"1619":0,"1622":0,"1624":0,"1625":0,"1626":0,"1629":0,"1630":0,"1631":0,"1645":1,"1646":0,"1648":0,"1649":0,"1650":0,"1652":0,"1653":0,"1654":0,"1655":0,"1657":0,"1658":0,"1659":0,"1661":0,"1662":0,"1663":0,"1665":0,"1667":0,"1672":0,"1673":0,"1674":0,"1675":0,"1678":0,"1679":0,"1680":0,"1681":0,"1684":0,"1685":0,"1688":0,"1689":0,"1690":0,"1691":0,"1692":0,"1695":0,"1696":0,"1697":0,"1701":0,"1702":0,"1716":1,"1717":0,"1718":0,"1720":0,"1721":0,"1722":0,"1724":0,"1725":0,"1726":0,"1728":0,"1729":0,"1733":0,"1735":0,"1741":0,"1742":0,"1743":0,"1744":0,"1747":0,"1748":0,"1749":0,"1750":0,"1753":0,"1756":0,"1757":0,"1758":0,"1759":0,"1762":0,"1763":0,"1764":0,"1766":0,"1767":0,"1768":0,"1772":0,"1773":0,"1776":0,"1778":0,"1779":0,"1780":0,"1783":0,"1784":0,"1785":0,"1798":1,"1799":0,"1800":0,"1803":0,"1804":0,"1809":0,"1812":0,"1813":1,"1814":0,"1815":0,"1816":0,"1817":0,"1821":0,"1822":0,"1823":0,"1824":0,"1825":0,"1828":0,"1829":0,"1830":0,"1833":0,"1834":0,"1846":1,"1847":0,"1848":0,"1849":0,"1850":0,"1852":0,"1853":0,"1854":0,"1855":0,"1857":0,"1858":0,"1865":1,"1867":0,"1868":0,"1869":0,"1873":0,"1874":0,"1876":0,"1877":0,"1878":0,"1879":0,"1882":0,"1883":0,"1884":0,"1885":0,"1888":0,"1889":0,"1890":0,"1892":0,"1893":0,"1899":1}},"/home/travis/build/npmtest/node-npmtest-activedirectory/node_modules/activedirectory/lib/models/user.js":{"path":"/home/travis/build/npmtest/node-npmtest-activedirectory/node_modules/activedirectory/lib/models/user.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":11},"end":{"line":10,"column":32}}},"2":{"name":"isMemberOf","line":29,"loc":{"start":{"line":29,"column":28},"end":{"line":29,"column":55}}},"3":{"name":"(anonymous_3)","line":33,"loc":{"start":{"line":33,"column":34},"end":{"line":33,"column":49}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":30}},"2":{"start":{"line":10,"column":0},"end":{"line":21,"column":2}},"3":{"start":{"line":11,"column":2},"end":{"line":20,"column":3}},"4":{"start":{"line":12,"column":4},"end":{"line":16,"column":5}},"5":{"start":{"line":13,"column":6},"end":{"line":15,"column":7}},"6":{"start":{"line":14,"column":8},"end":{"line":14,"column":46}},"7":{"start":{"line":19,"column":3},"end":{"line":19,"column":32}},"8":{"start":{"line":29,"column":0},"end":{"line":36,"column":2}},"9":{"start":{"line":30,"column":2},"end":{"line":30,"column":29}},"10":{"start":{"line":30,"column":15},"end":{"line":30,"column":29}},"11":{"start":{"line":32,"column":2},"end":{"line":32,"column":38}},"12":{"start":{"line":33,"column":2},"end":{"line":35,"column":6}},"13":{"start":{"line":34,"column":4},"end":{"line":34,"column":61}},"14":{"start":{"line":38,"column":0},"end":{"line":38,"column":22}}},"branchMap":{"1":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":2},"end":{"line":11,"column":2}},{"start":{"line":11,"column":2},"end":{"line":11,"column":2}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":26},"end":{"line":12,"column":36}},{"start":{"line":12,"column":40},"end":{"line":12,"column":42}}]},"3":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":6},"end":{"line":13,"column":6}},{"start":{"line":13,"column":6},"end":{"line":13,"column":6}}]},"4":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"5":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":11},"end":{"line":32,"column":16}},{"start":{"line":32,"column":20},"end":{"line":32,"column":22}}]},"6":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":15},"end":{"line":33,"column":26}},{"start":{"line":33,"column":30},"end":{"line":33,"column":32}}]},"7":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":13},"end":{"line":34,"column":28}},{"start":{"line":34,"column":32},"end":{"line":34,"column":34}}]},"8":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":14},"end":{"line":34,"column":18}},{"start":{"line":34,"column":22},"end":{"line":34,"column":24}}]}},"code":["var _ = require('underscore');","","/** "," * Represents an ActiveDirectory user account."," *"," * @private"," * @param {Object} [properties] The properties to assign to the newly created item."," * @returns {User}"," */","var User = function(properties) {","  if (this instanceof User) {","    for (var property in (properties || {})) {","      if (Array.prototype.hasOwnProperty.call(properties, property)) {","        this[property] = properties[property];","      }","    }","  }","  else {","   return(new User(properties));","  }","};","","/**"," * Checks to see if the user is the member of the specified group."," *"," * @param {String} group The name of the group to check for membership."," * @returns {Boolean}"," */","User.prototype.isMemberOf = function isMemberOf(group) {","  if (! group) return(false);","","  group = (group || '').toLowerCase();","  return(_.any(this.groups || [], function(item) {","    return (((item || {}).cn || '').toLowerCase() === group);","  }));","};","","module.exports = User;",""],"l":{"1":1,"10":1,"11":0,"12":0,"13":0,"14":0,"19":0,"29":1,"30":0,"32":0,"33":0,"34":0,"38":1}},"/home/travis/build/npmtest/node-npmtest-activedirectory/node_modules/activedirectory/lib/models/group.js":{"path":"/home/travis/build/npmtest/node-npmtest-activedirectory/node_modules/activedirectory/lib/models/group.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":12},"end":{"line":8,"column":33}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":19,"column":2}},"2":{"start":{"line":9,"column":2},"end":{"line":18,"column":3}},"3":{"start":{"line":10,"column":4},"end":{"line":14,"column":5}},"4":{"start":{"line":11,"column":6},"end":{"line":13,"column":7}},"5":{"start":{"line":12,"column":8},"end":{"line":12,"column":46}},"6":{"start":{"line":17,"column":4},"end":{"line":17,"column":34}},"7":{"start":{"line":21,"column":0},"end":{"line":21,"column":23}}},"branchMap":{"1":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":2},"end":{"line":9,"column":2}},{"start":{"line":9,"column":2},"end":{"line":9,"column":2}}]},"2":{"line":10,"type":"binary-expr","locations":[{"start":{"line":10,"column":26},"end":{"line":10,"column":36}},{"start":{"line":10,"column":40},"end":{"line":10,"column":42}}]},"3":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":6},"end":{"line":11,"column":6}},{"start":{"line":11,"column":6},"end":{"line":11,"column":6}}]}},"code":["/** "," * Represents an ActiveDirectory group"," *"," * @private"," * @param {Object} [properties] The properties to assign to the newly created item."," * @returns {Group}"," */","var Group = function(properties) {","  if (this instanceof Group) {","    for (var property in (properties || {})) {","      if (Array.prototype.hasOwnProperty.call(properties, property)) {","        this[property] = properties[property];","      }","    }","  }","  else {","    return(new Group(properties));","  }","};","","module.exports = Group;",""],"l":{"8":1,"9":0,"10":0,"11":0,"12":0,"17":0,"21":1}},"/home/travis/build/npmtest/node-npmtest-activedirectory/node_modules/activedirectory/lib/client/rangeretrievalspecifierattribute.js":{"path":"/home/travis/build/npmtest/node-npmtest-activedirectory/node_modules/activedirectory/lib/client/rangeretrievalspecifierattribute.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":1,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":1,"43":0,"44":0,"45":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"parseRangeRetrievalSpecifierAttribute","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":58}}},"2":{"name":"(anonymous_2)","line":32,"loc":{"start":{"line":32,"column":39},"end":{"line":32,"column":59}}},"3":{"name":"next","line":56,"loc":{"start":{"line":56,"column":50},"end":{"line":56,"column":66}}},"4":{"name":"isComplete","line":76,"loc":{"start":{"line":76,"column":56},"end":{"line":76,"column":78}}},"5":{"name":"toString","line":87,"loc":{"start":{"line":87,"column":54},"end":{"line":87,"column":74}}},"6":{"name":"getRangeAttributes","line":101,"loc":{"start":{"line":101,"column":64},"end":{"line":101,"column":98}}},"7":{"name":"isRangeAttribute","line":120,"loc":{"start":{"line":120,"column":62},"end":{"line":120,"column":99}}},"8":{"name":"hasRangeAttributes","line":133,"loc":{"start":{"line":133,"column":64},"end":{"line":133,"column":98}}},"9":{"name":"(anonymous_9)","line":134,"loc":{"start":{"line":134,"column":35},"end":{"line":134,"column":55}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":30}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":45}},"3":{"start":{"line":14,"column":0},"end":{"line":22,"column":1}},"4":{"start":{"line":15,"column":2},"end":{"line":15,"column":36}},"5":{"start":{"line":16,"column":2},"end":{"line":16,"column":33}},"6":{"start":{"line":17,"column":2},"end":{"line":21,"column":5}},"7":{"start":{"line":32,"column":0},"end":{"line":48,"column":1}},"8":{"start":{"line":33,"column":2},"end":{"line":47,"column":3}},"9":{"start":{"line":34,"column":4},"end":{"line":34,"column":101}},"10":{"start":{"line":34,"column":21},"end":{"line":34,"column":101}},"11":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"12":{"start":{"line":36,"column":6},"end":{"line":36,"column":67}},"13":{"start":{"line":39,"column":4},"end":{"line":43,"column":5}},"14":{"start":{"line":40,"column":6},"end":{"line":42,"column":7}},"15":{"start":{"line":41,"column":8},"end":{"line":41,"column":45}},"16":{"start":{"line":46,"column":4},"end":{"line":46,"column":60}},"17":{"start":{"line":56,"column":0},"end":{"line":68,"column":1}},"18":{"start":{"line":57,"column":2},"end":{"line":57,"column":18}},"19":{"start":{"line":59,"column":2},"end":{"line":66,"column":3}},"20":{"start":{"line":60,"column":4},"end":{"line":60,"column":23}},"21":{"start":{"line":61,"column":4},"end":{"line":61,"column":25}},"22":{"start":{"line":63,"column":4},"end":{"line":63,"column":24}},"23":{"start":{"line":64,"column":4},"end":{"line":64,"column":40}},"24":{"start":{"line":65,"column":4},"end":{"line":65,"column":17}},"25":{"start":{"line":67,"column":2},"end":{"line":67,"column":15}},"26":{"start":{"line":76,"column":0},"end":{"line":79,"column":1}},"27":{"start":{"line":77,"column":2},"end":{"line":77,"column":18}},"28":{"start":{"line":78,"column":2},"end":{"line":78,"column":69}},"29":{"start":{"line":87,"column":0},"end":{"line":91,"column":1}},"30":{"start":{"line":88,"column":2},"end":{"line":88,"column":18}},"31":{"start":{"line":90,"column":2},"end":{"line":90,"column":90}},"32":{"start":{"line":101,"column":0},"end":{"line":110,"column":2}},"33":{"start":{"line":102,"column":2},"end":{"line":102,"column":22}},"34":{"start":{"line":103,"column":2},"end":{"line":108,"column":3}},"35":{"start":{"line":104,"column":4},"end":{"line":107,"column":5}},"36":{"start":{"line":105,"column":6},"end":{"line":105,"column":66}},"37":{"start":{"line":106,"column":6},"end":{"line":106,"column":29}},"38":{"start":{"line":109,"column":2},"end":{"line":109,"column":52}},"39":{"start":{"line":120,"column":0},"end":{"line":123,"column":2}},"40":{"start":{"line":121,"column":2},"end":{"line":121,"column":36}},"41":{"start":{"line":122,"column":2},"end":{"line":122,"column":29}},"42":{"start":{"line":133,"column":0},"end":{"line":137,"column":2}},"43":{"start":{"line":134,"column":2},"end":{"line":136,"column":6}},"44":{"start":{"line":135,"column":4},"end":{"line":135,"column":83}},"45":{"start":{"line":139,"column":0},"end":{"line":139,"column":50}}},"branchMap":{"1":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":10},"end":{"line":20,"column":28}},{"start":{"line":20,"column":32},"end":{"line":20,"column":36}}]},"2":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"3":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]},"4":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":35,"column":4}},{"start":{"line":35,"column":4},"end":{"line":35,"column":4}}]},"5":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":6},"end":{"line":40,"column":6}},{"start":{"line":40,"column":6},"end":{"line":40,"column":6}}]},"6":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":2},"end":{"line":59,"column":2}},{"start":{"line":59,"column":2},"end":{"line":59,"column":2}}]},"7":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":7},"end":{"line":59,"column":24}},{"start":{"line":59,"column":30},"end":{"line":59,"column":51}}]},"8":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":10},"end":{"line":78,"column":27}},{"start":{"line":78,"column":33},"end":{"line":78,"column":66}}]},"9":{"line":90,"type":"cond-expr","locations":[{"start":{"line":90,"column":72},"end":{"line":90,"column":81}},{"start":{"line":90,"column":84},"end":{"line":90,"column":87}}]},"10":{"line":103,"type":"binary-expr","locations":[{"start":{"line":103,"column":24},"end":{"line":103,"column":28}},{"start":{"line":103,"column":32},"end":{"line":103,"column":34}}]},"11":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":104,"column":4}},{"start":{"line":104,"column":4},"end":{"line":104,"column":4}}]},"12":{"line":109,"type":"cond-expr","locations":[{"start":{"line":109,"column":33},"end":{"line":109,"column":43}},{"start":{"line":109,"column":46},"end":{"line":109,"column":50}}]},"13":{"line":134,"type":"binary-expr","locations":[{"start":{"line":134,"column":22},"end":{"line":134,"column":26}},{"start":{"line":134,"column":30},"end":{"line":134,"column":32}}]}},"code":["var _ = require('underscore');","","// [attribute];range=[low]-[high]","// matching: 1 = name, 2 = low, 3 = high","var pattern = '^([^;]+);range=(\\\\d+)-(.+)?$'; ","","/**"," * Parses the range retrieval specifier into an object."," * "," * @private"," * @param {String} range The range retrieval specifier to parse."," * @returns {RangeRetrievalSpecifier}"," */","function parseRangeRetrievalSpecifierAttribute(attribute) {","  var re = new RegExp(pattern, 'i');","  var match = re.exec(attribute);","  return({","    attributeName: match[1],","    low: parseInt(match[2]),","    high: parseInt(match[3]) || null","  });","};","","/**"," * Multi-valued attribute range retreival specifier."," *"," * @private"," * @constructor"," * @param {String|Object} attribute The actual attribute name. May also contain a full range retrieval specifier for parsing. (i.e. [attribute];range=[low]-[high]). Optionally an object can be specified."," * @returns {RangeRetrievalSpecifierAttribute}"," */","var RangeRetrievalSpecifierAttribute = function(attribute) {","  if (this instanceof RangeRetrievalSpecifierAttribute) {","    if (! attribute) throw new Error('No attribute provided to create a range retrieval specifier.');","    if (typeof(attribute) === 'string') {","      attribute = parseRangeRetrievalSpecifierAttribute(attribute);","    }","","    for(var property in attribute) {","      if (Array.prototype.hasOwnProperty.call(attribute, property)) {","        this[property] = attribute[property];","      }","    }","  }","  else {","    return(new RangeRetrievalSpecifierAttribute(attribute));","  }","}","","/** "," * Gets the next range retrieval specifier for a query."," *"," * @private"," * @returns {String}"," */","RangeRetrievalSpecifierAttribute.prototype.next = function next() {","  var self = this;","","  if ((self.high != null) && (self.high != self.low)) {","    var low = self.low;","    var high = self.high;","","    self.low = high + 1;","    self.high = high + (high - low) + 1;","    return(this);","  }","  return(null);","}","","/** "," * Checks to see if the range specifier has been exhausted or completed."," *"," * @private"," * @returns {Boolean}"," */","RangeRetrievalSpecifierAttribute.prototype.isComplete = function isComplete() {","  var self = this;","  return((self.high == null) || (typeof(self.high) === 'undefined'));","}","","/** "," * Gets the string representation of the range retrieval specifier."," *"," * @private"," * @returns {String}"," */","RangeRetrievalSpecifierAttribute.prototype.toString = function toString() {","  var self = this;","","  return(self.attributeName + ';range=' + self.low + '-' + (self.high ? self.high : '*'));","}","","/**"," * Retrieves all of the attributes which have range attributes specified."," * "," * @private"," * @static"," * @param {Object} item The value to extract the range retrieval attributes from."," * @returns {Array[RangeRetrievalSpecifierAttribute]}"," */","RangeRetrievalSpecifierAttribute.prototype.getRangeAttributes = function getRangeAttributes(item) {","  var attributes = [];","  for(var attribute in (item || {})) {","    if (RangeRetrievalSpecifierAttribute.prototype.isRangeAttribute(attribute)) {","      var range = new RangeRetrievalSpecifierAttribute(attribute);","      attributes.push(range);","    }","  }","  return(attributes.length > 0 ? attributes : null);","};","","/**"," * Checks to see if the specified attribute is a range retrieval attribute."," * "," * @private"," * @static"," * @param {String} attribute The attribute to inspect."," * @returns {Boolean}"," */","RangeRetrievalSpecifierAttribute.prototype.isRangeAttribute = function isRangeAttribute(attribute) {","  var re = new RegExp(pattern, 'i');","  return(re.test(attribute));","};","","/**"," * Checks to see if the specified object has any range retrieval attributes."," * "," * @private"," * @static"," * @param {Object} item The value to check for range retrieval specifiers."," * @returns {Boolean}"," */","RangeRetrievalSpecifierAttribute.prototype.hasRangeAttributes = function hasRangeAttributes(item) {","  return(_.any(_.keys(item || {}), function(attribute) {","    return(RangeRetrievalSpecifierAttribute.prototype.isRangeAttribute(attribute));","  }));","};","","module.exports = RangeRetrievalSpecifierAttribute;",""],"l":{"1":1,"5":1,"14":1,"15":0,"16":0,"17":0,"32":1,"33":0,"34":0,"35":0,"36":0,"39":0,"40":0,"41":0,"46":0,"56":1,"57":0,"59":0,"60":0,"61":0,"63":0,"64":0,"65":0,"67":0,"76":1,"77":0,"78":0,"87":1,"88":0,"90":0,"101":1,"102":0,"103":0,"104":0,"105":0,"106":0,"109":0,"120":1,"121":0,"122":0,"133":1,"134":0,"135":0,"139":1}}}